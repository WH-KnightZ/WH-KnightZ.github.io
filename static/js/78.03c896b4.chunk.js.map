{"version":3,"sources":["views/user/consulting/ScheduleWebinarTreatments.tsx","views/user/consulting/ScheduleWebinar.tsx"],"names":["ScheduleWebinarTreatments","props","show","treatments","selectedTreatments","setSelectedTreatments","handleClose","size","style","height","centered","onClose","closeOnBackdrop","closeButton","className","overflowY","overflowX","data","map","treatment","index","alt","width","borderRadius","src","thumbnail","tile","type","checked","includes","onChange","filter","item","handleChange","id","listHours","Array","from","length","_","substr","listMinutes","listHourRanges","Math","floor","ScheduleWebinar","callApi","history","useHistory","useState","modal","setModal","minHour","ceil","Date","getTime","when","setWhen","timestampToHour","start","setStart","minHourBegin","minHourBeginIndex","findIndex","moment","format","today","title","setTitle","hour","setHour","min","setMin","description","setDescription","raisedHands","setRaisedHands","video","setVideo","whoJoin","setWhoJoin","useEffect","toDateString","attention","setAttention","dirty","textAlign","display","justifyContent","color","onClick","push","position","alignItems","left","maxLength","value","e","target","placeholder","date","setDate","minDate","fullWidth","slice","borderTop","borderBottom","rows","name","disabled","trim","method","api","config","rest","nurseCreateMeeting","body","start_date","duration","Number","diseases","raised_hand","video_enable","permission_view","loading","response","status","SUCCESS","ScheduleWebinarWrapper","dispatch","useDispatch","payload","callback","callApiAction","setTreatments","getAllTreatments","group_treatments","reduce","acc","list_diseases"],"mappings":"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","file":"static/js/78.03c896b4.chunk.js","sourcesContent":["import React from 'react';\nimport { CModalBody } from '@coreui/react';\nimport { CModal, CModalHeader } from '../../../components';\n\ninterface Props {\n  show: boolean;\n  treatments: any;\n  selectedTreatments: any;\n  setSelectedTreatments: any;\n  handleClose: any;\n}\n\nconst ScheduleWebinarTreatments: React.FC<Props> = (props) => {\n  const { show, treatments, selectedTreatments, setSelectedTreatments, handleClose } = props;\n\n  const handleChange = (index: number) => {\n    setSelectedTreatments((selectedTreatments: any) => {\n      if (selectedTreatments.includes(index)) return selectedTreatments.filter((item: any) => item !== index);\n      else return [...selectedTreatments, index];\n    });\n  };\n\n  return (\n    <CModal size=\"lg\" style={{ height: '90vh' }} centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader closeButton>Treatments</CModalHeader>\n      <CModalBody className=\"px-0 py-3\" style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n        <div className=\"py-2 px-5\">\n          <h3 className=\"mb-3\">Treatments</h3>\n          {treatments.data.map((treatment: { id: string; tile: string; thumbnail: string }, index: number) => (\n            <div key={treatment.id} className=\"d-flex justify-content-between p-2\">\n              <div>\n                <img\n                  className=\"mr-3\"\n                  alt=\"treatment-thumbnail\"\n                  style={{ width: 60, height: 40, borderRadius: 10 }}\n                  src={treatment.thumbnail}\n                />\n                {treatment.tile}\n              </div>\n              <div>\n                <input\n                  style={{ width: 20, height: 20 }}\n                  type=\"checkbox\"\n                  className=\"form-control\"\n                  checked={selectedTreatments.includes(index)}\n                  onChange={() => handleChange(index)}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default ScheduleWebinarTreatments;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { DatePicker, CModal } from '../../../components';\nimport { timestampToHour } from '../../../utils';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport ScheduleWebinarTreatments from './ScheduleWebinarTreatments';\nimport { CModalBody, CModalFooter } from '@coreui/react';\n\nconst listHours = Array.from({ length: 24 }, (_, id) => ('0' + id).substr(-2));\nconst listMinutes = Array.from({ length: 60 }, (_, id) => ('0' + id).substr(-2));\nconst listHourRanges = Array.from(\n  { length: 24 * 2 },\n  (_, id) => ('0' + Math.floor(id / 2)).substr(-2) + ':' + ('0' + Math.floor(id % 2) * 30).substr(-2),\n);\n\ninterface Props {\n  callApi: any;\n  treatments: any;\n}\n\nconst ScheduleWebinar: React.FC<Props> = (props) => {\n  const { callApi, treatments } = props;\n\n  const history = useHistory();\n\n  const [modal, setModal] = useState(false);\n\n  const minHour = Math.ceil(new Date().getTime() / 1800000) * 1800;\n\n  const [when, setWhen] = useState(new Date(minHour * 1000));\n  const [start, setStart] = useState(timestampToHour(minHour));\n\n  const minHourBegin = new Date(minHour * 1000);\n  const minHourBeginIndex = listHourRanges.findIndex(\n    (item: string) => minHourBegin <= new Date(`${moment(when).format('MM/DD/YYYY')} ${item}`),\n  );\n\n  const today = new Date();\n  const [selectedTreatments, setSelectedTreatments] = useState([]);\n  const [title, setTitle] = useState('');\n  const [hour, setHour] = useState('01');\n  const [min, setMin] = useState('00');\n  const [description, setDescription] = useState('');\n  const [raisedHands, setRaisedHands] = useState(false);\n  const [video, setVideo] = useState(false);\n  const [whoJoin, setWhoJoin] = useState(0);\n\n  useEffect(() => {\n    if (minHourBegin > new Date(`${moment(when).format('MM/DD/YYYY')} ${start}`)) {\n      setStart(timestampToHour(minHour));\n    }\n    if (today.toDateString() !== when.toDateString()) setStart('00:00');\n  }, [when]);\n\n  const isValid = () => {\n    return title.trim() !== '';\n  };\n\n  const onSubmit = () => {\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.nurseCreateMeeting(),\n        body: {\n          title,\n          start_date: new Date(`${moment(when).format('MM/DD/YYYY')} ${start}`).getTime() / 1000,\n          duration: Number(hour) * 3600 + Number(min) * 60,\n          diseases: selectedTreatments.map((index: number) => {\n            return { id: treatments.data[index].id };\n          }),\n          description,\n          raised_hand: raisedHands,\n          video_enable: video,\n          permission_view: whoJoin,\n        },\n        loading: true,\n      },\n      (response: any) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          history.push('/consulting');\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState({ show: false });\n\n  const dirty =\n    title === '' &&\n    hour === '01' &&\n    min === '00' &&\n    when.toDateString() === minHourBegin.toDateString() &&\n    start === timestampToHour(minHour) &&\n    description === '' &&\n    selectedTreatments.length === 0 &&\n    raisedHands === false &&\n    video === false &&\n    whoJoin === 0;\n\n  const showAttention = () => {\n    if (dirty) {\n      history.push('/consulting');\n      return;\n    }\n    setAttention({ ...attention, show: true });\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <CModal size=\"sm\" show={attention.show} centered closeOnBackdrop={false}>\n        <CModalBody style={{ textAlign: 'center' }}>Are you sure you want to discard this new webinar?</CModalBody>\n        <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <button\n            className=\"btn btn-danger\"\n            style={{ width: 160 }}\n            color=\"danger\"\n            onClick={() => history.push('/consulting')}\n          >\n            Discard Changes\n          </button>\n          <button\n            style={{ width: 160 }}\n            className=\"btn btn-primary\"\n            onClick={() => setAttention({ ...attention, show: false })}\n          >\n            Keep Editing\n          </button>\n        </CModalFooter>\n      </CModal>\n\n      <div style={{ width: '50%' }}>\n        <ScheduleWebinarTreatments\n          show={modal}\n          handleClose={() => setModal(false)}\n          treatments={treatments}\n          selectedTreatments={selectedTreatments}\n          setSelectedTreatments={setSelectedTreatments}\n        />\n        <h3 className=\"mt-4\" style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\n          Schedule a Webinar\n          <i\n            className=\"fa fa-angle-left mr-2 cursor-pointer size-2\"\n            style={{ position: 'absolute', left: -24 }}\n            onClick={showAttention}\n          />\n        </h3>\n        <input\n          maxLength={100}\n          value={title}\n          onChange={(e: any) => setTitle(e.target.value)}\n          className=\"form-control my-3\"\n          placeholder=\"Title\"\n        />\n        <div className=\"d-flex align-items-center mb-3\">\n          <div className=\"font-weight-bold\" style={{ width: 100 }}>\n            When\n          </div>\n          <div>\n            <DatePicker format=\"DD.MM.YYYY\" date={when} setDate={setWhen} minDate={today} fullWidth />\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center mb-3\">\n          <div className=\"font-weight-bold\" style={{ width: 100 }}>\n            Start\n          </div>\n          <div>\n            <select className=\"form-control\" value={start} onChange={(e: any) => setStart(e.target.value)}>\n              {listHourRanges.slice(minHourBeginIndex).map((item: string, index: any) => (\n                <option key={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center mb-3\">\n          <div className=\"font-weight-bold\" style={{ width: 100 }}>\n            Duration\n          </div>\n          <div className=\"mr-3\">\n            <select className=\"form-control\" value={hour} onChange={(e: any) => setHour(e.target.value)}>\n              {listHours.map((item: string) => (\n                <option key={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n          hr\n          <div className=\"ml-4 mr-3\">\n            <select className=\"form-control\" value={min} onChange={(e: any) => setMin(e.target.value)}>\n              {listMinutes.map((item: string) => (\n                <option key={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n          min\n        </div>\n        <div className=\"my-4 py-3\" style={{ borderTop: '2px solid #ccc', borderBottom: '2px solid #ccc' }}>\n          <div className=\"d-flex align-items-center my-2\">\n            <div className=\"d-flex align-items-center cursor-pointer\" onClick={() => setModal(true)}>\n              <div className=\"size-0 mr-3\">Treatments</div>\n              <i className=\"fa fa-angle-right size-0\" />\n            </div>\n          </div>\n          <div className=\"px-4\">\n            {selectedTreatments.map((index: number) => {\n              const treatment: { id: string; tile: string; thumbnail: string } = treatments.data[index];\n              return (\n                <div className=\"d-flex justify-content-between pt-2 px-4 pb-1\">\n                  <div>\n                    <img\n                      className=\"mr-3\"\n                      alt=\"treatment-thumbnail\"\n                      style={{ width: 60, height: 40, borderRadius: 5 }}\n                      src={treatment.thumbnail}\n                    />\n                    {treatment.tile}\n                  </div>\n                  <i\n                    className=\"fa fa-times cursor-pointer\"\n                    style={{ color: 'gray' }}\n                    onClick={() => setSelectedTreatments(selectedTreatments.filter((item: any) => item !== index))}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"my-4\">\n          <textarea\n            maxLength={500}\n            className=\"form-control\"\n            rows={5}\n            placeholder=\"Description\"\n            value={description}\n            onChange={(e: any) => setDescription(e.target.value)}\n          />\n        </div>\n        <div className=\"pt-4 pb-3\" style={{ borderTop: '2px solid #ccc' }}>\n          <div className=\"font-weight-bold mb-3\">Paticipant Settings</div>\n          <div className=\"ml-4\">\n            <div className=\"d-flex mb-3\">\n              <div style={{ width: 120 }}>Raised hands</div>\n              On{' '}\n              <input\n                name=\"raisedHands\"\n                type=\"radio\"\n                className=\"form-control\"\n                onChange={() => setRaisedHands(true)}\n                checked={raisedHands === true}\n              />\n              Off{' '}\n              <input\n                name=\"raisedHands\"\n                type=\"radio\"\n                className=\"form-control\"\n                onChange={() => setRaisedHands(false)}\n                checked={raisedHands === false}\n              />\n            </div>\n            <div className=\"d-flex mb-3\">\n              <div style={{ width: 120 }}>Video</div>\n              On{' '}\n              <input\n                name=\"video\"\n                type=\"radio\"\n                className=\"form-control\"\n                onChange={() => setVideo(true)}\n                checked={video === true}\n              />\n              Off{' '}\n              <input\n                name=\"video\"\n                type=\"radio\"\n                className=\"form-control\"\n                onChange={() => setVideo(false)}\n                checked={video === false}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-2\">\n          <div className=\"font-weight-bold mb-3\">Who can join the webinar?</div>\n          <div className=\"d-flex ml-4\">\n            All{' '}\n            <input\n              name=\"whoJoin\"\n              type=\"radio\"\n              className=\"form-control\"\n              onChange={() => setWhoJoin(0)}\n              checked={whoJoin === 0}\n            />\n            Nurses{' '}\n            <input\n              name=\"whoJoin\"\n              type=\"radio\"\n              className=\"form-control\"\n              onChange={() => setWhoJoin(1)}\n              checked={whoJoin === 1}\n            />\n            Basic members{' '}\n            <input\n              name=\"whoJoin\"\n              type=\"radio\"\n              className=\"form-control\"\n              onChange={() => setWhoJoin(2)}\n              checked={whoJoin === 2}\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-evenly my-5\">\n          <button className=\"btn btn-primary\" style={{ width: 150 }} disabled={!isValid()} onClick={onSubmit}>\n            Schedule\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ScheduleWebinarWrapper: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n  const [treatments, setTreatments] = useState<any>({ data: [], loading: true });\n\n  useEffect(() => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getAllTreatments(),\n        loading: true,\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          setTreatments({\n            data: data.group_treatments.reduce((acc: any, item: any) => [...acc, ...item.list_diseases], []),\n            loading: false,\n          });\n        }\n      },\n    );\n  }, []);\n\n  if (treatments.loading) return <div />;\n\n  return <ScheduleWebinar callApi={callApi} treatments={treatments} />;\n};\n\nexport { ScheduleWebinar };\nexport default ScheduleWebinarWrapper;\n"],"sourceRoot":""}