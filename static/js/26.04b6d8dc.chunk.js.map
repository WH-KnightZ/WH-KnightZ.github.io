{"version":3,"sources":["views/user/authContainers/Header.tsx","views/user/authContainers/Header.module.scss","views/user/authContainers/Container.tsx","views/user/authContainers/Container.module.scss","views/user/forgotPassword/ForgotPassword.module.scss","views/user/forgotPassword/ForgotPassword.tsx"],"names":["Header","className","styles","header","logoMain","module","exports","Container","props","children","wrapper","container","cardWrapper","cardBody","validationSchema","values","Yup","shape","email","min","matches","config","validate","validateEmail","required","ForgotPassword","history","useHistory","callApi","useApi","initialValues","URLSearchParams","location","search","get","useState","show","title","content","popup","setPopup","handleClose","gotoSignIn","push","formRef","useRef","useEffect","current","validateForm","up","btnText","upCallback","onClick","innerRef","onSubmit","method","api","rest","forgotPasswordUser","loading","msg","messages","forgotPasswordFailure","response","id","status","text_de","SUCCESS","ERROR","resendVerifyEmail","upText","resend","errors","handleChange","handleBlur","handleSubmit","isValid","type","color","btnSignUp","hbIcon","cardTitle","cardContent","placeholder","autoComplete","invalid","name","maxLength","value","onChange","e","target","includes","onBlur","error","xs","disabled","btnClassName","btnSubmit"],"mappings":"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","file":"static/js/26.04b6d8dc.chunk.js","sourcesContent":["import { CHeader } from '@coreui/react';\nimport React from 'react';\nimport { logoMain } from '../../../extensions';\nimport styles from './Header.module.scss';\n\nconst Header: React.FC = () => {\n  return <CHeader className={styles.header}>{logoMain}</CHeader>;\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Keph\"};","import React from 'react';\nimport { CContainer } from '@coreui/react';\nimport styles from './Container.module.scss';\nimport Header from './Header';\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n};\n\nconst Container: React.FC<Props> = (props) => {\n  const { className = '', children } = props;\n\n  return (\n    <div className={`hb-user c-app c-default-layout flex-row align-items-center ${styles.wrapper} ${className}`}>\n      <Header />\n      <CContainer className={styles.container}>\n        <div className={styles.cardWrapper}>\n          <div className={styles.cardBody}>{children}</div>\n        </div>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__z5goK\",\"container\":\"Container_container__3GmCQ\",\"cardWrapper\":\"Container_cardWrapper__17yG1\",\"cardBody\":\"Container_cardBody__1YCba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"ForgotPassword_inputText__WLMP3\",\"cardTitle\":\"ForgotPassword_cardTitle__2LAJg\",\"cardContent\":\"ForgotPassword_cardContent__2FAFl\",\"inputPassword\":\"ForgotPassword_inputPassword__3cEd1\",\"inputTextPassword\":\"ForgotPassword_inputTextPassword__WVTmr\",\"iconPassword\":\"ForgotPassword_iconPassword__p-42_\",\"email\":\"ForgotPassword_email__1fapw\",\"forgotPassword\":\"ForgotPassword_forgotPassword__3ckC-\",\"btnSubmit\":\"ForgotPassword_btnSubmit__1ayl4\",\"createAccount\":\"ForgotPassword_createAccount__75cvw\",\"register_link\":\"ForgotPassword_register_link__38ALX\",\"header\":\"ForgotPassword_header__2EoMy\",\"accept\":\"ForgotPassword_accept__oasTY\",\"link\":\"ForgotPassword_link__KCeg1\",\"btnSignUp\":\"ForgotPassword_btnSignUp__2ekLI\",\"hbIcon\":\"ForgotPassword_hbIcon__34xm0\",\"lbTermsOfService\":\"ForgotPassword_lbTermsOfService__3w4Re\",\"formGroupActions\":\"ForgotPassword_formGroupActions__1SJSN\"};","import React, { useEffect, useRef, useState } from 'react';\nimport { CCol, CForm, CRow, CFormGroup } from '@coreui/react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport config from '../../../config';\nimport { ERROR, SUCCESS } from '../../../store/callApi/actions';\nimport { validate } from '../../../utils';\nimport styles from './ForgotPassword.module.scss';\nimport ContainerAuth from '../authContainers/Container';\nimport { HBButton, HBButtonSmall, HBModalConfirm, HBFocusInput } from 'hbBaseClass';\nimport { useApi } from 'store/callApi';\nimport { Formik } from 'formik';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    email: Yup.string()\n      .min(3, 'Das E-Mail Format ist nicht korrekt.')\n      .matches(config.validate.validateEmail(), 'Das E-Mail Format ist nicht korrekt.')\n      .required('E-Mail ist erforderlich!'),\n  });\n};\n\nconst ForgotPassword: React.FC<RouteComponentProps> = (props) => {\n  const history = useHistory();\n  const { callApi } = useApi();\n\n  const query = new URLSearchParams(props.location?.search);\n  const email = query.get('email') || '';\n\n  const initialValues = { email };\n\n  const [popup, setPopup] = useState<any>({ show: false, title: '', content: '' });\n\n  /**\n   * Close the popup\n   */\n  const handleClose = () => {\n    setPopup({ ...popup, show: false });\n  };\n\n  /**\n   * Go to Sign In screen\n   */\n  const gotoSignIn = () => {\n    history.push('/sign-in');\n  };\n\n  const formRef = useRef<any>();\n\n  /**\n   * Validate form on init\n   */\n  useEffect(() => {\n    formRef?.current?.validateForm();\n  }, []);\n\n  const resend = (email: string) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.resendVerifyEmail(email),\n        // msg: config.messages.resendVerifyEmailFailure,\n        loading: true,\n      },\n      ({ text_de }) => {\n        setPopup({\n          show: true,\n          title: 'Information',\n          content: text_de || 'Fehler beim erneuten Senden der Verifizierungs-E-Mail.',\n          upText: 'Verstanden',\n          handleClose: gotoSignIn,\n          onClick: gotoSignIn,\n        });\n      },\n    );\n  };\n\n  const onSubmit = (values: { email: string }) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.forgotPasswordUser(values.email),\n        loading: true,\n        msg: config.messages.forgotPasswordFailure,\n      },\n      (response) => {\n        const { id, status, text_de } = response;\n        if (status === SUCCESS)\n          setPopup({\n            show: true,\n            title: 'Information',\n            content:\n              'Wir haben Ihnen gerade eine E-Mail gesendet. Bitte folgen Sie den Anweisungen dort, um Ihr Passwort zurÃ¼ckzusetzen.',\n            handleClose: gotoSignIn,\n          });\n        if (status === ERROR) {\n          if (id === '1116')\n            setPopup({\n              show: true,\n              title: 'Vergessen fehlgeschlagen',\n              content: text_de,\n              onClick: () => resend(values.email),\n              btnText: 'Erneut senden',\n            });\n          else\n            setPopup({\n              show: true,\n              title: 'Information',\n              content: text_de || 'Ihre E-Mail Adresse konnte nicht gefunden werden. Bitte versuchen Sie es erneut.',\n              onClick: handleClose,\n            });\n        }\n      },\n    );\n  };\n\n  return (\n    <div className=\"petrol\">\n      <HBModalConfirm\n        show={popup.show}\n        handleClose={popup.handleClose || handleClose}\n        title={popup.title}\n        content={popup.content}\n        up={popup.btnText || 'Verstanden'}\n        upCallback={() => (popup.onClick ? popup.onClick() : gotoSignIn())}\n      />\n      <ContainerAuth className=\"FormSignUp-container\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          validate={validate(validationSchema)}\n          onSubmit={onSubmit}\n        >\n          {({ values, errors, handleChange, handleBlur, handleSubmit, isValid }) => (\n            <CForm onSubmit={handleSubmit}>\n              <HBButtonSmall\n                type=\"button\"\n                color=\"petrol\"\n                onClick={() => history.push('/sign-in')}\n                className={styles.btnSignUp}\n              >\n                <i className={`hb-icon-arrow-left ${styles.hbIcon}`} /> ZurÃ¼ck\n              </HBButtonSmall>\n              <h1 className={styles.cardTitle}>\n                Passwort\n                <br />\n                vergessen?\n              </h1>\n              <p className={styles.cardContent}>\n                Bitte geben Sie Ihre E-Mail Adresse ein und wir senden Ihnen sofort einen Link, damit Sie Ihr Passwort\n                zurÃ¼cksetzen kÃ¶nnen.\n              </p>\n              <HBFocusInput\n                type=\"email\"\n                className=\"mb-0\"\n                placeholder=\"E-Mail\"\n                autoComplete=\"email\"\n                invalid={values.email !== '' && !!errors.email}\n                name=\"email\"\n                maxLength={50}\n                value={values.email}\n                onChange={(e: any) => {\n                  if (!e.target.value.includes(' ')) handleChange(e);\n                }}\n                onBlur={handleBlur}\n                error={errors?.email}\n              />\n              <CFormGroup className=\"m-0\">\n                <CRow>\n                  <CCol xs=\"12\">\n                    <HBButton\n                      color=\"violet\"\n                      children=\"Passwort zurÃ¼cksetzen\"\n                      disabled={!isValid}\n                      btnClassName={styles.btnSubmit}\n                    />\n                  </CCol>\n                </CRow>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </ContainerAuth>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}