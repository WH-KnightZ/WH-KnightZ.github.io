{"version":3,"sources":["views/user/mobility/Frame.tsx","utilities/datetime.ts","utilities/format.ts","utilities/validate.ts","utilities/request.ts","views/user/mobility/Hashtag.module.scss","views/user/mobility/Hashtag.tsx"],"names":["mappingSize","large","medium","small","Frame","props","size","render","className","style","width","height","getScheduleTimeOptions","currentTime","options","maxTime","MAX_SCHEDULE_TIME","validTimes","listHours","filter","timeItem","map","value","label","getScheduleTimeStart","defaultTime","timeStart","moment","add","format","find","getScheduleMinTimeEnd","additionalHours","mmTimeStart","MAX_SCHEDULE_TIME_START","getDefaultTimeEnd","pluralize","word","suffixPlural","pluralizeExcercise","validateBookAppointmentAnswers","questions","answers","every","questionItem","questionId","id","required","question_type","qAnswers","answerValues","reduce","acc","answerItem","answer_title","answer","parentQuestionId","QUESTION_TYPES","YES_NO","RADIO","includes","TEXTBOX","length","MAX_QA_INPUT_LENGTH","MAX_SUB_QA_INPUT_LENGTH","currentAnswerData","qAnswer","sub_questions","isValidBookAppointmentSchedule","scheduleData","selectedOption","specificDate","currentDate","hours","duration","diff","asHours","specificDateVal","SCHEDULE_OPTIONS","TOMORROW","LATER","VALID_TIME_START_SUBMIT","convertAppointmentScheduleTime","timeEnd","mmAppointmentDate","TODAY","appointmentDate","appointment_time_begin","utc","unix","appointment_time_end","getBookAppointmentRequestParams","appointmentData","appointmentType","APPOINTMENT_TYPE_VALUES","APPOINTMENT_TYPES","NURSE","selectedTopic","adviceRelatives","userInfo","surveyAnswers","phone_number","street","gender","postal_code","no","place","Object","values","question_id","question_title","answerData","formatAnswerItem","formatQuestionId","formatSubQuestions","scheduleTime","result_survey","appointment_type","selected_treatments_id","customer_gender","postcode","relatives","cost","module","exports","Hashtag","callApi","useApi","useState","data","loading","full","page","amount_videos","videos","setVideos","hashtag","match","params","history","useHistory","getAllVideos","method","api","config","rest","getVideosByHashTag","getPageSize","response","status","SUCCESS","DEFAULT_PAGE_SIZE","concatData","useEffect","keyword","window","scrollTo","styles","mobilitySaved","color","onClick","goBack","hashtagInformation","title","video","backgroundColor","padding","borderRadius","display","alignItems","backgroundImage","thumbnail","overflow","backgroundSize","marginRight","push","marginLeft","flexDirection","justifyContent","flex","informationTrainer","trainer_avatar","defaultTrainer","backgroundPosition","backgroundRepeat","cursor","trainer_id","interactive","content","viewed_amount","amountView","intToString","isSaved","is_saved","newVideos","index","findIndex","item","unsaveVideo","saveVideo","slice","createCategoryHashtag","category_name","loadingSmall","onEnter","getNextPage"],"mappings":"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","file":"static/js/39.7ac29608.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  size: 'large' | 'medium' | 'small';\n  render: any;\n}\n\nconst mappingSize = { large: 80, medium: 48, small: 36 };\n\nconst Frame: React.FC<Props> = (props) => {\n  const { size, render } = props;\n\n  return (\n    <div className=\"video-comments--comment\">\n      <div style={{ width: '100%', height: mappingSize[size] }}>{render}</div>\n    </div>\n  );\n};\n\nexport default Frame;\n","import moment from 'moment';\n\nimport { listHours } from 'config';\nimport { MAX_SCHEDULE_TIME, MAX_SCHEDULE_TIME_START } from 'configs/constants';\n\n/**\n * Get schedule time options in book an appointment\n *\n * @param currentTime Current time has format HH:mm\n * @param options Options\n *\n * @return array\n */\nexport const getScheduleTimeOptions = (currentTime: string, options: any = {}) => {\n  const { maxTime = MAX_SCHEDULE_TIME } = options;\n\n  const validTimes = listHours.filter((timeItem) => timeItem >= currentTime && timeItem <= maxTime);\n\n  return validTimes.map((value) => ({ label: value, value }));\n};\n\n/**\n * Get schedule time start in book an appointment\n *\n * @param defaultTime Default time, if defaultTime has value => do not get by current time\n *\n * @return array\n */\nexport const getScheduleTimeStart = (defaultTime?: string) => {\n  if (defaultTime) return defaultTime;\n\n  const timeStart = moment().add(2, 'hours').format('HH:mm');\n\n  return listHours.find((timeItem) => timeItem >= timeStart && timeItem <= '23:45') || timeStart;\n};\n\n/**\n * Get min schedule time end in book an appointment\n *\n * @param timeStart Time start value\n * @param additionalHours Additional hours\n *\n * @return string\n */\nexport const getScheduleMinTimeEnd = (timeStart: string = '', additionalHours: number = 1) => {\n  const mmTimeStart = moment(`${moment().format('YYYY-MM-DD')} ${timeStart}`);\n\n  return timeStart < MAX_SCHEDULE_TIME_START\n    ? mmTimeStart.add(additionalHours, 'hours').format('HH:mm')\n    : MAX_SCHEDULE_TIME;\n};\n\n/**\n * Get default time end by time start\n *\n * @param timeStart Time start value\n *\n * @return string\n */\nexport const getDefaultTimeEnd = (timeStart = '') => {\n  return timeStart < '23:00' ? getScheduleMinTimeEnd(timeStart) : MAX_SCHEDULE_TIME;\n};\n","/**\n * Get plural of word\n *\n * @param value How many of the word exist\n * @param word Word wanna make plural\n * @param suffixPlural Suffix word\n *\n * @return string\n */\nexport const pluralize = (value = 0, word = '', suffixPlural = 'en') => {\n  return value > 1 ? `${word}${suffixPlural}` : word;\n};\n\n/**\n * Get plural of exercise\n *\n * @param value How many of the exercise exist\n *\n * @return string\n */\nexport const pluralizeExcercise = (value = 0) => {\n  return `${value} ${value === 1 ? 'Übung' : 'Übungen'}`;\n};\n","import { includes } from 'lodash';\nimport {\n  QUESTION_TYPES,\n  MAX_QA_INPUT_LENGTH,\n  MAX_SUB_QA_INPUT_LENGTH,\n  VALID_TIME_START_SUBMIT,\n  SCHEDULE_OPTIONS,\n} from 'configs/constants';\nimport moment from 'moment';\n\n/**\n * Validate book an appointment survey's answers\n *\n * @param questions Questions get from database\n * @param answers User input answer\n *\n * @return Boolean\n */\nexport const validateBookAppointmentAnswers = (questions: any = [], answers: any = {}) => {\n  return questions.every((questionItem: any) => {\n    const { id: questionId, required, question_type, answers: qAnswers = [] } = questionItem;\n    const answerValues = qAnswers.reduce((acc: any, answerItem: any) => [...acc, answerItem.answer_title], []);\n\n    // get current question's answer\n    const { answer = '', parentQuestionId } = answers[questionId] || {};\n\n    // validate required\n    if (required && !answer) return false;\n\n    // validate value\n    switch (question_type) {\n      case QUESTION_TYPES.YES_NO:\n      case QUESTION_TYPES.RADIO: {\n        if (!includes(answerValues, answer)) {\n          return false;\n        }\n        break;\n      }\n      case QUESTION_TYPES.TEXTBOX: {\n        if (answer.length > MAX_QA_INPUT_LENGTH) return false;\n        if (parentQuestionId && answer.length > MAX_SUB_QA_INPUT_LENGTH) return false;\n      }\n    }\n\n    // validate sub questions\n    const currentAnswerData = qAnswers.find((qAnswer: any) => qAnswer.answer_title === answer);\n    if (currentAnswerData) {\n      const { sub_questions = [] } = currentAnswerData;\n\n      const isValidSubQA = validateBookAppointmentAnswers(sub_questions, answers);\n      if (!isValidSubQA) return false;\n    }\n\n    return true;\n  });\n};\n\n/**\n * Check valid book an appoint schedule\n *\n * @param scheduleData Schedule data\n *\n * @return boolean\n */\nexport const isValidBookAppointmentSchedule = (scheduleData: any) => {\n  const { selectedOption, timeStart, specificDate } = scheduleData || {};\n  const currentDate = moment().format('YYYY-MM-DD');\n  const duration = moment.duration(moment(`${currentDate} ${timeStart}`).diff(moment()));\n  const hours = duration.asHours();\n  const specificDateVal = moment(specificDate).format('YYYY-MM-DD');\n\n  // check valid specificDate\n  const isValidDate =\n    selectedOption === SCHEDULE_OPTIONS.TOMORROW ||\n    (selectedOption === SCHEDULE_OPTIONS.LATER && currentDate <= specificDateVal);\n\n  return isValidDate || hours >= VALID_TIME_START_SUBMIT;\n};\n","import moment from 'moment';\nimport { SCHEDULE_OPTIONS, APPOINTMENT_TYPES, APPOINTMENT_TYPE_VALUES } from 'configs/constants';\nimport { ScheduleData } from 'types/appointments';\n\n/**\n * Convert appointment schedule time\n *\n * @param scheduleData Schedule data\n *\n * @return object\n */\nexport const convertAppointmentScheduleTime = (scheduleData: ScheduleData) => {\n  const { selectedOption, specificDate, timeStart, timeEnd } = scheduleData;\n\n  // convert schedule time\n  let mmAppointmentDate = moment();\n  if (selectedOption !== SCHEDULE_OPTIONS.TODAY) {\n    mmAppointmentDate = selectedOption === SCHEDULE_OPTIONS.LATER ? moment(specificDate) : moment().add(1, 'd');\n  }\n  const appointmentDate = mmAppointmentDate.format('YYYY-MM-DD');\n\n  return {\n    appointment_time_begin: moment(`${appointmentDate} ${timeStart}`).utc().unix(),\n    appointment_time_end: moment(`${appointmentDate} ${timeEnd}`).utc().unix(),\n  };\n};\n\n/**\n * Get book an appointment request params\n *\n * @param appointmentData Book an appointment data\n * @param appointmentType For nurse or assistant\n *\n * @return Object\n */\nexport const getBookAppointmentRequestParams = (\n  appointmentData: any = {},\n  appointmentType = APPOINTMENT_TYPE_VALUES[APPOINTMENT_TYPES.NURSE],\n) => {\n  const {\n    selectedTopic,\n    adviceRelatives = [],\n    scheduleData = {},\n    userInfo = {},\n    surveyAnswers = {},\n  } = appointmentData || {};\n  const { phone_number = '', street, gender, postal_code, no, place } = userInfo;\n\n  // convert question's answer data\n  const questions = [...Object.values(surveyAnswers)].reduce((acc: any[], answerItem: any) => {\n    const { question_id, answer, question_title, parentQuestionId } = answerItem || {};\n    const answerData = { question_id, answer, question_title };\n\n    // if question is not sub question\n    if (!parentQuestionId) {\n      return [...acc, { ...answerData, sub_questions: [] }];\n    }\n\n    // add sub question into parent question\n    acc = acc.map((formatAnswerItem) => {\n      const { question_id: formatQuestionId, sub_questions: formatSubQuestions } = formatAnswerItem || {};\n      // if finded parent question\n      if (formatQuestionId === parentQuestionId) {\n        return {\n          ...formatAnswerItem,\n          sub_questions: [...formatSubQuestions, answerData],\n        };\n      }\n\n      return formatAnswerItem;\n    });\n    return acc;\n  }, []);\n\n  // convert schedule time\n  const scheduleTime = convertAppointmentScheduleTime(scheduleData);\n\n  return {\n    result_survey: { questions },\n    appointment_type: appointmentType,\n    selected_treatments_id: selectedTopic,\n    customer_gender: gender,\n    phone_number,\n    street,\n    postcode: postal_code,\n    no,\n    place,\n    relatives: adviceRelatives,\n    cost: 1,\n    ...scheduleTime,\n  };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobilitySaved\":\"Hashtag_mobilitySaved__299pF\",\"hashtagInformation\":\"Hashtag_hashtagInformation__tAmNV\",\"btn\":\"Hashtag_btn__Y7lyw\",\"title\":\"Hashtag_title__Z5wGi\",\"informationTrainer\":\"Hashtag_informationTrainer__2u8xq\",\"amountView\":\"Hashtag_amountView__39FjQ\",\"hashtag\":\"Hashtag_hashtag__1zu2A\",\"content\":\"Hashtag_content__3L8i1\"};","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { Waypoint } from 'react-waypoint';\nimport { createCategoryHashtag, defaultTrainer, loadingSmall } from '../../../extensions';\nimport Frame from './Frame';\nimport { HBButtonSmall } from '../../../hbBaseClass';\nimport styles from './Hashtag.module.scss';\nimport { concatData, getNextPage, getPageSize, intToString } from '../../../utils';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport { useApi } from 'store/callApi';\nimport { DEFAULT_PAGE_SIZE } from 'configs/constants';\nimport { KMSDiv } from 'components';\nimport { pluralizeExcercise } from 'utilities';\n\nconst Hashtag: React.FC<RouteComponentProps> = (props) => {\n  const { callApi } = useApi();\n  const [videos, setVideos] = useState<any>({ data: [], loading: true, full: false, page: 0, amount_videos: 0 });\n  const hashtag: any = props.match?.params;\n  const history = useHistory();\n\n  const getAllVideos = (hashtag: any, page: any) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getVideosByHashTag(hashtag, page, getPageSize(page)),\n        loading: true,\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          const full = data.videos.length < DEFAULT_PAGE_SIZE;\n          setVideos({\n            data: concatData(page, videos.data, data.videos),\n            full,\n            loading: false,\n            page: page,\n            amount_videos: data.amount_videos,\n          });\n        }\n      },\n    );\n  };\n\n  const saveAction = (id: any, isSaved: any) => {\n    setVideos((videos: any) => {\n      let newVideos = [...videos.data];\n      let index = newVideos.findIndex((item: any) => item.id === id);\n      newVideos[index].is_saved = !newVideos[index].is_saved;\n      return { ...videos, data: newVideos };\n    });\n\n    callApi(\n      {\n        method: !isSaved ? 'post' : 'put',\n        api: !isSaved ? config.rest.saveVideo(id) : config.rest.unsaveVideo(id),\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n        }\n      },\n    );\n  };\n\n  const loadMoreVideos = () => {\n    if (videos.loading || videos.full) return;\n    setVideos({ ...videos, loading: true });\n    getAllVideos(hashtag?.keyword, getNextPage(videos.page));\n  };\n\n  useEffect(() => {\n    getAllVideos(hashtag?.keyword, 1);\n    window.scrollTo(0, 0);\n  }, []);\n\n  videos.loading && <div />;\n\n  return (\n    <div className=\"wide\">\n      <div className={styles.mobilitySaved}>\n        <div className=\"hb-mx-20\">\n          <div className=\"d-flex justify-content-between hb-my-28\">\n            <HBButtonSmall color=\"nightblue\" onClick={() => history.goBack()}>\n              <i className=\"hb-icon-arrow-left hb-icon-md\" /> Zurück\n            </HBButtonSmall>\n            {videos.loading ? (\n              <div />\n            ) : (\n              <div className={styles.hashtagInformation}>{pluralizeExcercise(videos.amount_videos)}</div>\n            )}\n          </div>\n          <h3 className={styles.title}>{`#${hashtag?.keyword}`}</h3>\n        </div>\n        <div className=\"hb-card\">\n          {/* <div className=\"hb-card-header\"></div> */}\n          {videos.data.length === 0 && !videos.loading && <div className=\"no-articles\">Keine Übungen</div>}\n          <div className=\"row \">\n            {videos.data.map((video: any) => (\n              <div className=\"col-lg-6 col-md-6 hb-card-item\">\n                <div\n                  style={{\n                    backgroundColor: 'white',\n                    padding: 15,\n                    borderRadius: 32,\n                    height: 181,\n                    display: 'flex',\n                    alignItems: 'center',\n                  }}\n                  key={video?.id}\n                >\n                  <div>\n                    <KMSDiv\n                      backgroundImage={video?.thumbnail}\n                      style={{\n                        overflow: 'hidden',\n                        display: 'block',\n                        borderRadius: 20,\n                        width: 150,\n                        height: 150,\n                        backgroundSize: 'cover',\n                        marginRight: 20,\n                      }}\n                      onClick={() => history.push(`/mobility/watch?video=${video?.id}`)}\n                    />\n                  </div>\n                  <div\n                    style={{\n                      marginLeft: 10,\n                      marginRight: 28,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'space-between',\n                      flex: 1,\n                    }}\n                  >\n                    <div className=\"d-flex justify-content-between\">\n                      <div className={`${styles.informationTrainer} d-flex justify-content-between`}>\n                        <KMSDiv\n                          backgroundImage={video?.trainer_avatar || defaultTrainer}\n                          style={{\n                            borderRadius: '50%',\n                            width: 32,\n                            height: 32,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                            backgroundRepeat: 'no-repeat',\n                            cursor: video?.trainer_id ? 'pointer' : 'default',\n                          }}\n                          onClick={() =>\n                            video?.trainer_id ? history.push(`/mobility/trainer-detail/${video?.trainer_id}`) : {}\n                          }\n                        />\n                        <Tippy interactive content={video?.viewed_amount}>\n                          <div className={styles.amountView}>\n                            <i className={'hb-icon-eye'} />\n                            <span>{intToString(video?.viewed_amount)}</span>\n                          </div>\n                        </Tippy>\n                      </div>\n                      <div className=\"hb-save\" onClick={() => saveAction(video.id, video.is_saved)}>\n                        <i className={`${video.is_saved ? 'hb-icon-heart-s' : 'hb-icon-heart-r'}`} />\n                      </div>\n                    </div>\n\n                    <div className={styles.content} onClick={() => history.push(`/mobility/watch?video=${video?.id}`)}>\n                      {video?.title.length < 50 ? video?.title : video?.title.slice(0, 47) + '...'}\n                    </div>\n                    <div\n                      className=\"d-flex\"\n                      onClick={() => history.push(`/mobility/watch?video=${video?.id}`)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {createCategoryHashtag(video.category_name)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {videos.page !== 0 && videos.loading && <Frame size=\"large\" render={loadingSmall} />}\n        <Waypoint onEnter={loadMoreVideos} />\n      </div>\n    </div>\n  );\n};\n\nexport default Hashtag;\n"],"sourceRoot":""}