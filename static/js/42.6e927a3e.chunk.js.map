{"version":3,"sources":["views/user/containers/ContainerEllipse.tsx","views/user/newsfeed/SelectCategorySearch.tsx"],"names":["ContainterEllipse","props","children","className","SelectCategorySearch","dispatch","useDispatch","callApi","useApi","history","useHistory","useState","searchName","setSearchName","searchSuggestionNames","setSearchSuggestionNames","searchRef","useRef","your_topics","useSelector","state","newsfeed","searchParams","innerRef","clearBtn","callbackSearch","value","method","api","config","rest","getNewsfeedSearch","response","data","status","SUCCESS","trim","categories","filter","item","includes","callbackEmpty","useEffect","current","focus","onClick","push","style","marginBottom","placeholder","maxHeight","marginRight","paddingRight","length","map","index","border","updateNewsfeedYourTopics","saveSetting","name","id"],"mappings":"yJAeeA,IAbqB,SAACC,GAAW,IACtCC,EAAaD,EAAbC,SAER,OACE,qCACE,qBAAKC,UAAU,aAAf,SACE,qBAAKA,UAAU,0BAEjB,qBAAKA,UAAU,aAAf,SAA6BD,S,8JCsFpBE,UApF6C,WAC1D,IAAMC,EAAWC,cACTC,EAAYC,cAAZD,QAEFE,EAAUC,cAJgD,EAK5BC,mBAAS,IALmB,mBAKzDC,EALyD,KAK7CC,EAL6C,OAMNF,mBAAS,IANH,mBAMzDG,EANyD,KAMlCC,EANkC,KAO1DC,EAAYC,iBAAY,MACtBC,EAAgBC,aAAY,SAACC,GAAD,OAAgBA,EAAMC,YAAlDH,YAqCFI,EAAe,CACnBC,SAAUP,EACVQ,UAAU,EACVZ,aACAC,gBACAY,eAxCwB,SAACC,GACzBnB,EACE,CACEoB,OAAQ,MACRC,IAAKC,IAAOC,KAAKC,kBAAkBL,KAErC,SAACM,GAAc,IACLC,EAAiBD,EAAjBC,KAAiBD,EAAXE,SACCC,KAAWvB,EAAWwB,QACnCrB,EAAyBkB,EAAKI,WAAWC,QAAO,SAACC,GAAD,OAAgBC,YAAStB,EAAaqB,WAgC5FE,cAAe,kBAAM1B,EAAyB,MAOhD,OAJA2B,qBAAU,WACR1B,EAAU2B,QAAQC,UACjB,IAGD,cAAC,IAAD,UACE,gCACE,qBAAKzC,UAAU,WAAf,SACE,qBAAKA,UAAU,sCAAf,SACE,eAAC,IAAD,CAAe0C,QAAS,kBAAMpC,EAAQqC,KAAK,8BAA3C,UACE,mBAAG3C,UAAU,6BADf,uBAKJ,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAe4C,MAAO,CAAEC,aAAc,IAArD,UACE,cAAC,IAAD,2BAAc1B,GAAd,IAA4B2B,YAAY,iBACxC,qBAAK9C,UAAU,2BAAf,4BACA,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,YAAY4C,MAAO,CAAEG,UAAW,IAAKC,aAAc,GAAIC,aAAc,GAApF,SA1C2B,IAAjCtC,EAAsBuC,OAAqB,qBAAKlD,UAAU,6BAAf,eACxCW,EAAsBwC,KAAI,SAACf,EAAoCgB,GAArC,OAC/B,sBACEpD,UAAU,oBACV4C,MAAOQ,IAAUzC,EAAsBuC,OAAS,EAAI,CAAEG,OAAQ,QAAW,GAEzEX,QAAS,kBAZK,SAACN,GACnBlC,EAASoD,YAAyBlB,IAClC9B,EAAQqC,KAAK,6BAUMY,CAAYnB,IAJ7B,UAME,mBAAGpC,UAAU,mDACZoC,EAAKoB,OAJDpB,EAAKqB","file":"static/js/42.6e927a3e.chunk.js","sourcesContent":["import React from 'react';\n\nconst ContainterEllipse: React.FC = (props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <div className=\"hb-ellipse\">\n        <div className=\"hb-ellipse-children\" />\n      </div>\n      <div className=\"hb-wrapper\">{children}</div>\n    </>\n  );\n};\n\nexport default ContainterEllipse;\n","import React, { useEffect, useRef, useState } from 'react';\nimport config from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HBButtonSmall, HBSearch } from '../../../hbBaseClass';\nimport { updateNewsfeedYourTopics } from '../../../store/newsfeed/actions';\nimport './Newsfeed.scss';\nimport ContainterEllipse from '../containers/ContainerEllipse';\nimport { includes } from '../../../utils';\nimport { useApi } from 'store/callApi';\n\nconst SelectCategorySearch: React.FC<RouteComponentProps> = () => {\n  const dispatch = useDispatch();\n  const { callApi } = useApi();\n\n  const history = useHistory();\n  const [searchName, setSearchName] = useState('');\n  const [searchSuggestionNames, setSearchSuggestionNames] = useState([]);\n  const searchRef = useRef<any>(null);\n  const { your_topics } = useSelector((state: any) => state.newsfeed);\n\n  const getNewsfeedSearch = (value: string) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getNewsfeedSearch(value),\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS && searchName.trim()) {\n          setSearchSuggestionNames(data.categories.filter((item: any) => !includes(your_topics, item)));\n        }\n      },\n    );\n  };\n\n  const saveSetting = (item: { id: string; name: string }) => {\n    dispatch(updateNewsfeedYourTopics(item));\n    history.push('/newsfeed/select-category');\n  };\n\n  const showSuggestionName = () => {\n    if (searchSuggestionNames.length === 0) return <div className=\"search-group-item disabled\">-</div>;\n    return searchSuggestionNames.map((item: { id: string; name: string }, index: number) => (\n      <div\n        className=\"search-group-item\"\n        style={index === searchSuggestionNames.length - 1 ? { border: 'none' } : {}}\n        key={item.id}\n        onClick={() => saveSetting(item)}\n      >\n        <i className=\"hb-icon-zoom-in hb-select-category-icon-search\" />\n        {item.name}\n      </div>\n    ));\n  };\n\n  const searchParams = {\n    innerRef: searchRef,\n    clearBtn: true,\n    searchName,\n    setSearchName,\n    callbackSearch: getNewsfeedSearch,\n    callbackEmpty: () => setSearchSuggestionNames([]),\n  };\n\n  useEffect(() => {\n    searchRef.current.focus();\n  }, []);\n\n  return (\n    <ContainterEllipse>\n      <div>\n        <div className=\"hb-mx-20\">\n          <div className=\"d-flex justify-content-end hb-my-28\">\n            <HBButtonSmall onClick={() => history.push('/newsfeed/select-category')}>\n              <i className=\"hb-icon-cross hb-icon-lg\" /> Schlie√üen\n            </HBButtonSmall>\n          </div>\n        </div>\n        <div className=\"hb-card\">\n          <div className=\"hb-margin-30\" style={{ marginBottom: 12 }}>\n            <HBSearch {...searchParams} placeholder=\"Suchbegriff\" />\n            <div className=\"hb-select-category-title\">Suchergebnisse</div>\n            <div className=\"hb-select-category-search-suggestion\">\n              <div className=\"hb-scroll\" style={{ maxHeight: 320, marginRight: -10, paddingRight: 5 }}>\n                {showSuggestionName()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ContainterEllipse>\n  );\n};\n\nexport default SelectCategorySearch;\n"],"sourceRoot":""}