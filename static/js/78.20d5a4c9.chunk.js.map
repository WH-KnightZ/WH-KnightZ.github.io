{"version":3,"sources":["assets/images/img_calendar.png","views/user/consulting/allAppointments/MainPage.tsx"],"names":["NURSE","APPOINTMENT_TYPES","ASSISTANT","PAGE_TITLES","UNITS","BUTTON_BOOK_LABELS","MainPage","history","useHistory","t","useTranslation","callApi","useApi","useAppointment","statistics","updateStatistics","appointmentType","useParams","categoryTitles","useMemo","isRoleUser","TITLES","NURSE_TITLES","categories","Object","keys","useEffect","includes","values","method","api","config","rest","appointmentsStatistics","loading","body","appointment_type","APPOINTMENT_TYPE_VALUES","response","status","data","SUCCESS","appointment_statistics","push","title","noBackground","onBack","btnFilter","className","src","icCalendar","alt","onClick","map","category","index","value","unit","pluralize","requestType"],"mappings":"+cAAe,MAA0B,yCCmBjCA,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UACTC,GAAW,mBACdH,EAAQ,4BADM,cAEdE,EAAY,gCAFE,GAIXE,GAAK,mBACRJ,EAAQ,YADA,cAERE,EAAY,mBAFJ,GAILG,GAAkB,mBACrBL,EAAQ,+BADa,cAErBE,EAAY,mBAFS,GA+FTI,EA1FiC,WAC9C,IAAMC,EAAUC,cACRC,EAAMC,cAAND,EACAE,EAAYC,cAAZD,QAH4C,EAIXE,cAAjCC,EAJ4C,EAI5CA,WAAYC,EAJgC,EAIhCA,iBACZC,EAAoBC,cAApBD,gBAGFE,EAAiBC,mBAAQ,kBAAOC,cAAeC,SAASC,iBAAe,IAGvEC,EAAaJ,mBAAQ,8BAAUK,OAAOC,KAAKP,MAAkB,CAACA,IAEpEQ,qBAAU,WAER,GAAKC,mBAASH,OAAOI,OAAO3B,KAAoBe,GAAhD,CASEL,EACE,CACEkB,OAAQ,OACRC,IAAKC,IAAOC,KAAKC,yBACjBC,SAAS,EACTC,KAAM,CAAEC,iBAAkBC,IAAwBrB,MAEpD,SAACsB,GAAmB,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAChB,GAAID,IAAWE,IAAf,CAFiB,OAIuBD,GAAQ,IAAxCE,uBACR3B,OALiB,MAIgB,GAJhB,YAfrBR,EAAQoC,KAAK,UA2Bd,IAWH,OACE,cAAC,IAAD,CACEC,MAAOnC,EAAEN,EAAYa,IACrB6B,cAAY,EACZC,OAAQ,kBAAMvC,EAAQoC,KAAK,gBAC3BI,UAAU,GAJZ,SAME,sBAAKC,UAAU,mCAAf,UACG5B,eACC,sBAAK4B,UAAS,0CAAqChC,GAAnD,UACE,sBAAKgC,UAAU,0CAAf,UACE,sEACA,qBAAKC,IAAKC,EAAYC,IAAI,QAE5B,cAAC,IAAD,CAAeH,UAAU,MAAMI,QAAS,kBAAM7C,EAAQoC,KAAK,oCAA3D,SACGtC,EAAmBW,QAI1B,qBAAKgC,UAAS,sCAAiC5B,eAAgB,QAA/D,SACGG,EAAW8B,KAAI,SAACC,EAAUC,GAAX,OACd,cAAC,IAAD,CAEEP,UAAWhC,EACX4B,MAAO1B,EAAeoC,GACtBE,MAAO1C,EAAWwC,IAAa,EAC/BG,KAAMC,YAAU5C,EAAWwC,GAAWlD,EAAMY,IAC5CoC,QAAS,kBA/BgBO,EA+BkBL,OA9BrD/C,EAAQoC,KAAR,sBAA4B3B,EAA5B,8BAAiE2C,IAD/B,IAACA,IA0BpBJ","file":"static/js/78.20d5a4c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img_calendar.a9d2a070.png\";","import React, { useEffect, useMemo } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { includes } from 'lodash';\n\nimport { HBButtonSmall } from 'hbBaseClass';\nimport AllAppointmentsLayout from './Layout';\nimport { AllAppointmentsCategoryItem } from 'components/screens/user';\nimport { TITLES, NURSE_TITLES } from './ViewAppointments';\nimport { SUCCESS, useApi } from 'store/callApi';\nimport { useAppointment } from 'store/appointment';\n\nimport { isRoleUser, pluralize } from 'utilities';\nimport config from 'config';\nimport { APPOINTMENT_TYPES, APPOINTMENT_TYPE_VALUES } from 'configs/constants';\n\nimport icCalendar from 'assets/images/img_calendar.png';\n\nconst { NURSE, ASSISTANT } = APPOINTMENT_TYPES;\nconst PAGE_TITLES = {\n  [NURSE]: 'mainConsultingNurseTitle',\n  [ASSISTANT]: 'mainConsultingAssistantTitle',\n};\nconst UNITS = {\n  [NURSE]: 'Beratung',\n  [ASSISTANT]: 'Pflegeassistenz',\n};\nconst BUTTON_BOOK_LABELS = {\n  [NURSE]: 'Beratungstermin vereinbaren',\n  [ASSISTANT]: 'Assitenz buchen',\n};\n\nconst MainPage: React.FC<RouteComponentProps> = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { callApi } = useApi();\n  const { statistics, updateStatistics } = useAppointment();\n  const { appointmentType } = useParams<{ appointmentType: string }>();\n\n  // get category titles\n  const categoryTitles = useMemo(() => (isRoleUser() ? TITLES : NURSE_TITLES), []);\n\n  // Get categories\n  const categories = useMemo(() => [...Object.keys(categoryTitles)], [categoryTitles]);\n\n  useEffect(() => {\n    // if appointmentType is invalid => redirect to /404\n    if (!includes(Object.values(APPOINTMENT_TYPES), appointmentType)) {\n      history.push('/404');\n      return;\n    }\n\n    /**\n     * Get appointments statistics\n     */\n    const getAppointmentsStatistics = () => {\n      callApi(\n        {\n          method: 'post',\n          api: config.rest.appointmentsStatistics(),\n          loading: true,\n          body: { appointment_type: APPOINTMENT_TYPE_VALUES[appointmentType] },\n        },\n        (response: any) => {\n          const { status, data } = response;\n          if (status !== SUCCESS) return;\n\n          const { appointment_statistics = {} } = data || {};\n          updateStatistics(appointment_statistics);\n        },\n      );\n    };\n\n    getAppointmentsStatistics();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Handle click view appointments\n   *\n   * @param requestType View appointments request type\n   */\n  const handleClickViewAppointments = (requestType: string) => {\n    history.push(`/consulting/${appointmentType}/view-appointments/${requestType}`);\n  };\n\n  return (\n    <AllAppointmentsLayout\n      title={t(PAGE_TITLES[appointmentType])}\n      noBackground\n      onBack={() => history.push('/consulting')}\n      btnFilter=\"\"\n    >\n      <div className=\"AppointmentsCategories-container\">\n        {isRoleUser() && (\n          <div className={`AppointmentsCategories-bookArea ${appointmentType}`}>\n            <div className=\"AppointmentsCategories-bookArea_content\">\n              <p>Wie k√∂nnen wir Ihnen heute helfen?</p>\n              <img src={icCalendar} alt=\"\" />\n            </div>\n            <HBButtonSmall className=\"btn\" onClick={() => history.push('/consulting/book-an-appointment')}>\n              {BUTTON_BOOK_LABELS[appointmentType]}\n            </HBButtonSmall>\n          </div>\n        )}\n        <div className={`AppointmentsCategories-list ${isRoleUser() && 'user'}`}>\n          {categories.map((category, index) => (\n            <AllAppointmentsCategoryItem\n              key={index}\n              className={appointmentType}\n              title={categoryTitles[category]}\n              value={statistics[category] || 0}\n              unit={pluralize(statistics[category], UNITS[appointmentType])}\n              onClick={() => handleClickViewAppointments(category)}\n            />\n          ))}\n        </div>\n      </div>\n    </AllAppointmentsLayout>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}