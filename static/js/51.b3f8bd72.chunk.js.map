{"version":3,"sources":["views/user/mobility/PostureType.module.scss","views/user/mobility/PostureType.tsx"],"names":["module","exports","data","id","title","content","PostureType","props","dispatch","useDispatch","callApi","useApi","history","useHistory","email","useSelector","state","auth","useState","isloading","setIsLoading","postureType","settings","posture_type","posture","setPosture","showAttention","setShowAttention","attentions","ls","get","needShowAttention","includes","useEffect","set","show","handleClose","up","upCallback","push","hideCloseBtn","className","styles","sub_title","cardWrapper","cardWrapperFirst","style","justifyContent","map","item","md","card","radio","type","name","onChange","checked","htmlFor","container","infomation","titleCard","footer","wrapperBack","button","disabled","color","children","size","onClick","body","method","api","config","rest","response","status","SUCCESS","changeSetting","choosePosture"],"mappings":"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","file":"static/js/51.b3f8bd72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posture\":\"PostureType_posture__3xpUi\",\"title\":\"PostureType_title__1gb8w\",\"sub_title\":\"PostureType_sub_title__1ZUvB\",\"search\":\"PostureType_search__7sSEb\",\"cardWrapper\":\"PostureType_cardWrapper__3afHZ\",\"cardWrapperFirst\":\"PostureType_cardWrapperFirst__10ghc\",\"card\":\"PostureType_card__2Gel4\",\"radio\":\"PostureType_radio__3BI1c\",\"container\":\"PostureType_container__1umok\",\"infomation\":\"PostureType_infomation__TdYaH\",\"titleCard\":\"PostureType_titleCard__3MdLk\",\"content\":\"PostureType_content__3TEp8\",\"footer\":\"PostureType_footer__16G_-\",\"wrapperBack\":\"PostureType_wrapperBack__-MKIa\",\"button\":\"PostureType_button__1-AzC\"};","import { CCard, CCol, CRow, CSpinner } from '@coreui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport config from '../../../config';\nimport { ls } from '../../../extensions';\nimport { HBButtonFull, HBModalConfirm } from '../../../hbBaseClass';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport styles from './PostureType.module.scss';\nimport { changeSetting } from '../../../store/settings/actions';\nimport { useApi } from 'store/callApi';\n\nconst data = [\n  {\n    id: 'all',\n    title: 'Alle Übungen',\n    content: 'Lassen Sie sich alle Inhalte in allen Schwierigkeitsstufen anzeigen (stehen, sitzen, liegen).',\n  },\n  {\n    id: 'standing',\n    title: 'Übungen im Stehen',\n    content: 'Sie haben keine Einschränkungen in ihren Bewegungen, bevorzugen jedoch ausschließlich Übungen im Stehen.',\n  },\n  {\n    id: 'sit',\n    title: 'Übungen im Sitzen',\n    content: 'Sie können nicht lange stehen und fühlen sich sicherer, wenn sie die Übungen im Sitzen ausführen.',\n  },\n  {\n    id: 'lie',\n    title: 'Übungen im Liegen',\n    content: 'Sie können keine Übungen im Stehen und Sitzen ausführen und möchten nur Angebote im Liegen anzeigen.',\n  },\n];\n\nconst PostureType: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const { callApi } = useApi();\n\n  const history = useHistory();\n  // const [posture, setPosture] = useState<any>(null);\n  const email = useSelector((state: any) => state.auth.email);\n  const [isloading, setIsLoading] = useState(false);\n  const postureType = useSelector((state: any) => state.settings.posture_type) || 'all';\n  const [posture, setPosture] = useState(postureType);\n  const [showAttention, setShowAttention] = useState(false);\n  const attentions = ls.get('mobility-attentions') || [];\n  const needShowAttention = !attentions.includes(email);\n\n  useEffect(() => {\n    ls.set(`posture-${email}`, postureType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const choosePosture = (posture: any) => {\n    const body: any = {\n      posture_type: posture,\n    };\n    setIsLoading(true);\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.settings(),\n        body: body,\n      },\n      (response) => {\n        const { status, data } = response;\n\n        if (status === SUCCESS) {\n          ls.set(`posture-${email}`, posture);\n          setIsLoading(false);\n          dispatch(changeSetting(data));\n\n          if (needShowAttention) setShowAttention(true);\n          else history.push('/mobility');\n        }\n      },\n    );\n  };\n\n  return (\n    <>\n      <HBModalConfirm\n        show={showAttention}\n        handleClose={() => setShowAttention(false)}\n        title=\"Achtung\"\n        content=\"Bevor Sie die Übung starten, konsultieren Sie Ihren Arzt um mögliche Verletzungsrisiken zu vermeiden.\"\n        up=\"Bestätigen\"\n        upCallback={() => {\n          ls.set('mobility-attentions', [...attentions, email]);\n          setShowAttention(false);\n          history.push('/mobility');\n        }}\n        hideCloseBtn\n      />\n      <div className=\"wide\">\n        <div className={`hb-wrapper ${styles.posture}`}>\n          <h1 className={styles.title}>Welche Übungen können Sie ausführen?</h1>\n          <div className={styles.sub_title}>\n            Passen Sie das Übungsprogramm entsprechend ihrer körperlichen Möglichkeiten individuell an.\n          </div>\n          <CRow className={[styles.cardWrapper, styles.cardWrapperFirst]} style={{ justifyContent: 'center' }}>\n            {data.map((item) => (\n              <CCol md={6} key={item.id}>\n                <CCard className={styles.card}>\n                  <div className={styles.radio}>\n                    <input\n                      id={item.id}\n                      type=\"radio\"\n                      name=\"posture\"\n                      onChange={() => setPosture(item.id)}\n                      checked={item.id === posture}\n                    />\n                    <label htmlFor={item.id} className={`${styles.container} container`}></label>\n                  </div>\n                  <label className={styles.infomation} htmlFor={item.id}>\n                    <h3 className={styles.titleCard}>{item.title}</h3>\n                    <span className={styles.content}>{item.content} </span>\n                  </label>\n                </CCard>\n              </CCol>\n            ))}\n          </CRow>\n\n          <div className={styles.footer}>\n            <div className={styles.wrapperBack}>\n              <HBButtonFull\n                className={styles.button}\n                disabled={posture === 'none'}\n                color=\"violet\"\n                children={isloading ? <CSpinner size=\"sm\" color=\"light\" /> : 'Filter anwenden'}\n                onClick={() => choosePosture(posture)}\n                type=\"button\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostureType;\n"],"sourceRoot":""}