{"version":3,"sources":["views/user/consulting/InformationFriendPage.tsx"],"names":["InformationFriendPage","props","dispatch","useDispatch","callApi","payload","callback","callApiAction","id","match","params","userName","history","useHistory","useState","data","loading","friend","setFriend","show","popupCancel","setPopupCancel","popupRequestCancel","setPopupRequestCancel","useEffect","userId","method","api","config","rest","getUserInformation","response","status","SUCCESS","changeStatus","type","addFriend","changeStatusFriend","deleteFriend","newData","confirm","cancel","null","handleCancel","console","log","friends","className","style","textAlign","fluid","width","color","variant","onClick","push","src","avatar","alt","height","isVisible","title","content","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","Object","keys","length","md","first_name","last_name","email","bio","display","justifyContent"],"mappings":"4MA2NeA,UAnN8C,SAACC,GAC5D,IAAMC,EAAWC,cACXC,EAAU,SAACC,EAAcC,GAAf,OAAoDJ,EAASK,YAAcF,EAASC,KAE9FE,EADcP,EAAMQ,MAAMC,OACdC,SACZC,EAAUC,cALsD,EAO1CC,mBAAc,CAAEC,KAAM,GAAIC,SAAS,IAPO,mBAO/DC,EAP+D,KAOvDC,EAPuD,OAQhCJ,mBAAS,CAAEK,MAAM,IARe,mBAQ/DC,EAR+D,KAQlDC,EARkD,OASlBP,mBAAS,CAAEK,MAAM,IATC,mBAS/DG,EAT+D,KAS3CC,EAT2C,KA8BtEC,qBAAU,WAnBmB,IAACC,IAoBPjB,EAnBrBJ,EACE,CACEsB,OAAQ,MACRC,IAAKC,IAAOC,KAAKC,mBAAmBL,GACpCT,SAAS,IAEX,SAACe,GAAc,IACLhB,EAAiBgB,EAAjBhB,KAAiBgB,EAAXC,SACCC,KACbf,EAAU,CACRH,KAAK,eAAMA,GACXC,SAAS,SAShB,IAEH,IAAMkB,EAAe,SAACT,EAAaU,GACjC/B,EACE,CACEsB,OAAiB,OAATS,EAAgB,OAAkB,YAATA,EAAqB,MAAQ,SAC9DR,IACW,OAATQ,EACIP,IAAOC,KAAKO,UAAUX,GACb,YAATU,EACAP,IAAOC,KAAKQ,mBAAmBZ,GAC/BG,IAAOC,KAAKS,aAAab,GAC/BT,SAAS,IAEX,SAACe,GACoBA,EAAXC,SACOC,KACbf,GAAU,SAACD,GACT,IACIsB,EAAO,eAAQtB,GAEnB,OADAsB,EAAQxB,KAAKoB,KAFI,CAAEK,QAAS,SAAUC,OAAQ,KAAMxB,OAAQ,KAAMyB,KAAM,UAEhDP,GACjBI,SAyBXI,EAAe,WAlBJ,IAAClB,EAmBhBmB,QAAQC,IAAI,SACZxB,EAAe,CAAEF,MAAM,IApBPM,EAqBPR,EAAOF,KAAKP,GApBrBJ,EACE,CACEsB,OAAQ,SACRC,IAAKC,IAAOC,KAAKS,aAAab,GAC9BT,SAAS,IAEX,SAACe,GACoBA,EAAXC,SACOC,KACbf,GAAU,SAAC4B,GAAD,sBACLA,UAmBb,OACE,qBAAKC,UAAU,qBAAqBC,MAAO,CAAEC,UAAW,UAAxD,SACE,eAAC,IAAD,CAAYC,OAAK,EAACH,UAAU,oCAA5B,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKC,MAAO,CAAEG,MAAO,OAAWF,UAAW,QAA3C,SACE,eAAC,IAAD,CACEG,MAAM,UACNC,QAAQ,QACRC,QAAS,WACP1C,EAAQ2C,KAAK,2BAJjB,UAOE,mBAAGR,UAAU,wBAPf,8BAWF,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACEA,UAAU,mBACVS,IAAKvC,EAAOF,KAAK0C,QAAU,sCAC3BC,IAAI,SACJP,MAAM,MACNQ,OAAO,aAIb,qBAAKZ,UAAU,uBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEa,UAAgC,WAArB3C,EAAOF,KAAKoB,KAAoBb,EAAmBH,KAAOC,EAAYD,KACjF0C,MAAM,SACNC,QACuB,WAArB7C,EAAOF,KAAKoB,KACR,2CACA,qCAEN4B,eAAe,KACfC,gBAAgB,MAChBC,kBAAmB,iBACI,WAArBhD,EAAOF,KAAKoB,KAAoBZ,EAAsB,CAAEJ,MAAM,IAAWE,EAAe,CAAEF,MAAM,KAElG+C,mBAAoB,iBAA4B,WAArBjD,EAAOF,KAAKoB,MA9CjDS,QAAQC,IAAI,OACZtB,EAAsB,CAAEJ,MAAM,SAC9Be,EAAajB,EAAOF,KAAKP,GAAIS,EAAOF,KAAKoB,OA4CoDQ,OAGhD,IAApCwB,OAAOC,KAAKnD,EAAOF,MAAMsD,OACxB,qBAAKrB,MAAO,CAAEC,UAAW,SAAUE,MAAO,QAA1C,6BAEA,eAAC,IAAD,CAAMmB,GAAI,GAAV,UACE,qBAAIvB,UAAU,YAAd,UACG9B,EAAOF,KAAKwD,WADf,IAC4BtD,EAAOF,KAAKyD,aAGxC,qBAAKzB,UAAU,QAAf,SACE,oBAAGA,UAAU,QAAb,cAAuB9B,EAAOF,KAAK0D,MAAnC,SAGF,qBAAK1B,UAAU,MAAf,SACE,oBAAGA,UAAU,cAAb,cAA6B9B,EAAOF,KAAK2D,IAAzC,SAGF,qBAAK3B,UAAU,WAAf,SACwB,WAArB9B,EAAOF,KAAKoB,KACX,gCACE,cAAC,IAAD,CACEiB,MAAM,UACNC,QAAQ,UACRC,QAAS,WACPjC,EAAe,CAAEF,MAAM,KAJ3B,sBASA,eAAC,IAAD,CACEiC,MAAM,UACNC,QAAQ,UACRC,QAAS,WACPV,QAAQC,IAAI,QAJhB,UAQE,mBAAGE,UAAU,iBARf,cAWqB,YAArB9B,EAAOF,KAAKoB,KACd,sBAAKa,MAAO,CAAEG,MAAO,OAAWwB,QAAS,OAAQC,eAAgB,UAAjE,UACE,cAAC,IAAD,CAASxB,MAAM,UAAUC,QAAQ,UAAUC,QAAS,kBAAMpB,EAAajB,EAAOF,KAAKP,GAAI,WAAvF,oBAGA,cAAC,IAAD,CACE4C,MAAM,UACNC,QAAQ,UACRC,QAAS,WACPpB,EAAajB,EAAOF,KAAKP,GAAIS,EAAOF,KAAKoB,OAJ7C,wBAUqB,WAArBlB,EAAOF,KAAKoB,KACd,cAAC,IAAD,CAASiB,MAAM,UAAUC,QAAQ,UAAUC,QAAS,kBAAM/B,EAAsB,CAAEJ,MAAM,KAAxF,4BAIA,cAAC,IAAD,CACEiC,MAAM,UACNC,QAAQ,UACRC,QAAS,kBAAMpB,EAAajB,EAAOF,KAAKP,GAAIS,EAAOF,KAAKoB,OAH1D","file":"static/js/76.49df3c47.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { CButton, CCol, CContainer, CImg, CRow } from '@coreui/react';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { ConfirmPopup } from '../../../components';\n\nconst InformationFriendPage: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n  const params: any = props.match.params;\n  const id = params.userName;\n  const history = useHistory();\n\n  const [friend, setFriend] = useState<any>({ data: {}, loading: true });\n  const [popupCancel, setPopupCancel] = useState({ show: false });\n  const [popupRequestCancel, setPopupRequestCancel] = useState({ show: false });\n\n  const getFriendInformation = (userId: any) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getUserInformation(userId),\n        loading: true,\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          setFriend({\n            data: { ...data },\n            loading: false,\n          });\n        }\n      },\n    );\n  };\n\n  useEffect(() => {\n    getFriendInformation(id);\n  }, []);\n\n  const changeStatus = (userId: any, type: any) => {\n    callApi(\n      {\n        method: type === null ? 'post' : type === 'confirm' ? 'put' : 'delete',\n        api:\n          type === null\n            ? config.rest.addFriend(userId)\n            : type === 'confirm'\n            ? config.rest.changeStatusFriend(userId)\n            : config.rest.deleteFriend(userId),\n        loading: true,\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          setFriend((friend: any) => {\n            const key: any = { confirm: 'friend', cancel: null, friend: null, null: 'cancel' };\n            let newData = { ...friend };\n            newData.data.type = key[type];\n            return newData;\n          });\n        }\n      },\n    );\n  };\n\n  const unFriend = (userId: any) => {\n    callApi(\n      {\n        method: 'delete',\n        api: config.rest.deleteFriend(userId),\n        loading: true,\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          setFriend((friends: any) => ({\n            ...friends,\n          }));\n        }\n      },\n    );\n  };\n\n  const handleCancel = () => {\n    console.log('12312');\n    setPopupCancel({ show: false });\n    unFriend(friend.data.id);\n  };\n\n  const handleCancelRequest = () => {\n    console.log('123');\n    setPopupRequestCancel({ show: false });\n    changeStatus(friend.data.id, friend.data.type);\n  };\n\n  return (\n    <div className=\"information-friend\" style={{ textAlign: 'center' }}>\n      <CContainer fluid className=\"profile-user__container nopadding\">\n        <div className=\"profile-user--top\">\n          <div style={{ width: 100 + '%', textAlign: 'left' }}>\n            <CButton\n              color=\"primary\"\n              variant=\"ghost\"\n              onClick={() => {\n                history.push('/consulting/add-friend');\n              }}\n            >\n              <i className=\"fas fa-chevron-left\"></i> Back friend list page\n            </CButton>\n          </div>\n\n          <div className=\"avatar-user\">\n            <CImg\n              className=\"avatar-user--img\"\n              src={friend.data.avatar || 'https://i.stack.imgur.com/l60Hf.png'}\n              alt=\"Avatar\"\n              width=\"128\"\n              height=\"128\"\n            />\n          </div>\n        </div>\n        <div className=\"profile-user--bottom\">\n          <CRow>\n            <ConfirmPopup\n              isVisible={friend.data.type === 'cancel' ? popupRequestCancel.show : popupCancel.show}\n              title=\"Cancel\"\n              content={\n                friend.data.type === 'cancel'\n                  ? 'Are you sure you want to cancel request?'\n                  : 'Are you sure you want to unfriend?'\n              }\n              leftButtonText=\"No\"\n              rightButtonText=\"Yes\"\n              leftButtonOnPress={() =>\n                friend.data.type === 'cancel' ? setPopupRequestCancel({ show: false }) : setPopupCancel({ show: false })\n              }\n              rightButtonOnPress={() => (friend.data.type === 'cancel' ? handleCancelRequest() : handleCancel())}\n            />\n\n            {Object.keys(friend.data).length === 0 ? (\n              <div style={{ textAlign: 'center', width: 100 + '%' }}> Search Friend </div>\n            ) : (\n              <CCol md={12}>\n                <h3 className=\"user-name\">\n                  {friend.data.first_name} {friend.data.last_name}\n                </h3>\n\n                <div className=\"email\">\n                  <p className=\"email\"> {friend.data.email} </p>\n                </div>\n\n                <div className=\"bio\">\n                  <p className=\"bio-content\"> {friend.data.bio} </p>\n                </div>\n\n                <div className=\"btn_call\">\n                  {friend.data.type === 'friend' ? (\n                    <div>\n                      <CButton\n                        color=\"primary\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          setPopupCancel({ show: true });\n                        }}\n                      >\n                        Unfriend\n                      </CButton>\n                      <CButton\n                        color=\"primary\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          console.log('123');\n                          // history.push('/consulting/add-friend');\n                        }}\n                      >\n                        <i className=\"fas fa-phone\"></i> Call\n                      </CButton>\n                    </div>\n                  ) : friend.data.type === 'confirm' ? (\n                    <div style={{ width: 100 + '%', display: 'flex', justifyContent: 'center' }}>\n                      <CButton color=\"primary\" variant=\"outline\" onClick={() => changeStatus(friend.data.id, 'cancel')}>\n                        Delete\n                      </CButton>\n                      <CButton\n                        color=\"primary\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          changeStatus(friend.data.id, friend.data.type);\n                        }}\n                      >\n                        Confirm\n                      </CButton>\n                    </div>\n                  ) : friend.data.type === 'cancel' ? (\n                    <CButton color=\"primary\" variant=\"outline\" onClick={() => setPopupRequestCancel({ show: true })}>\n                      Cancel request\n                    </CButton>\n                  ) : (\n                    <CButton\n                      color=\"primary\"\n                      variant=\"outline\"\n                      onClick={() => changeStatus(friend.data.id, friend.data.type)}\n                    >\n                      Add friend\n                    </CButton>\n                  )}\n                </div>\n              </CCol>\n            )}\n          </CRow>\n        </div>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default InformationFriendPage;\n"],"sourceRoot":""}