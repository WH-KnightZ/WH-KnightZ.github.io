{"version":3,"sources":["views/user/meeting/components/ControlButton.tsx","views/user/meeting/components/MessageInput.tsx","views/user/meeting/components/RenderSwitch.tsx","views/user/meeting/components/MessageItem.tsx","views/user/meeting/components/ControlButtonLeave.tsx","views/user/meeting/components/ControlButtonVolume.tsx","views/user/meeting/components/MeetingTimer.tsx","views/user/meeting/screens/Options.tsx","assets/images/loading.gif","views/user/meeting/screens/MeetingLoading.tsx","views/user/meeting/screens/configs.ts","views/user/meeting/screens/RTMClient.ts","views/user/meeting/screens/AgoraVideoCall.tsx","views/user/meeting/Meeting.tsx"],"names":["ControlButton","props","title","icon","onClick","disabled","className","isOff","useState","off","setOff","e","MessageInput","onSubmit","value","setValue","handleSubmit","preventDefault","trim","placeholder","onChange","target","RenderSwitch","label","switchState","setSwitchState","checked","MessageItem","isMe","avatar","defaultAvatar","content","src","alt","ControlButtonLeave","ControlButtonVolume","onChangeVolume","volume","setVolume","show","setShow","onMouseEnter","onMouseLeave","type","min","max","newVolume","parseInt","MeetingTimer","second","defaultTime","time","setTime","useEffect","timer","setInterval","clearInterval","Math","floor","substr","Options","defaultAudio","audio","defaultVideo","video","joinMeeting","setAudio","setVideo","contentClassname","backdropOpacity","onClose","closeOnBackdrop","centered","closeBtn","MeetingLoading","loading","tile_canvas","1","2","3","4","5","6","7","RTMClient","appId","uid","channelName","token","addMessage","channels","_logined","client","accountName","this","AgoraRTM","createInstance","enableLogUpload","logFilter","LOG_FILTER_OFF","subscribeClientEvents","joinChannel","forEach","eventName","channel","on","args","console","log","text","login","logout","name","createChannel","joined","subscribeChannelEvents","join","leave","sendMessage","peerId","sendMessageToPeer","toString","memberId","queryPeersOnlineStatus","AgoraRTC","Logger","setLogLevel","AgoraVideoCall","leaveMeeting","meetingId","rtmUid","rtmToken","useRef","localStream","shareClient","shareStream","uidRef","rtmClient","displayMode","streamList","setStreamList","readyState","setReadyState","configSharing","messages","setMessages","mainScreen","setMainScreen","msg","created_date","Date","getTime","addStream","useCallback","stream","push","some","item","getId","concat","streamInit","videoProfile","defaultConfig","streamID","screen","createStream","setVideoProfile","subscribeStreamEvents","current","evt","toLocaleTimeString","subscribe","err","removeStream","index","length","close","element","document","querySelector","parentNode","removeChild","tempList","splice","useLayoutEffect","clientConfig","mode","createClient","init","publish","unpublish","canvas","idx","map","id","dom","btnReverse","createElement","setAttribute","onclick","appendChild","play","player","resize","no","update","style","display","gridGap","alignItems","justifyItems","gridTemplateRows","gridTemplateColumns","isVideoOn","disableVideo","enableVideo","isAudioOn","disableAudio","enableAudio","setAudioVolume","currentTarget","classList","contains","sendChannelMessage","LOADING","SETTING","CALLING","Meeting","match","params","callApi","useApi","history","useHistory","configs","setConfigs","channelInfo","setChannelInfo","state","setState","method","api","config","rest","startMeeting","status","data","SUCCESS","rtm_user","rtm_token","getInfoMeeting","Render","minHeight"],"mappings":"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","file":"static/js/12.23185e13.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './ControlButton.scss';\n\nexport interface ControlButtonProps {\n  title?: string;\n  icon?: string;\n  className?: string;\n  onClick?: (e?: any) => void;\n  disabled?: boolean;\n  isOff?: boolean;\n}\n\nconst ControlButton: React.FC<ControlButtonProps> = (props) => {\n  const { title, icon, onClick, disabled, className = '', isOff = false } = props;\n  const [off, setOff] = useState(isOff);\n\n  /**\n   * Click icon will toggle on, off\n   */\n  const handleClickButton = (e: any) => {\n    setOff(!off);\n    onClick?.(e);\n  };\n\n  return (\n    <span\n      title={title}\n      onClick={handleClickButton}\n      className={`ControlButton__btn${disabled ? ' disabled' : ''} ${className}`}\n    >\n      <i className={`hb-icon-${icon}${off ? ' off' : ''}`} />\n    </span>\n  );\n};\n\nexport default ControlButton;\n","import React, { useState } from 'react';\nimport './MessageInput.scss';\n\ninterface Props {\n  onSubmit: any;\n}\n\nconst MessageInput: React.FC<Props> = (props) => {\n  const { onSubmit } = props;\n\n  const [value, setValue] = useState('');\n\n  /**\n   * Submit message if value not empty\n   * @param e\n   */\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    if (!value.trim()) return;\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"MessageInput\">\n        <input placeholder=\"Antworten ...\" value={value} onChange={(e) => setValue(e.target.value)} />\n        <button>\n          <i className=\"hb-icon-send-2\" onClick={handleSubmit} />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageInput;\n","import { HBSwitch } from 'hbBaseClass';\nimport React from 'react';\nimport './RenderSwitch.scss';\n\ninterface Props {\n  label: string;\n  switchState: boolean;\n  setSwitchState: any;\n}\n\nconst RenderSwitch: React.FC<Props> = (props) => {\n  const { label, switchState, setSwitchState } = props;\n\n  return (\n    <div className=\"RenderSwitch-switch-wrapper\">\n      <h6 className=\"RenderSwitch-switch-wrapper__label\">{label}</h6>\n      <HBSwitch checked={switchState} onClick={() => setSwitchState(!switchState)} />\n    </div>\n  );\n};\n\nexport default RenderSwitch;\n","import { defaultAvatar } from 'extensions';\nimport React from 'react';\nimport './MessageItem.scss';\n\ninterface Props {\n  isMe: boolean;\n  avatar?: string;\n  content: string;\n}\n\nconst MessageItem: React.FC<Props> = (props) => {\n  const { isMe, avatar = defaultAvatar, content } = props;\n\n  return (\n    <div className={`MessageItem${isMe ? ' is-me' : ''}`}>\n      {!isMe && <img className=\"MessageItem-avatar\" src={avatar} alt=\"avatar\" />}\n      <div>{content}</div>\n    </div>\n  );\n};\n\nexport default MessageItem;\n","import React from 'react';\nimport ControlButton, { ControlButtonProps } from './ControlButton';\n\nconst ControlButtonLeave: React.FC<ControlButtonProps> = (props) => (\n  <ControlButton icon=\"call-decline\" title=\"Leave\" className=\"leave\" {...props} />\n);\n\nexport default ControlButtonLeave;\n","import React, { useState } from 'react';\nimport { ControlButtonProps } from './ControlButton';\nimport './ControlButtonVolume.scss';\n\ninterface ControlButtonVolumeProps extends ControlButtonProps {\n  onChangeVolume: any;\n}\n\nconst ControlButtonVolume: React.FC<ControlButtonVolumeProps> = (props) => {\n  const { onChangeVolume } = props;\n\n  const [volume, setVolume] = useState(100);\n  const [show, setShow] = useState(false);\n\n  /**\n   * Set volume when change value of input range\n   * @param e \n   */\n  const handleChangeVolume = (e: any) => {\n    const newVolume = e.target.value;\n    setVolume(newVolume);\n    onChangeVolume(parseInt(newVolume));\n  };\n\n  return (\n    <div className=\"ControlButtonVolume\">\n      <span\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n        title=\"Volume\"\n        className={`ControlButton__btn${show ? ' square' : ''}`}\n      >\n        {show && (\n          <div className=\"ControlButton__btn-control\">\n            <input type=\"range\" min={0} max={100} value={volume} onChange={handleChangeVolume} />\n          </div>\n        )}\n        <i className={`hb-icon-meeting-volume-high`} />\n      </span>\n    </div>\n  );\n};\n\nexport default ControlButtonVolume;\n","import React, { useEffect, useState } from 'react';\nimport './MeetingTimer.scss';\n\nconst s2m = (second: number) => {\n  return ('0' + Math.floor(second / 60)).substr(-2) + ':' + ('0' + (second % 60)).substr(-2);\n};\n\ninterface Props {\n  defaultTime: number;\n}\n\nconst MeetingTimer: React.FC<Props> = (props) => {\n  const [time, setTime] = useState(props.defaultTime);\n\n  /**\n   * Increase time every 1 second\n   */\n  useEffect(() => {\n    const timer = setInterval(() => setTime((time) => time + 1), 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <div className=\"MeetingTimer\">\n      <div className=\"MeetingTimer-ellipse\" />\n      <span>{s2m(time)}</span>\n    </div>\n  );\n};\n\nexport default MeetingTimer;\n","import { HBButtonFull, HBModal } from 'hbBaseClass';\nimport React, { useState } from 'react';\nimport { RenderSwitch } from '../components';\nimport './Options.scss';\n\ninterface Props {\n  audio: boolean;\n  video: boolean;\n  joinMeeting: (audio: boolean, video: boolean) => void;\n}\n\nconst Options: React.FC<Props> = (props) => {\n  const { audio: defaultAudio, video: defaultVideo, joinMeeting } = props;\n\n  const [audio, setAudio] = useState(defaultAudio);\n  const [video, setVideo] = useState(defaultVideo);\n\n  /**\n   * Join meeting when click join\n   */\n  const handleClickJoin = () => {\n    joinMeeting(audio, video);\n  };\n\n  return (\n    <HBModal\n      contentClassname=\"padding-small\"\n      backdropOpacity={0}\n      show={true}\n      onClose={() => {}}\n      closeOnBackdrop={false}\n      centered\n      closeBtn={true}\n    >\n      <div className=\"text-center\">\n        <h2 className=\"Options-title\">Teilnehmeroptionen</h2>\n        <RenderSwitch label=\"Ton einschalten\" switchState={audio} setSwitchState={setAudio} />\n        <div className=\"Options-hr\" />\n        <RenderSwitch label=\"Video einschalten\" switchState={video} setSwitchState={setVideo} />\n        <div className=\"Options-btn-join\">\n          <HBButtonFull onClick={handleClickJoin}>Teilnehmen</HBButtonFull>\n        </div>\n      </div>\n    </HBModal>\n  );\n};\n\nexport default Options;\n","export default __webpack_public_path__ + \"static/media/loading.5f9bf437.gif\";","import React from 'react';\nimport loading from 'assets/images/loading.gif';\nimport './MeetingLoading.scss';\n\nconst MeetingLoading: React.FC = () => {\n  return (\n    <div className=\"MeetingLoading\">\n      <div className=\"MeetingLoading-wrapper\">\n        <img src={loading} alt=\"loading\" />\n        <h3>Verbindung wird aufgebaut...</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default MeetingLoading;\n","export const AGORA_APP_ID = '8d7e950852c341c7b2050e83261bde49';\n\nexport const tile_canvas: any = {\n  1: ['span 12/span 24'],\n  2: ['span 12/span 12/13/25', 'span 12/span 12/13/13'],\n  3: ['span 6/span 12', 'span 6/span 12', 'span 6/span 12/7/19'],\n  4: ['span 6/span 12', 'span 6/span 12', 'span 6/span 12', 'span 6/span 12/7/13'],\n  5: [\n    'span 3/span 4/13/9',\n    'span 3/span 4/13/13',\n    'span 3/span 4/13/17',\n    'span 3/span 4/13/21',\n    'span 9/span 16/10/21',\n  ],\n  6: [\n    'span 3/span 4/13/7',\n    'span 3/span 4/13/11',\n    'span 3/span 4/13/15',\n    'span 3/span 4/13/19',\n    'span 3/span 4/13/23',\n    'span 9/span 16/10/21',\n  ],\n  7: [\n    'span 3/span 4/13/5',\n    'span 3/span 4/13/9',\n    'span 3/span 4/13/13',\n    'span 3/span 4/13/17',\n    'span 3/span 4/13/21',\n    'span 3/span 4/13/25',\n    'span 9/span 16/10/21',\n  ],\n};\n\nexport type MessageType = {\n  uid: string;\n  created_date?: number;\n  avatar?: string;\n  content: string;\n};\n","import AgoraRTM from 'agora-rtm-sdk';\n\nexport default class RTMClient {\n  channels: any;\n  _logined: boolean;\n  client: any;\n  accountName: string;\n  addMessage: any;\n  channelName: string;\n\n  constructor(appId: string, uid: string, channelName: string, token: string, addMessage: any) {\n    this.channels = {};\n    this._logined = false;\n    this.accountName = '';\n    this.client = AgoraRTM.createInstance(appId, { enableLogUpload: false, logFilter: AgoraRTM.LOG_FILTER_OFF });\n    this.channelName = channelName;\n    this.subscribeClientEvents();\n    this.joinChannel(channelName, uid, token);\n    this.addMessage = addMessage;\n  }\n\n  // subscribe client events\n  subscribeClientEvents() {\n    const clientEvents = ['ConnectionStateChanged', 'MessageFromPeer'];\n    clientEvents.forEach((eventName) => {\n      // this.client.on(eventName, (...args: any) => {\n      //   console.log('emit ', eventName, ...args);\n      //   this.addMessage({ uid: args[1], message: args[0].text });\n      // });\n    });\n  }\n\n  // subscribe channel events\n  subscribeChannelEvents(channelName: string) {\n    const channelEvents = ['MemberJoined', 'MemberLeft'];\n    channelEvents.forEach((eventName) => {\n      this.channels[channelName].channel.on(eventName, (...args: any) => {\n        console.log('emit ', eventName, args);\n        // this.addMessage({ uid: 'System', message: args });\n      });\n    });\n    this.channels[channelName].channel.on('ChannelMessage', (...args: any) => {\n      console.log('emit ', 'ChannelMessage', args);\n      this.addMessage({ uid: args[1], content: args[0].text });\n    });\n  }\n\n  async login(accountName: string, token: string) {\n    this.accountName = accountName;\n    return this.client.login({ uid: this.accountName, token });\n  }\n\n  async logout() {\n    return this.client.logout();\n  }\n\n  async joinChannel(name: string, uid: string, token: string) {\n    await this.login(uid, token);\n    const channel = this.client.createChannel(name);\n    this.channels[name] = {\n      channel,\n      joined: false, // channel state\n    };\n    this.subscribeChannelEvents(name);\n    return channel.join();\n  }\n\n  async leaveChannel(name: string) {\n    console.log('leaveChannel', name);\n    if (!this.channels[name] || (this.channels[name] && !this.channels[name].joined)) return;\n    return this.channels[name].channel.leave();\n  }\n\n  async sendChannelMessage(text: string) {\n    const channelName = this.channelName;\n    if (!this.channels[channelName]) return; //  || !this.channels[channelName].joined\n    this.addMessage({ uid: this.accountName, content: text });\n    return this.channels[channelName].channel.sendMessage({ text });\n  }\n\n  async sendPeerMessage(text: string, peerId: string) {\n    console.log('sendPeerMessage', text, peerId);\n    return this.client.sendMessageToPeer({ text }, peerId.toString());\n  }\n\n  async queryPeersOnlineStatus(memberId: string) {\n    console.log('queryPeersOnlineStatus', memberId);\n    return this.client.queryPeersOnlineStatus([memberId]);\n  }\n\n  //send image\n  // async uploadImage(blob, peerId) {\n  //   const mediaMessage = await this.client.createMediaMessageByUploading(blob, {\n  //     messageType: 'IMAGE',\n  //     fileName: 'agora.jpg',\n  //     description: 'send image',\n  //     thumbnail: blob,\n  //     // width: 100,\n  //     // height: 200,\n  //     // thumbnailWidth: 50,\n  //     // thumbnailHeight: 200,\n  //   });\n  //   return this.client.sendMessageToPeer(mediaMessage, peerId);\n  // }\n\n  // async sendChannelMediaMessage(blob, channelName) {\n  //   console.log('sendChannelMessage', blob, channelName);\n  //   if (!this.channels[channelName] || !this.channels[channelName].joined) return;\n  //   const mediaMessage = await this.client.createMediaMessageByUploading(blob, {\n  //     messageType: 'IMAGE',\n  //     fileName: 'agora.jpg',\n  //     description: 'send image',\n  //     thumbnail: blob,\n  //     // width: 100,\n  //     // height: 200,\n  //     // thumbnailWidth: 50,\n  //     // thumbnailHeight: 200,\n  //   });\n  //   return this.channels[channelName].channel.sendMessage(mediaMessage);\n  // }\n\n  // async cancelImage(message) {\n  //   const controller = new AbortController();\n  //   setTimeout(() => controller.abort(), 1000);\n  //   await this.client.downloadMedia(message.mediaId, {\n  //     cancelSignal: controller.signal,\n  //     onOperationProgress: ({ currentSize, totalSize }) => {\n  //       console.log(currentSize, totalSize);\n  //     },\n  //   });\n  // }\n}\n","import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport AgoraRTC from 'agora-rtc-sdk';\nimport { AGORA_APP_ID, tile_canvas, MessageType } from './configs';\nimport RTMClient from './RTMClient';\nimport {\n  MessageInput,\n  ControlButton,\n  MessageItem,\n  ControlButtonLeave,\n  ControlButtonVolume,\n  MeetingTimer,\n} from '../components';\nimport './AgoraVideoCall.scss';\n\ndeclare var global: {\n  _toolbarToggle: any;\n};\n\nAgoraRTC.Logger.setLogLevel(4);\n\ninterface Props {\n  audio: boolean;\n  video: boolean;\n  leaveMeeting: () => void;\n  meetingId: string;\n  uid: string;\n  rtmUid: string;\n  token: string;\n  rtmToken: string;\n}\n\nconst AgoraVideoCall: React.FC<Props> = (props) => {\n  const { audio, video, leaveMeeting, meetingId, uid, rtmUid, token, rtmToken } = props;\n\n  const videoProfile = '480p_4';\n  const transcode = 'interop';\n  const appId = AGORA_APP_ID;\n\n  const client = useRef<any>({});\n  const localStream = useRef<AgoraRTC.Stream | null | any>(null);\n  const shareClient = useRef<any>({});\n  const shareStream = useRef<any>({});\n  const uidRef = useRef('');\n  const rtmClient = useRef<RTMClient | null>(null);\n\n  const [displayMode, setDisplayMode] = useState('pip');\n  const [streamList, setStreamList] = useState<any[]>([]);\n  const [readyState, setReadyState] = useState(false);\n  const [configSharing, setConfigSharing] = useState(false);\n  const [messages, setMessages] = useState<MessageType[]>([\n    { uid: 'System', content: 'Hi there!' },\n    {\n      uid: 'System',\n      content:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.',\n    },\n  ]);\n  const [mainScreen, setMainScreen] = useState(0);\n\n  /**\n   * Add message to message list\n   * @param msg: MessageType\n   */\n  const addMessage = (msg: MessageType) =>\n    setMessages((messages) => [...messages, { ...msg, created_date: new Date().getTime() / 1000 }]);\n\n  /**\n   * When change volume, set volume of all stream in list\n   * @param volume\n   */\n  const handleChangeVolume = (volume: number) => {\n    streamList.map((item) => item.setAudioVolume(volume));\n  };\n\n  /**\n   * Add user to stream list\n   */\n  const addStream = useCallback((stream: any, push = false) => {\n    setStreamList((streamList: any[]) => {\n      let repeatition = streamList.some((item: any) => {\n        return item.getId() === stream.getId();\n      });\n      if (repeatition) {\n        return streamList;\n      }\n      if (push) {\n        return streamList.concat([stream]);\n      } else {\n        return [stream].concat(streamList);\n      }\n    });\n  }, []);\n\n  /**\n   * Init info of stream\n   */\n  const streamInit = useCallback((uid: string, videoProfile: any) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio,\n      video,\n      screen: false,\n    };\n\n    let stream = AgoraRTC.createStream(defaultConfig);\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  }, []);\n\n  /**\n   * Listening event join, leave room\n   */\n  const subscribeStreamEvents = useCallback(() => {\n    client.current.on('stream-added', (evt: any) => {\n      let stream = evt.stream;\n      addMessage({ uid: 'System', content: 'New stream added: ' + stream.getId() });\n      console.log('At ' + new Date().toLocaleTimeString());\n      console.log('Subscribe ', stream);\n      client.current.subscribe(stream, (err: any) => {\n        console.log('Subscribe stream failed', err);\n      });\n    });\n\n    client.current.on('peer-leave', (evt: any) => {\n      console.log('Peer has left: ' + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      removeStream(evt.uid);\n    });\n\n    client.current.on('stream-subscribed', (evt: any) => {\n      let stream = evt.stream;\n      console.log('Got stream-subscribed event');\n      console.log(new Date().toLocaleTimeString());\n      console.log('Subscribe remote stream successfully: ' + stream.getId());\n      console.log(evt);\n      addStream(stream);\n    });\n\n    client.current.on('stream-removed', (evt: any) => {\n      let stream = evt.stream;\n      console.log('Stream removed: ' + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      removeStream(stream.getId());\n    });\n  }, []);\n\n  /**\n   * Remove user from stream when user leave\n   */\n  const removeStream = useCallback((uid: string) => {\n    setStreamList((streamList: any[]) => {\n      for (let index = 0; index < streamList.length; index++) {\n        const item = streamList[index];\n\n        if (item.getId() === uid) {\n          item.close();\n          let element = document.querySelector('#ag-item-' + uid);\n          if (element) {\n            element?.parentNode?.removeChild(element);\n          }\n          let tempList = [...streamList];\n          tempList.splice(index, 1);\n          return tempList;\n        }\n      }\n      return streamList;\n    });\n  }, []);\n\n  /**\n   * Toggle camera on or off\n   * @param e\n   */\n  const handleCamera = (e: any) => {\n    localStream.current?.isVideoOn() ? localStream.current?.disableVideo() : localStream.current?.enableVideo();\n  };\n\n  /**\n   * Toggle microphone on or off\n   * @param e\n   */\n  const handleMic = (e: any) => {\n    localStream.current?.isAudioOn() ? localStream.current.disableAudio() : localStream.current?.enableAudio();\n  };\n\n  /**\n   * Leave room when user click button leave\n   * @param e\n   */\n  const handleExit = (e: any) => {\n    if (e.currentTarget.classList.contains('disabled')) {\n      return;\n    }\n    try {\n      client.current?.unpublish(localStream);\n      localStream.current?.close();\n      // if (configSharing) {\n      //   shareClient.current?.unpublish(shareStream);\n      //   shareStream.current?.close();\n      // }\n      client.current?.leave(\n        () => {\n          console.log('Client succeed to leave.');\n        },\n        () => {\n          console.log('Client failed to leave.');\n        },\n      );\n    } finally {\n      setReadyState(false);\n      client.current = null;\n      localStream.current = null;\n      leaveMeeting();\n    }\n  };\n\n  // const switchDisplay = (e: any) => {\n  //   if (e.currentTarget.classList.contains('disabled') || streamList.length <= 1) {\n  //     return;\n  //   }\n\n  //   if (displayMode === 'pip') {\n  //     setDisplayMode('tile');\n  //   } else if (displayMode === 'tile') {\n  //     setDisplayMode('pip');\n  //   } else if (displayMode === 'share') {\n  //     // do nothing or alert, tbd\n  //   } else {\n  //     console.error('Display Mode can only be tile/pip/share');\n  //   }\n  // };\n\n  // const hideRemote = (e: any) => {\n  //   if (e.currentTarget.classList.contains('disabled') || streamList.length <= 1) {\n  //     return;\n  //   }\n  //   let list;\n  //   let id = streamList[streamList.length - 1].getId();\n  //   list = Array.from(document.querySelectorAll(`.ag-item:not(#ag-item-${id})`));\n  //   list.map((item: any) => {\n  //     if (item.style.display !== 'none') {\n  //       item.style.display = 'none';\n  //     } else {\n  //       item.style.display = 'block';\n  //     }\n  //   });\n  // };\n\n  // const sharingScreen = (e: any) => {\n  //   if (configSharing) {\n  //     shareClient.current?.unpublish(shareStream);\n  //     shareStream.current?.close();\n  //     setConfigSharing(false);\n  //   } else {\n  //     setConfigSharing(true);\n  //     // init AgoraRTC local client\n  //     const clientConfig: any = { mode: transcode };\n  //     shareClient.current = AgoraRTC.createClient(clientConfig);\n  //     shareClient.current?.init(configs.appId, () => {\n  //       console.log('AgoraRTC client initialized');\n  //       subscribeStreamEvents();\n  //       shareClient.current?.join(appId, channel, uid, (uid: string) => {\n  //         uidRef.current = uid;\n  //         console.log('User ' + uid + ' join channel successfully');\n  //         console.log('At ' + new Date().toLocaleTimeString());\n  //         // create local stream\n  //         // It is not recommended to setConfig in function addStream\n  //         shareStream.current = streamInitSharing(uid, videoProfile);\n  //         shareStream.current?.init(\n  //           () => {\n  //             if (video) {\n  //               addStream(shareStream.current, true);\n  //               shareClient.current?.publish(shareStream.current, (err: any) => {\n  //                 console.log('Publish local stream error: ' + err);\n  //               });\n  //             }\n  //             setReadyState(true);\n  //           },\n  //           (err: any) => {\n  //             console.log('getUserMedia failed', err);\n  //             setReadyState(true);\n  //           },\n  //         );\n  //       });\n  //     });\n  //   }\n  // };\n\n  // const streamInitSharing = (uid: string, videoProfile: any, config?: any) => {\n  //   let defaultConfig = {\n  //     streamID: uid,\n  //     audio: true,\n  //     video: false,\n  //     screen: true,\n  //   };\n\n  //   let stream = AgoraRTC.createStream(defaultConfig);\n  //   stream.setVideoProfile(videoProfile);\n  //   return stream;\n  // };\n\n  useLayoutEffect(() => {\n    // init AgoraRTC local client\n    const clientConfig: any = { mode: transcode };\n    client.current = AgoraRTC.createClient(clientConfig);\n\n    client.current.init(appId, () => {\n      console.log('AgoraRTC client initialized');\n      subscribeStreamEvents();\n      client.current.join(token, meetingId, uid, (uid: string) => {\n        uidRef.current = uid;\n        console.log('User ' + uid + ' join channel successfully');\n        console.log('At ' + new Date().toLocaleTimeString());\n\n        rtmClient.current = new RTMClient(appId, rtmUid, meetingId, rtmToken, addMessage);\n\n        // create local stream\n        // It is not recommended to setConfig in function addStream\n        localStream.current = streamInit(uid, videoProfile);\n        localStream.current?.init(\n          () => {\n            if (video) {\n              console.log(localStream.current);\n              addStream(localStream.current, true);\n              client.current.publish(localStream.current, (err: any) => {\n                console.log('Publish local stream error: ' + err);\n              });\n            }\n            setReadyState(true);\n          },\n          (err: any) => {\n            console.log('getUserMedia failed', err);\n            setReadyState(true);\n          },\n        );\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    // let canvas = document.querySelector('#ag-canvas');\n    // let btnGroup = document.querySelector('.ag-btn-group');\n    // canvas?.addEventListener('mousemove', () => {\n    //   if (global._toolbarToggle) {\n    //     clearTimeout(global._toolbarToggle);\n    //   }\n    //   btnGroup?.classList.add('active');\n    //   global._toolbarToggle = setTimeout(function () {\n    //     btnGroup?.classList.remove('active');\n    //   }, 2000);\n    // });\n\n    return () => {\n      client.current?.unpublish(localStream.current);\n      localStream.current?.close();\n      if (configSharing) {\n        shareClient.current?.unpublish(shareStream.current);\n        shareStream.current?.close();\n      }\n      client.current?.leave(\n        () => {\n          console.log('Client succeed to leave.');\n        },\n        () => {\n          console.log('Client failed to leave.');\n        },\n      );\n    };\n  }, []);\n\n  const update = () => {\n    // rerendering\n    let canvas = document.querySelector('#ag-canvas');\n    // pip mode (can only use when less than 4 people in channel)\n    if (displayMode === 'pip') {\n      let no = streamList.length;\n      // if (no > 4) {\n      //   setDisplayMode('tile');\n      //   return;\n      // }\n\n      let idx = 0;\n\n      streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector('#ag-item-' + id);\n        let btnReverse: any = document.querySelector('#ag-item-btn-reverse-' + id);\n\n        if (!dom) {\n          dom = document.createElement('section');\n          dom.setAttribute('id', 'ag-item-' + id);\n\n          btnReverse = document.createElement('button');\n          btnReverse.setAttribute('id', 'ag-item-btn-reverse-' + id);\n          btnReverse.setAttribute('class', 'AgoraVideoCall-btn-reverse');\n          btnReverse.onclick = () => setMainScreen((mainScreen) => 1 - mainScreen);\n          dom.appendChild(btnReverse);\n          const icon = document.createElement('i');\n          icon.setAttribute('class', 'hb-icon-refresh-ccw');\n          btnReverse.appendChild(icon);\n\n          canvas?.appendChild(dom);\n          item.play('ag-item-' + id);\n        }\n        if (index === mainScreen) {\n          dom.setAttribute('style', 'position:relative; grid-area: 1/1/5/5');\n          dom.setAttribute('class', 'ag-item');\n          btnReverse.setAttribute('style', 'visibility: hidden');\n        } else {\n          dom.setAttribute('class', 'ag-item small');\n          dom.setAttribute(\n            'style',\n            `position:relative; grid-area: span 1/span 1/${5 - idx}/5; z-index: 1; padding: 0 19px 17px 0`,\n          );\n          btnReverse.setAttribute('style', 'visibility: visible');\n          idx += 1;\n        }\n\n        item.player?.resize?.();\n      });\n    }\n    // tile mode\n    else if (displayMode === 'tile') {\n      let no = streamList.length;\n      streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector('#ag-item-' + id);\n        if (!dom) {\n          dom = document.createElement('section');\n          dom.setAttribute('id', 'ag-item-' + id);\n          dom.setAttribute('class', 'ag-item');\n          canvas?.appendChild(dom);\n          item.play('ag-item-' + id);\n        }\n        dom.setAttribute('style', `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (displayMode === 'share') {\n    }\n  };\n\n  update();\n\n  const style = {\n    display: 'grid',\n    gridGap: '10px',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gridTemplateRows: 'repeat(4, auto)',\n    gridTemplateColumns: 'repeat(4, auto)',\n  };\n\n  // const switchDisplayBtn = (\n  //   <span\n  //     onClick={switchDisplay}\n  //     className={\n  //       streamList.length > 4\n  //         ? 'AgoraVideoCall-btn-group__btn displayModeBtn disabled'\n  //         : 'AgoraVideoCall-btn-group__btn displayModeBtn'\n  //     }\n  //     title=\"Switch Display Mode\"\n  //   >\n  //     <i className=\"ag-icon ag-icon-switch-display\"></i>\n  //   </span>\n  // );\n\n  // const hideRemoteBtn = (\n  //   <span\n  //     className={\n  //       streamList.length > 4 || displayMode !== 'pip'\n  //         ? 'AgoraVideoCall-btn-group__btn disableRemoteBtn disabled'\n  //         : 'AgoraVideoCall-btn-group__btn disableRemoteBtn'\n  //     }\n  //     onClick={hideRemote}\n  //     title=\"Hide Remote Stream\"\n  //   >\n  //     <i className=\"ag-icon ag-icon-remove-pip\"></i>\n  //   </span>\n  // );\n\n  return (\n    <div className=\"hb-wrapper\">\n      <div className=\"wrapper meeting\">\n        <div className=\"row AgoraVideoCall\">\n          <div className=\"col-md-8\">\n            <div className=\"ag-main\">\n              <div className=\"AgoraVideoCall-info\">\n                <div className=\"AgoraVideoCall-info-nurse\">\n                  <img\n                    alt=\"avatar\"\n                    src=\"https://petmaster.vn/petroom/wp-content/uploads/2020/03/cho-corgi-4.jpg\"\n                    className=\"AgoraVideoCall-info-nurse__avatar\"\n                  />\n                  <div className=\"AgoraVideoCall-info-nurse__name\">\n                    <h3>Pflegeberatung</h3>\n                    <span>Maxima Mustermann</span>\n                  </div>\n                </div>\n                <MeetingTimer defaultTime={0} />\n              </div>\n              <div className=\"ag-container\">\n                <div id=\"ag-canvas\" style={style} />\n              </div>\n              <div className=\"AgoraVideoCall-btn-group\">\n                <div className=\"AgoraVideoCall-btn-group__left\">\n                  <ControlButton\n                    icon=\"meeting-camera-2\"\n                    title=\"Turn on/off Camera\"\n                    onClick={handleCamera}\n                    isOff={!video}\n                  />\n                  <ControlButton icon=\"meeting-mic-2\" title=\"Turn on/off Mic\" onClick={handleMic} isOff={!audio} />\n                  <ControlButtonVolume onChangeVolume={handleChangeVolume} />\n                  <ControlButton icon=\"arrows-expand\" title=\"Fullscreen\" />\n                </div>\n                <ControlButtonLeave disabled={!readyState} onClick={handleExit} />\n                {/* {\n                  <span\n                    onClick={sharingScreen}\n                    className=\"AgoraVideoCall-btn-group__btn shareScreenBtn\"\n                    title=\"Share/unShare Screen\"\n                  >\n                    <i className=\"ag-icon ag-icon-screen-share\"></i>\n                  </span>\n                }\n                {switchDisplayBtn}\n                {hideRemoteBtn} */}\n              </div>\n              {/* <input type=\"range\" onChange={handleChangeVolume} max=\"100\" value={volume} /> */}\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"AgoraVideoCall-messages\">\n              <h3 className=\"AgoraVideoCall-messages__header\">Chat</h3>\n              <div className=\"AgoraVideoCall-messages__body\">\n                <div className=\"AgoraVideoCall-messages__body-wrapper\">\n                  <div className=\"hb-scroll AgoraVideoCall-messages__body-wrapper-scroll\">\n                    {messages.map((item: MessageType, index) => (\n                      <MessageItem key={index} isMe={item.uid === rtmUid} {...item} />\n                    ))}\n                  </div>\n                </div>\n                <MessageInput onSubmit={(value: string) => rtmClient.current?.sendChannelMessage(value)} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgoraVideoCall;\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { MeetingLoading, Options, AgoraVideoCall } from './screens';\nimport '../containers/Layout.scss';\nimport { SUCCESS, useApi } from 'store/callApi';\nimport config from 'config';\n\nconst MEETING_STATES = {\n  LOADING: 0,\n  SETTING: 1,\n  CALLING: 2,\n};\n\nconst { LOADING, SETTING, CALLING } = MEETING_STATES;\n\nconst Meeting: React.FC<RouteComponentProps> = (props) => {\n  const params: any = props.match?.params;\n  const meetingId = params.id;\n  const { callApi } = useApi();\n  const history = useHistory();\n\n  const [configs, setConfigs] = useState({ audio: false, video: true });\n  const [channelInfo, setChannelInfo] = useState({ uid: '', token: '', rtmUid: '', rtmToken: '' });\n  const [state, setState] = useState(LOADING);\n\n  useEffect(() => {\n    callApi({ method: 'get', api: config.rest.startMeeting(meetingId) }, ({ status, data }) => {\n      if (status !== SUCCESS) {\n        history.push('/404');\n      } else {\n        setState(SETTING);\n        setChannelInfo({\n          uid: data?.uid,\n          token: data?.token,\n          rtmUid: data?.rtm_user,\n          rtmToken: data?.rtm_token,\n        });\n      }\n    });\n    callApi({ method: 'get', api: config.rest.getInfoMeeting(meetingId) }, ({ status, data }) => {\n      if (status !== SUCCESS) {\n        history.push('/404');\n      } else {\n        console.log(data);\n      }\n    });\n  }, []);\n\n  const joinMeeting = (audio: boolean, video: boolean) => {\n    setConfigs({ audio, video });\n    setState(CALLING);\n  };\n\n  const leaveMeeting = () => {\n    setState(SETTING);\n  };\n\n  let Render;\n\n  switch (state) {\n    case LOADING:\n      Render = <MeetingLoading />;\n      break;\n\n    case SETTING:\n      Render = <Options {...configs} joinMeeting={joinMeeting} />;\n      break;\n\n    case CALLING:\n      Render = <AgoraVideoCall {...configs} {...channelInfo} meetingId={meetingId} leaveMeeting={leaveMeeting} />;\n      break;\n  }\n\n  return (\n    <div className=\"petrol\">\n      <div className=\"hb-background\" style={{ minHeight: '100vh' }}>\n        {Render}\n      </div>\n    </div>\n  );\n};\n\nexport default Meeting;\n"],"sourceRoot":""}