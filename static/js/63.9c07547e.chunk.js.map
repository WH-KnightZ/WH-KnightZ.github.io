{"version":3,"sources":["views/admin/newsfeed/ModalCreateArticle.tsx","views/admin/newsfeed/NewsfeedDetail.tsx","views/admin/containers/FieldName.tsx"],"names":["validationSchema","values","Yup","shape","title","trim","required","summary","source","matches","initialValues","image","type","ModalCreateUser","props","dispatch","useDispatch","callApi","useApi","useState","url","name","setImage","id","setArticles","handleClose","show","page","pageSize","formRef","useRef","fileRef","onUploadImage","e","file","target","files","loadingRequest","api","method","response","status","data","SUCCESS","file_path","link","myHeaders","Headers","append","requestOptions","headers","body","redirect","fetch","then","text","result","loadingSuccess","catch","error","console","log","attention","setAttention","close","current","resetForm","className","size","centered","onClose","closeOnBackdrop","onClick","dirty","style","textAlign","padding","display","justifyContent","width","color","innerRef","enableReinitialize","validate","onSubmit","config","rest","adminCreateNewsfeedArticle","loading","articles","newData","created_date","Date","getTime","slice","map","item","index","no","total","totalPages","Math","ceil","errors","touched","handleChange","handleSubmit","isValid","handleBlur","FieldName","label","placeholder","maxLength","invalid","value","onChange","rows","disabled","onBlur","click","minWidth","hidden","ref","accept","defaultModal","NewsfeedDetail","params","match","categoryId","searchName","setSearchName","fromDate","setFromDate","toDate","setToDate","popupDelete","setPopupDelete","modal","setModal","fields","key","_style","renderContent","href","isDate","variant","marginRight","getArticles","newPage","adminGetNewsfeedArticles","category_name","useEffect","noItems","marginTop","ModalCreateArticle","isVisible","adminDeleteContent","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","adminDeleteNewsfeedArticle","to","Search","searchEmpty","callbackSearch","maxDate","date","setDate","minDate","length","items","noItemsViewSlot","hover","striped","scopedSlots","renderFields","pagination","children"],"mappings":"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","file":"static/js/63.9c07547e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  CModalBody,\n  CButton,\n  CForm,\n  CInput,\n  CTextarea,\n  CModalFooter,\n  CInvalidFeedback,\n  CFormGroup,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport config from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { useDispatch } from 'react-redux';\nimport { validate } from '../../../utils';\nimport { loadingRequest, loadingSuccess } from '../../../store/loading/actions';\nimport FieldName from '../containers/FieldName';\nimport { CButtonClose, CModal, CModalHeader } from '../../../components';\nimport { useApi } from 'store/callApi';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    title: Yup.string().trim().required(''),\n    summary: Yup.string().trim().required(''),\n    source: Yup.string()\n      .trim()\n      .required('')\n      .matches(\n        /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/,\n        'URL is invalid',\n      ),\n  });\n};\n\ninterface Props {\n  id: string;\n  name: string;\n  setArticles: any;\n  handleClose: () => void;\n  show: boolean;\n  page: number;\n  pageSize: number;\n}\n\nconst initialValues = {\n  title: '',\n  summary: '',\n  source: '',\n  image: '',\n  type: 'text',\n};\n\n// const isValidURL = (str: string) => {\n//   const res = str.match(\n//     /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g,\n//   );\n//   return res !== null;\n// };\n\nconst ModalCreateUser: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { callApi } = useApi();\n  const [image, setImage] = useState({ url: '', name: '' });\n\n  const { id, name, setArticles, handleClose, show, page, pageSize } = props;\n  const formRef = useRef<any>(null);\n\n  const onSubmit = (values: any) => {\n    const body = {\n      title: values.title.trim(),\n      summary: values.summary.trim(),\n      source: values.source.trim(),\n      image: image.url,\n      type: values.type,\n    };\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.adminCreateNewsfeedArticle(id),\n        body: body,\n        loading: true,\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          setArticles((articles: any) => {\n            const newData = [{ ...body, created_date: new Date().getTime() / 1000 }, ...articles.data]\n              .slice(0, pageSize)\n              .map((item: any, index: number) => {\n                return { ...item, no: index + 1 + pageSize * (page - 1) };\n              });\n            return {\n              ...articles,\n              data: newData,\n              total: articles.total + 1,\n              totalPages: Math.ceil((articles.total + 1) / pageSize),\n              loading: false,\n            };\n          });\n          close();\n        }\n      },\n    );\n  };\n\n  const fileRef = useRef<any>(null);\n\n  const onUploadImage = (e: any) => {\n    let file = e.target.files[0];\n    if (!file) return;\n    dispatch(loadingRequest());\n    callApi(\n      {\n        api: `/api/v1/upload/image-article?file_name=${file.name}`,\n        method: 'get',\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          const url = data.file_path.link;\n          const myHeaders = new Headers();\n          myHeaders.append('x-amz-acl', 'public-read');\n          const requestOptions: any = {\n            method: 'PUT',\n            headers: myHeaders,\n            body: file,\n            redirect: 'follow',\n          };\n          fetch(data.link, requestOptions)\n            .then((response) => response.text())\n            .then((result) => {\n              setImage({ url, name: file.name });\n              dispatch(loadingSuccess());\n            })\n            .catch((error) => {\n              console.log(error);\n              dispatch(loadingSuccess());\n            });\n        } else {\n          dispatch(loadingSuccess());\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState(false);\n\n  const close = () => {\n    formRef.current.resetForm();\n    setImage({ url: '', name: '' });\n    setAttention(false);\n    handleClose();\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty && !image.name) {\n      close();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <div className=\"flex-row align-items-center\">\n      <CModal size=\"lg\" centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n        <CModalHeader>\n          Create new article\n          <CButtonClose onClick={showAttention} />\n        </CModalHeader>\n        <CModalBody>\n          <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n            <CModalBody style={{ textAlign: 'center', padding: 20 }}>\n              Are you sure you want to discard your changes?\n            </CModalBody>\n            <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n              <CButton style={{ width: 120 }} color=\"danger\" onClick={close}>\n                Discard\n              </CButton>\n              <CButton style={{ width: 120 }} color=\"primary\" onClick={() => setAttention(false)}>\n                Keep editing\n              </CButton>\n            </CModalFooter>\n          </CModal>\n          <Formik\n            innerRef={formRef}\n            enableReinitialize={true}\n            initialValues={initialValues}\n            validate={validate(validationSchema)}\n            onSubmit={onSubmit}\n          >\n            {({ values, errors, touched, dirty, handleChange, handleSubmit, isValid, handleBlur }) => (\n              <CForm onSubmit={handleSubmit}>\n                <FieldName label=\"Title (*)\">\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Title (*)\"\n                    maxLength={100}\n                    invalid={values.title.trim() !== '' && touched.title && !!errors.title}\n                    value={values.title}\n                    onChange={handleChange}\n                    name=\"title\"\n                  />\n                </FieldName>\n                <FieldName label=\"Summary (*)\">\n                  <CTextarea\n                    type=\"text\"\n                    placeholder=\"Summary (*)\"\n                    rows={5}\n                    maxLength={1000}\n                    invalid={values.summary.trim() !== '' && touched.summary && !!errors.summary}\n                    value={values.summary}\n                    onChange={handleChange}\n                    name=\"summary\"\n                  />\n                </FieldName>\n                <FieldName label=\"Category\">\n                  <CInput value={name} disabled />\n                </FieldName>\n                <FieldName label=\"URL (*)\">\n                  <CFormGroup className=\"m-0\">\n                    <CInput\n                      placeholder=\"URL (*)\"\n                      invalid={values.source.trim() !== '' && touched.source && !!errors.source}\n                      value={values.source}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"source\"\n                    />\n                    <CInvalidFeedback className=\"ml-2\">{errors.source}</CInvalidFeedback>\n                  </CFormGroup>\n                </FieldName>\n                <FieldName label=\"Image (*)\">\n                  <div className=\"d-flex align-items-center\">\n                    <CButton\n                      color=\"primary\"\n                      className=\"mr-3\"\n                      onClick={() => fileRef.current.click()}\n                      disabled={!!image.name}\n                      style={{ minWidth: 120 }}\n                    >\n                      Upload image\n                    </CButton>\n                    <div className=\"ellipsis-1-line\">{image.name}</div>\n                    {image.name && (\n                      <i\n                        className=\"fa fa-times-circle ml-2 cursor-pointer\"\n                        style={{ color: 'gray', minWidth: 30 }}\n                        onClick={() => setImage({ url: '', name: '' })}\n                      />\n                    )}\n                  </div>\n                  <input\n                    type=\"file\"\n                    hidden\n                    ref={fileRef}\n                    accept=\"image/x-png,image/gif,image/jpeg\"\n                    onChange={onUploadImage}\n                  />\n                </FieldName>\n                <div style={{ textAlign: 'right' }}>\n                  <CButton color=\"primary\" className=\"px-4\" type=\"submit\" disabled={!(isValid && dirty && image.url)}>\n                    Save\n                  </CButton>\n                </div>\n              </CForm>\n            )}\n          </Formik>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default ModalCreateUser;\n","import React, { useState, useEffect } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { CDataTable, CButton } from '@coreui/react';\nimport { ConfirmPopup, DatePicker } from '../../../components';\nimport Search from '../../../components/search/Search';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport ModalCreateArticle from './ModalCreateArticle';\nimport { adminDeleteContent, pagination, renderFields } from '../../../extensions';\nimport { useApi } from 'store/callApi';\n\ntype ArticleDataType = {\n  no: number;\n  id: string;\n  title: string;\n  summary: string;\n  type: string;\n  created_date: number;\n  source: string;\n};\n\ntype CategoryDataType = {\n  data: ArticleDataType[];\n  total: number;\n  totalPages: number;\n  page: number;\n  loading: boolean;\n  name: string;\n};\n\nconst pageSize = 10;\n\nconst defaultModal = { show: false, id: '', name: '' };\n\nconst NewsfeedDetail: React.FC<RouteComponentProps> = (props) => {\n  const { callApi } = useApi();\n  const params: any = props.match?.params;\n  const categoryId = params?.id;\n  const [searchName, setSearchName] = useState('');\n  const [fromDate, setFromDate] = useState<any>(null);\n  const [toDate, setToDate] = useState<any>(null);\n\n  const [articles, setArticles] = useState<CategoryDataType>({\n    data: [],\n    total: 0,\n    totalPages: 0,\n    page: 1,\n    loading: true,\n    name: '',\n  });\n  const [popupDelete, setPopupDelete] = useState({ show: false, id: '' });\n  const [modal, setModal] = useState(defaultModal);\n\n  const fields = [\n    { key: 'no', _style: { width: '4%' } },\n    { key: 'title', _style: { width: '24%' } },\n    { key: 'summary', _style: { width: '30%' } },\n    {\n      key: 'source',\n      label: 'Link',\n      _style: { width: '24%' },\n      renderContent: (item: ArticleDataType) => (\n        <a target=\"_blank\" href={item.source}>\n          {item.source}\n        </a>\n      ),\n    },\n    { key: 'created_date', _style: { width: '10%' }, isDate: true },\n    {\n      key: 'action',\n      _style: { width: '10%' },\n      renderContent: (item: ArticleDataType) => (\n        <CButton\n          color=\"primary\"\n          variant=\"outline\"\n          shape=\"square\"\n          size=\"sm\"\n          style={{\n            marginRight: 10,\n          }}\n          onClick={() => setPopupDelete({ show: true, id: item.id })}\n        >\n          <i className=\"fas fa-trash-alt\"> </i>\n        </CButton>\n      ),\n    },\n  ];\n\n  const getArticles = (newPage: number, searchName: string) => {\n    setArticles({ ...articles, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.adminGetNewsfeedArticles(\n          categoryId,\n          newPage,\n          searchName,\n          fromDate ? fromDate.getTime() / 1000 : null,\n          toDate ? toDate.getTime() / 1000 + 86399 : null,\n        ),\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          setArticles({\n            data: data.articles.map((item: any, index: number) => {\n              return { ...item, no: index + 1 + pageSize * (newPage - 1) };\n            }),\n            total: data.total,\n            totalPages: Math.ceil(data.total / pageSize),\n            page: newPage,\n            loading: false,\n            name: data.category_name,\n          });\n        } else {\n          setArticles((articles: CategoryDataType) => {\n            return { ...articles, loading: false };\n          });\n        }\n      },\n    );\n  };\n\n  const handleDelete = (id: string) => {\n    setPopupDelete({ ...popupDelete, show: false });\n    setArticles({ ...articles, loading: true });\n    callApi({ method: 'delete', api: config.rest.adminDeleteNewsfeedArticle(categoryId, id) }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        getArticles(articles.page, searchName);\n      }\n    });\n  };\n\n  const pageChange = (newPage: number) => {\n    if (articles.page !== newPage) {\n      getArticles(newPage, searchName);\n    }\n  };\n\n  useEffect(() => {\n    getArticles(1, searchName);\n  }, [fromDate, toDate]);\n\n  let noItems = <div />;\n\n  if (!articles.loading) {\n    if (!articles.total) noItems = <div>No items found</div>;\n  }\n\n  return (\n    <div className=\"px-5 mx-3\" style={{ marginTop: 10 }}>\n      <ModalCreateArticle\n        {...modal}\n        handleClose={() => setModal(defaultModal)}\n        setArticles={setArticles}\n        page={articles.page}\n        pageSize={pageSize}\n      />\n      <ConfirmPopup\n        isVisible={popupDelete.show}\n        title=\"Delete Article\"\n        renderContent={adminDeleteContent('Are you sure to delete this article')}\n        leftButtonText=\"No\"\n        rightButtonText=\"Yes\"\n        leftButtonOnPress={() => setPopupDelete({ ...popupDelete, show: false })}\n        rightButtonOnPress={() => handleDelete(popupDelete.id)}\n      />\n      <Link className=\"py-2 size-1\" to=\"/admin/newsfeed\">\n        All Categories\n      </Link>\n      <span className=\"size-0 pl-2\">&gt; {articles.name}</span>\n      <div className=\"mt-3\">\n        <div className=\"d-flex align-items-center justify-content-between mt-4 mb-5\">\n          <div className=\"d-flex align-items-center\">\n            <Search\n              className=\"mr-5\"\n              searchName={searchName}\n              setSearchName={setSearchName}\n              searchEmpty={true}\n              callbackSearch={(searchName: string) => getArticles(1, searchName)}\n            />\n            <div>From date:</div>\n            <div>\n              <DatePicker maxDate={toDate} date={fromDate} setDate={setFromDate} />\n            </div>\n            <div>To date:</div>\n            <div>\n              <DatePicker minDate={fromDate} date={toDate} setDate={setToDate} />\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setModal({ show: true, id: categoryId, name: articles.name })}\n              disabled={articles.loading && articles.data.length === 0}\n            >\n              Create new article\n            </button>\n          </div>\n        </div>\n        <div className=\"hb-table\">\n          <CDataTable\n            items={articles.data}\n            fields={fields}\n            loading={articles.loading}\n            noItemsViewSlot={noItems}\n            hover\n            striped\n            scopedSlots={renderFields(fields)}\n          />\n        </div>\n        {pagination(articles.totalPages, articles.page, pageChange, articles.total)}\n      </div>\n    </div>\n  );\n};\n\nexport default NewsfeedDetail;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  centered?: boolean;\n  label: string;\n  width?: number;\n  style?: any;\n}\n\nconst FieldName: React.FC<Props> = (props) => {\n  let { className, label, children, width, centered, style } = props;\n  width = width || 110;\n\n  return (\n    <div className={`d-flex mb-3 ${centered ? 'align-items-center' : ''} ${className || ''}`} style={style}>\n      <div style={{ minWidth: width, marginTop: 6 }}>{label}</div>\n      <div style={{ width: `calc(100% - ${width}px)` }}>{children}</div>\n    </div>\n  );\n};\n\nexport default FieldName;\n"],"sourceRoot":""}