{"version":3,"sources":["views/user/personalInformation/Profile.tsx","views/user/personalInformation/Profile.module.scss"],"names":["CustomInput","forwardRef","ref","onClick","className","styles","iconDate","validationSchema","Yup","shape","first_name","trim","required","last_name","Profile","props","auth","useSelector","state","history","useHistory","dispatch","useDispatch","callApi","payload","callback","callApiAction","uploadRef","useRef","useState","data","setData","file_path","link","temporaryUploadLink","setTemporaryUploadLink","file","imagePreviewUrl","avatar","loading","setAvatar","isUpdate","setIsUpdate","gender","setGender","setLoading","dateOfBirth","setDateOfBirth","groupName","group_name","show","setShow","useEffect","method","api","config","rest","getProfileUser","response","status","SUCCESS","newDate","createDate","birth_date","handleClose","formRef","isValidMore","title","content","up","upCallback","current","resetForm","down","downCallback","profileWrapper","profileContainer","md","leftWrapper","userName","avatarArea","backgroundImage","avatar_thumbnail","defaultAvatar","avatarUser","overlay","style","backgroundColor","avatarLoading","color","borderWidth","size","avatarUserButtonWrapper","btnClassName","avatarUserButton","click","getUploadLink","type","id","name","display","accept","onChange","e","reader","FileReader","target","files","onload","result","fileInput","myHeaders","Headers","append","fetch","headers","body","redirect","then","text","console","log","addUserLS","updateProfile","catch","error","uploadAvatar","readAsDataURL","formContainer","marginBottom","innerRef","initialValues","enableReinitialize","validate","onSubmit","values","formatDate","undefined","phone_number","bio","editProfile","msg","messages","updateMessageFailure","newUser","errors","dirty","handleChange","handleBlur","handleSubmit","isValid","form","noMarginBottom","wrapperTitle","edit","cardTitle","btnSubmit","wrapperBtn","bioWrapper","modalBody","modalBioTitle","mobdalBioBody","btnEdit","push","btnNurse","contentNurse","uploadDocument","iconArrowNurse","genderGroup","label","btnGender","disabled","light","formGroup","email","placeholder","autoComplete","maxLength","value","onBlur","includes","dataOfBirth","date","valueDate","valueDateDisable","moment","format","width","selected","customInput","yearDropdownItemNumber","showYearDropdown","showMonthDropdown","scrollableYearDropdown","adjustDateOnChange","maxDate","getMaxBirthDate","popperPlacement","inputText","phone","invalid","valueTypingExpressionsPhone","capitalizeWords","valueTypingExpressionsName","btnGroupWrap","height","outline","module","exports"],"mappings":"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","file":"static/js/58.0c9e9b35.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect, forwardRef } from 'react';\nimport {\n  CRow,\n  CCardBody,\n  CCardHeader,\n  CCard,\n  CCol,\n  CFormGroup,\n  CForm,\n  CInvalidFeedback,\n  CInput,\n  CSpinner,\n} from '@coreui/react';\nimport config from '../../../config';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../../../store/auth/actions';\nimport { addUserLS, capitalizeWords, formatDate, getMaxBirthDate } from '../../../utils';\nimport styles from './Profile.module.scss';\nimport { HBButton, HBButtonFull, HBButtonSmall, HBModalConfirm, HBFocusInput } from '../../../hbBaseClass';\nimport * as Yup from 'yup';\nimport { validate, createDate } from '../../../utils';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport { defaultAvatar } from '../../../extensions';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik } from 'formik';\nimport { KMSDiv } from 'components';\n\ninterface Props {\n  location: any;\n}\n\nconst CustomInput = forwardRef(({ onClick }: any, ref: any) => {\n  return (\n    <div className={styles.iconDate} onClick={onClick} ref={ref}>\n      <i className=\"hb-icon-calendar-date\"></i>\n    </div>\n  );\n});\n\nconst validationSchema = function () {\n  return Yup.object().shape({\n    first_name: Yup.string().trim().required('First Name is required'),\n    last_name: Yup.string().trim().required('Last Name is required'),\n  });\n};\n\nconst Profile: React.FC<Props> = (props) => {\n  const auth = useSelector((state: any) => state.auth);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback: any) => dispatch(callApiAction(payload, callback));\n  const uploadRef = useRef<HTMLInputElement>(null);\n  const [data, setData] = useState<any>(null);\n  const [temporaryUploadLink, setTemporaryUploadLink] = useState<any>({\n    file_path: '',\n    link: '',\n  });\n  const [avatar, setAvatar] = useState<any>({\n    file: '',\n    imagePreviewUrl: '',\n    avatar: auth?.avatar || '',\n    loading: false,\n  });\n  const [isUpdate, setIsUpdate] = useState<any>(false);\n  const [gender, setGender] = useState<number>(0);\n  const [loading, setLoading] = useState(false);\n  const [dateOfBirth, setDateOfBirth] = useState<any>(null);\n  const groupName = useSelector((state: any) => state.auth.group_name);\n  const [show, setShow] = useState(false);\n\n  // Get Profile For Nurse and User\n  const getProfile = () => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getProfileUser(),\n        loading: true,\n      },\n      (response: any) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          const newDate = createDate(data.birth_date);\n          setData({ ...data, birth_date: newDate });\n          setGender(data.gender);\n          setDateOfBirth(newDate);\n        }\n      },\n    );\n  };\n\n  // Get Link Upload S3\n  const getTemporaryUploadLink = () => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getUploadLink('image'),\n      },\n      (response: any) => {\n        if (response.status === SUCCESS) {\n          setTemporaryUploadLink(response?.data || {});\n        }\n      },\n    );\n  };\n\n  const onSubmit = (values: any) => {\n    const newDate = dateOfBirth ? formatDate(dateOfBirth) : undefined;\n    const body = {\n      gender,\n      phone_number: values.phone_number,\n      first_name: values.first_name.trim(),\n      last_name: values.last_name.trim(),\n      birth_date: newDate,\n      bio: values.bio,\n    };\n\n    setLoading(true);\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.editProfile(),\n        body: body,\n        msg: config.messages.updateMessageFailure,\n      },\n      (response: any) => {\n        const { status } = response;\n        setLoading(false);\n        if (status === SUCCESS) {\n          setIsUpdate(false);\n          setData((data: any) => {\n            const newUser = {\n              gender,\n              phone_number: values.phone_number,\n              first_name: values.first_name.trim(),\n              last_name: values.last_name.trim(),\n              birth_date: newDate,\n            };\n            addUserLS(newUser);\n            dispatch(updateProfile(newUser));\n            return {\n              ...data,\n              ...body,\n              birth_date: dateOfBirth,\n            };\n          });\n        }\n      },\n    );\n  };\n\n  const uploadAvatar = (link: string, fileInput: any) => {\n    let myHeaders = new Headers();\n    myHeaders.append('x-amz-acl', 'public-read');\n\n    let file = fileInput;\n    avatar.loading = true;\n    const requestOptions: any = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: file,\n      redirect: 'follow',\n    };\n\n    fetch(link, requestOptions)\n      .then((response) => response.text())\n      .then((response: any) => {\n        console.log(response);\n        addUserLS({ avatar: temporaryUploadLink?.avatar });\n        setAvatar((avatar: any) => {\n          return { ...avatar, loading: false };\n        });\n        dispatch(updateProfile({ avatar: temporaryUploadLink?.avatar }));\n        avatar.loading = false;\n      })\n      .catch((error) => console.log('error', error));\n  };\n\n  const onUploadAvatar = (e: any) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    if (!file) return;\n\n    reader.onload = () => {\n      setTemporaryUploadLink({ file_path: file });\n      setAvatar({ file: file, imagePreviewUrl: reader.result, loading: true });\n      uploadAvatar(temporaryUploadLink.link, file);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  useEffect(() => {\n    getProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClose = () => {\n    setShow(!show);\n  };\n\n  const formRef = useRef<any>(null);\n\n  if (!data) return <div />;\n\n  const isValidMore = groupName === 'nurse' ? gender !== 3 && dateOfBirth : true;\n\n  return (\n    <>\n      <HBModalConfirm\n        show={show}\n        handleClose={handleClose}\n        title=\"Abbrechen\"\n        content=\"Sind sie sicher, dass sie Abbrechen wollen? Alle Änderungen gehen dabei verloren.\"\n        up=\"Ja, abbrechen\"\n        upCallback={() => {\n          formRef.current.resetForm();\n          setIsUpdate(false);\n          setShow(false);\n        }}\n        down=\"Weiter bearbeiten\"\n        downCallback={handleClose}\n      />\n      <div className={`wide ${styles.profileWrapper}`}>\n        <h1 className={styles.title}>Profil</h1>\n        <CRow className={styles.profileContainer}>\n          <CCol md={4}>\n            <div className={styles.leftWrapper}>\n              <h2 className={styles.userName}>{`${data.first_name}\\n${data.last_name}`}</h2>\n              <div className={styles.avatarArea}>\n                <KMSDiv\n                  backgroundImage={\n                    (avatar.imagePreviewUrl ? avatar.avatar || avatar.imagePreviewUrl : data.avatar_thumbnail) ||\n                    defaultAvatar\n                  }\n                  className={styles.avatarUser}\n                >\n                  <div\n                    className={styles.overlay}\n                    style={{\n                      backgroundColor: avatar.loading ? '#fff4' : 'transparent',\n                    }}\n                  >\n                    <div className={styles.avatarLoading}>\n                      {avatar.loading ? (\n                        <CSpinner style={{ color: 'var(--aquamarin-100)', borderWidth: 4 }} size=\"lg\" />\n                      ) : (\n                        ''\n                      )}\n                    </div>\n                  </div>\n                </KMSDiv>\n                <HBButton\n                  className={styles.avatarUserButtonWrapper}\n                  btnClassName={styles.avatarUserButton}\n                  onClick={() => {\n                    uploadRef.current?.click();\n                    getTemporaryUploadLink();\n                  }}\n                  color=\"petrol\"\n                >\n                  Foto aktualisieren\n                </HBButton>\n                <input\n                  className=\"avatar-user--input\"\n                  type=\"file\"\n                  id=\"myFile\"\n                  name=\"filename\"\n                  ref={uploadRef}\n                  style={{ display: 'none' }}\n                  accept=\"image/x-png,image/gif,image/jpeg\"\n                  onChange={onUploadAvatar}\n                />\n              </div>\n            </div>\n          </CCol>\n          <CCol md={8}>\n            <CCard className={`hb-card ${styles.formContainer}`}>\n              <CCardBody className=\"hb-card-item\" style={{ marginBottom: 0 }}>\n                <Formik\n                  innerRef={formRef}\n                  initialValues={data}\n                  enableReinitialize={true}\n                  validate={validate(validationSchema)}\n                  onSubmit={onSubmit}\n                >\n                  {({ values, errors, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n                    <CForm className={styles.form} onSubmit={handleSubmit}>\n                      <CFormGroup className={styles.noMarginBottom}>\n                        <div className={`${styles.wrapperTitle} ${isUpdate && styles.edit}`}>\n                          <h2 className={styles.cardTitle}>Persönliche Daten</h2>\n                          <HBButton\n                            btnClassName={styles.btnSubmit}\n                            className={styles.wrapperBtn}\n                            onClick={() => {\n                              setIsUpdate(true);\n                              formRef.current.resetForm();\n                              setGender(data.gender);\n                              setDateOfBirth(data.birth_date);\n                            }}\n                            type=\"button\"\n                            style={{ display: isUpdate ? 'none' : 'flex' }}\n                          >\n                            Daten bearbeiten\n                          </HBButton>\n                        </div>\n                      </CFormGroup>\n\n                      {!isUpdate && (\n                        <CFormGroup className={`${styles.bioWrapper}`}>\n                          {data.bio ? (\n                            <CCard className={styles.modalBody}>\n                              <CCardHeader className={styles.modalBioTitle}>\n                                <h4>Biografie</h4>\n                                <i className=\"hb-icon-pentool-2\"></i>\n                              </CCardHeader>\n                              <CCardBody className={styles.mobdalBioBody}>\n                                {data.bio}\n                                <HBButton\n                                  btnClassName={styles.btnEdit}\n                                  className={styles.wrapperBtn}\n                                  onClick={() => history.push('/update-bio')}\n                                  type=\"button\"\n                                >\n                                  Bearbeiten\n                                </HBButton>\n                              </CCardBody>\n                            </CCard>\n                          ) : (\n                            <div className={styles.btnNurse} onClick={() => history.push('/update-bio')}>\n                              <div className={styles.contentNurse}>\n                                <div className={styles.uploadDocument}>\n                                  <i className=\"hb-icon-book\"></i>\n                                </div>\n                                <span>Biografie hinzufügen</span>\n                              </div>\n                              <div className={styles.iconArrowNurse}>\n                                <i className=\"hb-icon-arrow-right\"></i>\n                              </div>\n                            </div>\n                          )}\n\n                          <CInvalidFeedback>{errors.bio || ''}</CInvalidFeedback>\n                        </CFormGroup>\n                      )}\n\n                      <CFormGroup className={styles.genderGroup}>\n                        <div className={styles.label} style={{ display: data.gender === 3 ? 'none' : 'block' }}>\n                          Geschlecht{isUpdate && groupName === 'nurse' && '*'}\n                        </div>\n                        {!isUpdate ? (\n                          <HBButtonSmall\n                            disabled\n                            light\n                            type=\"button\"\n                            style={{ display: data.gender === 3 ? 'none' : 'block' }}\n                          >\n                            {data.gender === 0 ? 'Männlich' : data.gender === 1 ? 'Weiblich' : 'Andere'}\n                          </HBButtonSmall>\n                        ) : (\n                          <div className={styles.gender}>\n                            <HBButtonSmall\n                              type=\"button\"\n                              color=\"petrol\"\n                              onClick={() => setGender(1)}\n                              className={`${styles.btnGender} ${gender === 1 ? 'is-selected' : ''}`}\n                            >\n                              Weiblich\n                            </HBButtonSmall>\n                            <HBButtonSmall\n                              type=\"button\"\n                              color=\"petrol\"\n                              onClick={() => setGender(0)}\n                              className={`${styles.btnGender} ${gender === 0 ? 'is-selected' : ''}`}\n                            >\n                              Männlich\n                            </HBButtonSmall>\n                            <HBButtonSmall\n                              type=\"button\"\n                              color=\"petrol\"\n                              onClick={() => setGender(2)}\n                              className={`${styles.btnGender} ${gender === 2 ? 'is-selected' : ''}`}\n                            >\n                              Andere\n                            </HBButtonSmall>\n                          </div>\n                        )}\n                      </CFormGroup>\n\n                      <CFormGroup className={[styles.formGroup, styles.email]}>\n                        <div className={styles.label}>Email</div>\n\n                        <HBFocusInput\n                          color=\"gray\"\n                          placeholder=\"E-Mail\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          maxLength={50}\n                          value={values.email}\n                          onBlur={handleBlur}\n                          onChange={(e: any) => {\n                            if (!e.target.value.includes(' ')) handleChange(e);\n                          }}\n                          disabled\n                        />\n                      </CFormGroup>\n                      <CFormGroup className={[styles.formGroup, styles.dataOfBirth]}>\n                        <div className={styles.label}>Geburtstag{isUpdate && groupName === 'nurse' && '*'}</div>\n                        {!isUpdate ? (\n                          <CInput\n                            placeholder=\"TT.MM.JJJJ\"\n                            autoComplete=\"birth_date\"\n                            name=\"birth_date\"\n                            value={data.birth_date ? moment(data.birth_date).format('DD.MM.YYYY') || '' : 'TT.MM.JJJJ'}\n                            onBlur={handleBlur}\n                            onChange={(e: any) => {\n                              if (!e.target.value.includes(' ')) handleChange(e);\n                            }}\n                            className={styles.inputText}\n                            disabled\n                            style={{ color: data.birth_date ? 'var(--petrol-100)' : 'var(--nightblue-50)' }}\n                          />\n                        ) : (\n                          <div className={styles.date}>\n                            <div\n                              className={isUpdate ? styles.valueDate : styles.valueDateDisable}\n                              style={{ color: dateOfBirth ? 'var(--petrol-100)' : 'var(--nightblue-50)' }}\n                            >\n                              {dateOfBirth ? moment(dateOfBirth || data.birth_date).format('DD.MM.YYYY') : 'TT.MM.JJJJ'}\n                            </div>\n                            <div style={{ width: 50 }} className=\"hb-datepicker\">\n                              <DatePicker\n                                selected={dateOfBirth}\n                                customInput={<CustomInput />}\n                                onChange={(date: any) => setDateOfBirth(date)}\n                                yearDropdownItemNumber={40}\n                                showYearDropdown\n                                showMonthDropdown\n                                scrollableYearDropdown\n                                adjustDateOnChange\n                                maxDate={getMaxBirthDate()}\n                                popperPlacement=\"bottom-end\"\n                                disabled={!isUpdate}\n                              />\n                            </div>\n                          </div>\n                        )}\n\n                        <CInvalidFeedback>{errors.birth_date || ''}</CInvalidFeedback>\n                      </CFormGroup>\n                      <CFormGroup className={[isUpdate ? styles.formGroup : '', styles.phone]}>\n                        <div className={styles.label}>Telefonnummer</div>\n                        <HBFocusInput\n                          color=\"gray\"\n                          placeholder=\"Telefonnummer\"\n                          autoComplete=\"phone_number\"\n                          invalid={values.phone_number !== '' && !!errors.phone_number}\n                          name=\"phone_number\"\n                          value={values.phone_number || ''}\n                          onBlur={handleBlur}\n                          onChange={(e: any) => {\n                            if (!e.target.value || config.validate.valueTypingExpressionsPhone(e)) handleChange(e);\n                          }}\n                          maxLength={20}\n                          disabled={!isUpdate}\n                          error={errors?.phone_number}\n                        />\n                      </CFormGroup>\n\n                      {isUpdate && (\n                        <>\n                          <CFormGroup className={styles.formGroup}>\n                            <div className={styles.label}>Vorname*</div>\n                            <HBFocusInput\n                              color=\"gray\"\n                              placeholder=\"Vorname\"\n                              invalid={values.first_name.trim() !== '' && !!errors.first_name}\n                              autoComplete=\"first_name\"\n                              maxLength={50}\n                              value={capitalizeWords(values.first_name || '')}\n                              onBlur={handleBlur}\n                              onChange={(e) => {\n                                if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                              }}\n                              name=\"first_name\"\n                              required\n                              disabled={!isUpdate}\n                              error={errors?.first_name}\n                            />\n                          </CFormGroup>\n                          <CFormGroup>\n                            <div className={styles.label}>Nachname*</div>\n                            <HBFocusInput\n                              color=\"gray\"\n                              placeholder=\"Nachname\"\n                              invalid={values.last_name.trim() !== '' && !!errors.last_name}\n                              autoComplete=\"last_name\"\n                              maxLength={50}\n                              value={capitalizeWords(values.last_name || '')}\n                              onBlur={handleBlur}\n                              onChange={(e) => {\n                                if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                              }}\n                              name=\"last_name\"\n                              required\n                              disabled={!isUpdate}\n                              error={errors?.last_name}\n                            />\n                          </CFormGroup>\n                          <div className={styles.btnGroupWrap}>\n                            <div style={{ width: 124, height: 51 }}>\n                              <HBButtonFull\n                                type=\"button\"\n                                outline\n                                onClick={() => {\n                                  if (!dirty && gender === data.gender && dateOfBirth === data.birth_date)\n                                    setIsUpdate(false);\n                                  else setShow(true);\n                                }}\n                              >\n                                Abbrechen\n                              </HBButtonFull>\n                            </div>\n                            <div style={{ width: 124, height: 51 }}>\n                              <HBButtonFull\n                                type=\"submit\"\n                                disabled={\n                                  !isValid ||\n                                  !isValidMore ||\n                                  loading ||\n                                  (!dirty && gender === data.gender && dateOfBirth === data.birth_date)\n                                }\n                              >\n                                {loading ? <CSpinner color=\"light\" size=\"sm\" /> : 'Speichern'}\n                              </HBButtonFull>\n                            </div>\n                          </div>\n                        </>\n                      )}\n                    </CForm>\n                  )}\n                </Formik>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__rJ2X1\",\"profileContainer\":\"Profile_profileContainer__3wF2h\",\"title\":\"Profile_title__Z47aD\",\"bioTitle\":\"Profile_bioTitle__3ucFV\",\"leftWrapper\":\"Profile_leftWrapper__3Y16p\",\"userName\":\"Profile_userName__2wo_e\",\"avatarArea\":\"Profile_avatarArea__1KP-w\",\"avatarUser\":\"Profile_avatarUser__3LXjW\",\"overlay\":\"Profile_overlay__GczcO\",\"avatarUserButtonWrapper\":\"Profile_avatarUserButtonWrapper__obEk8\",\"avatarUserButton\":\"Profile_avatarUserButton__1BG9z\",\"formContainer\":\"Profile_formContainer__FqNPd\",\"form\":\"Profile_form__1V8TH\",\"noMarginBottom\":\"Profile_noMarginBottom__3rG-N\",\"formGroup\":\"Profile_formGroup__24ca1\",\"wrapperTitle\":\"Profile_wrapperTitle__3VZfa\",\"cardTitle\":\"Profile_cardTitle__2sNR-\",\"edit\":\"Profile_edit__1enav\",\"wrapperBtn\":\"Profile_wrapperBtn__30Mmj\",\"btnSubmit\":\"Profile_btnSubmit__1fqEK\",\"genderGroup\":\"Profile_genderGroup__2PvMZ\",\"btnNurse\":\"Profile_btnNurse__kE6_a\",\"contentNurse\":\"Profile_contentNurse__2EjQr\",\"uploadDocument\":\"Profile_uploadDocument__1-knE\",\"iconArrowNurse\":\"Profile_iconArrowNurse__1S1vJ\",\"modalBody\":\"Profile_modalBody__3o0OP\",\"modalBioTitle\":\"Profile_modalBioTitle__gQOGj\",\"mobdalBioBody\":\"Profile_mobdalBioBody__2unur\",\"btnEdit\":\"Profile_btnEdit__2APe1\",\"gender\":\"Profile_gender__3uTtV\",\"btnGender\":\"Profile_btnGender__32_RF\",\"inputText\":\"Profile_inputText__3sJ_v\",\"label\":\"Profile_label__35fsf\",\"dataOfBirth\":\"Profile_dataOfBirth__3oPMn\",\"date\":\"Profile_date__3VIeD\",\"valueDate\":\"Profile_valueDate__WB-QW\",\"valueDateDisable\":\"Profile_valueDateDisable__3hVJD\",\"iconDate\":\"Profile_iconDate__n0_jC\",\"changePasswordUser\":\"Profile_changePasswordUser__1Kv0m\",\"cardWrapper\":\"Profile_cardWrapper__2bc3n\",\"cardBody\":\"Profile_cardBody__14zzG\",\"inputPassword\":\"Profile_inputPassword__nLfcv\",\"inputTextPassword\":\"Profile_inputTextPassword__1cjGu\",\"iconPassword\":\"Profile_iconPassword__8Z-Gv\",\"invalidFeedBack\":\"Profile_invalidFeedBack__7_crA\",\"submit\":\"Profile_submit__3T48T\",\"bioContainer\":\"Profile_bioContainer__30P8I\",\"bioButton\":\"Profile_bioButton__3eVRF\",\"bioWrapper\":\"Profile_bioWrapper__D4L0N\",\"bio\":\"Profile_bio__2-1-C\",\"btnWrapper\":\"Profile_btnWrapper__HJ7yL\",\"btnGroupWrap\":\"Profile_btnGroupWrap__2Pcfh\"};"],"sourceRoot":""}