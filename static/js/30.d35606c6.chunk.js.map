{"version":3,"sources":["utilities/datetime.ts","utilities/auth.ts","utilities/format.ts","utilities/validate.ts","utilities/request.ts","views/user/mobility/Frame.tsx","views/user/mobility/Trainer.tsx","views/user/mobility/Trainer.module.scss","views/user/mobility/AllTrainers.module.scss","views/user/mobility/AllTrainers.tsx"],"names":["getScheduleTimeOptions","currentTime","options","maxTime","MAX_SCHEDULE_TIME","validTimes","listHours","filter","timeItem","map","value","label","getScheduleTimeStart","defaultTime","timeStart","moment","add","format","find","getScheduleMinTimeEnd","additionalHours","mmTimeStart","MAX_SCHEDULE_TIME_START","getDefaultTimeEnd","USER","AUTH_TYPES","getAuthGroupName","NURSE","ASSISTANT","store","getState","auth","group_name","isRoleUser","pluralize","word","suffixPlural","pluralizeExcercise","validateBookAppointmentAnswers","questions","answers","every","questionItem","questionId","id","required","question_type","qAnswers","answerValues","reduce","acc","answerItem","answer_title","answer","parentQuestionId","QUESTION_TYPES","YES_NO","RADIO","includes","TEXTBOX","length","MAX_QA_INPUT_LENGTH","MAX_SUB_QA_INPUT_LENGTH","currentAnswerData","qAnswer","sub_questions","isValidBookAppointmentSchedule","scheduleData","selectedOption","specificDate","currentDate","hours","duration","diff","asHours","specificDateVal","SCHEDULE_OPTIONS","TOMORROW","LATER","VALID_TIME_START_SUBMIT","convertAppointmentScheduleTime","timeEnd","mmAppointmentDate","TODAY","appointmentDate","appointment_time_begin","utc","unix","appointment_time_end","getBookAppointmentRequestParams","appointmentData","appointmentType","APPOINTMENT_TYPE_VALUES","APPOINTMENT_TYPES","selectedTopic","adviceRelatives","userInfo","surveyAnswers","phone_number","street","gender","postal_code","no","place","Object","values","question_id","question_title","answerData","formatAnswerItem","formatQuestionId","formatSubQuestions","scheduleTime","result_survey","appointment_type","selected_treatments_id","customer_gender","postcode","relatives","cost","mappingSize","large","medium","small","Frame","props","size","render","className","style","width","height","Trainer","avatar","first_name","last_name","amount_videos","followed","fullWidth","followOrUnFollow","isMine","history","useHistory","summaryName","name","slice","styles","trainerItem","trainerWrapper","backgroundImage","big","onClick","push","lastName","videosAmount","icon","fontSize","color","React","memo","module","exports","AllTrainers","params","useLocation","search","URLSearchParams","get","callApi","useApi","useState","data","loading","full","page","amount_trainers","trainers","setTrainers","getAllTrainers","method","api","config","rest","getMyTrainers","getPageSize","response","status","SUCCESS","DEFAULT_PAGE_SIZE","concatData","useEffect","goBack","trainerAmount","title","justifyContent","trainer","key","trainerId","follow","newTrainers","index","findIndex","item","unFollowTrainer","followTrainer","loadingSmall","onEnter","getNextPage"],"mappings":"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","file":"static/js/30.d35606c6.chunk.js","sourcesContent":["import moment from 'moment';\n\nimport { listHours } from 'config';\nimport { MAX_SCHEDULE_TIME, MAX_SCHEDULE_TIME_START } from 'configs/constants';\n\n/**\n * Get schedule time options in book an appointment\n *\n * @param currentTime Current time has format HH:mm\n * @param options Options\n *\n * @return array\n */\nexport const getScheduleTimeOptions = (currentTime: string, options: any = {}) => {\n  const { maxTime = MAX_SCHEDULE_TIME } = options;\n\n  const validTimes = listHours.filter((timeItem) => timeItem >= currentTime && timeItem <= maxTime);\n\n  return validTimes.map((value) => ({ label: value, value }));\n};\n\n/**\n * Get schedule time start in book an appointment\n *\n * @param defaultTime Default time, if defaultTime has value => do not get by current time\n *\n * @return array\n */\nexport const getScheduleTimeStart = (defaultTime?: string) => {\n  if (defaultTime) return defaultTime;\n\n  const timeStart = moment().add(2, 'hours').format('HH:mm');\n\n  return listHours.find((timeItem) => timeItem >= timeStart && timeItem <= '23:45') || timeStart;\n};\n\n/**\n * Get min schedule time end in book an appointment\n *\n * @param timeStart Time start value\n * @param additionalHours Additional hours\n *\n * @return string\n */\nexport const getScheduleMinTimeEnd = (timeStart: string = '', additionalHours: number = 1) => {\n  const mmTimeStart = moment(`${moment().format('YYYY-MM-DD')} ${timeStart}`);\n\n  return timeStart < MAX_SCHEDULE_TIME_START\n    ? mmTimeStart.add(additionalHours, 'hours').format('HH:mm')\n    : MAX_SCHEDULE_TIME;\n};\n\n/**\n * Get default time end by time start\n *\n * @param timeStart Time start value\n *\n * @return string\n */\nexport const getDefaultTimeEnd = (timeStart = '') => {\n  return timeStart < '23:00' ? getScheduleMinTimeEnd(timeStart) : MAX_SCHEDULE_TIME;\n};\n","import { store } from '../store';\nimport { AUTH_TYPES } from 'configs/constants';\nconst { USER, NURSE, ASSISTANT } = AUTH_TYPES;\n\n/**\n * Get group name of user\n *\n * @return string\n */\nconst getAuthGroupName = () => {\n  const reducerState = store.getState();\n  const { auth } = reducerState;\n  const { group_name = '' } = auth;\n\n  return group_name;\n};\n\n/**\n * Check auth is user\n *\n * @return boolean\n */\nexport const isRoleUser = () => {\n  return getAuthGroupName() === USER;\n};\n\n/**\n * Check auth is nurse\n *\n * @return boolean\n */\nexport const isRoleNurse = () => {\n  return getAuthGroupName() === NURSE;\n};\n\n/**\n * Check auth is assistant\n *\n * @return boolean\n */\nexport const isRoleAssistant = () => {\n  return getAuthGroupName() === ASSISTANT;\n};\n","/**\n * Get plural of word\n *\n * @param value How many of the word exist\n * @param word Word wanna make plural\n * @param suffixPlural Suffix word\n *\n * @return string\n */\nexport const pluralize = (value = 0, word = '', suffixPlural = 'en') => {\n  return value > 1 ? `${word}${suffixPlural}` : word;\n};\n\n/**\n * Get plural of exercise\n *\n * @param value How many of the exercise exist\n *\n * @return string\n */\nexport const pluralizeExcercise = (value = 0) => {\n  return `${value} ${value === 1 ? 'Übung' : 'Übungen'}`;\n};\n","import { includes } from 'lodash';\nimport {\n  QUESTION_TYPES,\n  MAX_QA_INPUT_LENGTH,\n  MAX_SUB_QA_INPUT_LENGTH,\n  VALID_TIME_START_SUBMIT,\n  SCHEDULE_OPTIONS,\n} from 'configs/constants';\nimport moment from 'moment';\n\n/**\n * Validate book an appointment survey's answers\n *\n * @param questions Questions get from database\n * @param answers User input answer\n *\n * @return Boolean\n */\nexport const validateBookAppointmentAnswers = (questions: any = [], answers: any = {}) => {\n  return questions.every((questionItem: any) => {\n    const { id: questionId, required, question_type, answers: qAnswers = [] } = questionItem;\n    const answerValues = qAnswers.reduce((acc: any, answerItem: any) => [...acc, answerItem.answer_title], []);\n\n    // get current question's answer\n    const { answer = '', parentQuestionId } = answers[questionId] || {};\n\n    // validate required\n    if (required && !answer) return false;\n\n    // validate value\n    switch (question_type) {\n      case QUESTION_TYPES.YES_NO:\n      case QUESTION_TYPES.RADIO: {\n        if (!includes(answerValues, answer)) {\n          return false;\n        }\n        break;\n      }\n      case QUESTION_TYPES.TEXTBOX: {\n        if (answer.length > MAX_QA_INPUT_LENGTH) return false;\n        if (parentQuestionId && answer.length > MAX_SUB_QA_INPUT_LENGTH) return false;\n      }\n    }\n\n    // validate sub questions\n    const currentAnswerData = qAnswers.find((qAnswer: any) => qAnswer.answer_title === answer);\n    if (currentAnswerData) {\n      const { sub_questions = [] } = currentAnswerData;\n\n      const isValidSubQA = validateBookAppointmentAnswers(sub_questions, answers);\n      if (!isValidSubQA) return false;\n    }\n\n    return true;\n  });\n};\n\n/**\n * Check valid book an appoint schedule\n *\n * @param scheduleData Schedule data\n *\n * @return boolean\n */\nexport const isValidBookAppointmentSchedule = (scheduleData: any) => {\n  const { selectedOption, timeStart, specificDate } = scheduleData || {};\n  const currentDate = moment().format('YYYY-MM-DD');\n  const duration = moment.duration(moment(`${currentDate} ${timeStart}`).diff(moment()));\n  const hours = duration.asHours();\n  const specificDateVal = moment(specificDate).format('YYYY-MM-DD');\n\n  // check valid specificDate\n  const isValidDate =\n    selectedOption === SCHEDULE_OPTIONS.TOMORROW ||\n    (selectedOption === SCHEDULE_OPTIONS.LATER && currentDate <= specificDateVal);\n\n  return isValidDate || hours >= VALID_TIME_START_SUBMIT;\n};\n","import moment from 'moment';\nimport { SCHEDULE_OPTIONS, APPOINTMENT_TYPES, APPOINTMENT_TYPE_VALUES } from 'configs/constants';\nimport { ScheduleData } from 'types/appointments';\n\n/**\n * Convert appointment schedule time\n *\n * @param scheduleData Schedule data\n *\n * @return object\n */\nexport const convertAppointmentScheduleTime = (scheduleData: ScheduleData) => {\n  const { selectedOption, specificDate, timeStart, timeEnd } = scheduleData;\n\n  // convert schedule time\n  let mmAppointmentDate = moment();\n  if (selectedOption !== SCHEDULE_OPTIONS.TODAY) {\n    mmAppointmentDate = selectedOption === SCHEDULE_OPTIONS.LATER ? moment(specificDate) : moment().add(1, 'd');\n  }\n  const appointmentDate = mmAppointmentDate.format('YYYY-MM-DD');\n\n  return {\n    appointment_time_begin: moment(`${appointmentDate} ${timeStart}`).utc().unix(),\n    appointment_time_end: moment(`${appointmentDate} ${timeEnd}`).utc().unix(),\n  };\n};\n\n/**\n * Get book an appointment request params\n *\n * @param appointmentData Book an appointment data\n * @param appointmentType For nurse or assistant\n *\n * @return Object\n */\nexport const getBookAppointmentRequestParams = (\n  appointmentData: any = {},\n  appointmentType = APPOINTMENT_TYPE_VALUES[APPOINTMENT_TYPES.NURSE],\n) => {\n  const {\n    selectedTopic,\n    adviceRelatives = [],\n    scheduleData = {},\n    userInfo = {},\n    surveyAnswers = {},\n  } = appointmentData || {};\n  const { phone_number = '', street, gender, postal_code, no, place } = userInfo;\n\n  // convert question's answer data\n  const questions = [...Object.values(surveyAnswers)].reduce((acc: any[], answerItem: any) => {\n    const { question_id, answer, question_title, parentQuestionId } = answerItem || {};\n    const answerData = { question_id, answer, question_title };\n\n    // if question is not sub question\n    if (!parentQuestionId) {\n      return [...acc, { ...answerData, sub_questions: [] }];\n    }\n\n    // add sub question into parent question\n    acc = acc.map((formatAnswerItem) => {\n      const { question_id: formatQuestionId, sub_questions: formatSubQuestions } = formatAnswerItem || {};\n      // if finded parent question\n      if (formatQuestionId === parentQuestionId) {\n        return {\n          ...formatAnswerItem,\n          sub_questions: [...formatSubQuestions, answerData],\n        };\n      }\n\n      return formatAnswerItem;\n    });\n    return acc;\n  }, []);\n\n  // convert schedule time\n  const scheduleTime = convertAppointmentScheduleTime(scheduleData);\n\n  return {\n    result_survey: { questions },\n    appointment_type: appointmentType,\n    selected_treatments_id: selectedTopic,\n    customer_gender: gender,\n    phone_number,\n    street,\n    postcode: postal_code,\n    no,\n    place,\n    relatives: adviceRelatives,\n    cost: 1,\n    ...scheduleTime,\n  };\n};\n","import React from 'react';\n\ninterface Props {\n  size: 'large' | 'medium' | 'small';\n  render: any;\n}\n\nconst mappingSize = { large: 80, medium: 48, small: 36 };\n\nconst Frame: React.FC<Props> = (props) => {\n  const { size, render } = props;\n\n  return (\n    <div className=\"video-comments--comment\">\n      <div style={{ width: '100%', height: mappingSize[size] }}>{render}</div>\n    </div>\n  );\n};\n\nexport default Frame;\n","import { KMSDiv } from 'components';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { pluralizeExcercise } from 'utilities';\nimport styles from './Trainer.module.scss';\n\ninterface Props {\n  id: string;\n  avatar: string;\n  first_name: string;\n  last_name: string;\n  amount_videos: any;\n  followed: boolean;\n  fullWidth: boolean;\n  className?: string;\n  followOrUnFollow: (trainerId: number, followed: any) => void;\n  isMine?: boolean;\n}\n\nconst Trainer: React.FC<Props> = (props: any) => {\n  const {\n    id,\n    avatar,\n    first_name,\n    last_name,\n    amount_videos,\n    followed,\n    fullWidth,\n    className,\n    followOrUnFollow,\n    isMine,\n  } = props;\n\n  const history = useHistory();\n  const summaryName = (name: any) => {\n    if (name.length > 13) return name.slice(0, 10) + '...';\n    return name;\n  };\n\n  return (\n    <div className={`${fullWidth ? 'col-lg-3 col-md-3 hb-card-item' : className}`}>\n      <div className={styles.trainerItem}>\n        <div className={styles.trainerWrapper}>\n          <KMSDiv\n            backgroundImage={avatar}\n            className={`${styles.avatar} ${fullWidth ? styles.big : ''}`}\n            onClick={() => history.push(`/mobility/trainer-detail/${id}`)}\n          />\n          <div className={styles.name} onClick={() => history.push(`/mobility/trainer-detail/${id}`)}>\n            {summaryName(first_name)}\n          </div>\n          <div className={styles.lastName} onClick={() => history.push(`/mobility/trainer-detail/${id}`)}>\n            {summaryName(last_name)}\n          </div>\n          <div className={styles.videosAmount} onClick={() => history.push(`/mobility/trainer-detail/${id}`)}>\n            {pluralizeExcercise(amount_videos)}\n          </div>\n          {isMine && (\n            <div className={styles.icon} onClick={() => followOrUnFollow(id, followed)}>\n              <i\n                className={`${followed ? 'hb-icon-heart-s' : 'hb-icon-heart-r'}`}\n                style={{ fontSize: 20, color: 'var(--violet-80)' }}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default React.memo(Trainer);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trainerItem\":\"Trainer_trainerItem__2CBqO\",\"trainerWrapper\":\"Trainer_trainerWrapper__SmQ3G\",\"avatar\":\"Trainer_avatar__1RiTw\",\"big\":\"Trainer_big__3uhXp\",\"name\":\"Trainer_name__1NbrS\",\"lastName\":\"Trainer_lastName__1VmOJ\",\"videosAmount\":\"Trainer_videosAmount__TSYnr\",\"icon\":\"Trainer_icon__2eCzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trainerAmount\":\"AllTrainers_trainerAmount__MiQvG\",\"title\":\"AllTrainers_title__3U66K\",\"trainerWrapper\":\"AllTrainers_trainerWrapper__1hI2r\"};","import { CRow } from '@coreui/react';\nimport { DEFAULT_PAGE_SIZE } from 'configs/constants';\nimport React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory, useLocation } from 'react-router-dom';\nimport { Waypoint } from 'react-waypoint';\nimport { useApi } from 'store/callApi';\nimport { concatData, getNextPage, getPageSize } from 'utils';\nimport config from '../../../config';\nimport { loadingSmall } from '../../../extensions';\nimport { HBButtonSmall } from '../../../hbBaseClass';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport styles from './AllTrainers.module.scss';\nimport Frame from './Frame';\nimport Trainer from './Trainer';\n\nconst AllTrainers: React.FC<RouteComponentProps> = () => {\n  const location = useLocation();\n  let params: any = location.search;\n  const query = new URLSearchParams(params);\n  const isMine = query.get('is_mine') || '';\n  const { callApi } = useApi();\n  const history = useHistory();\n  const [trainers, setTrainers] = useState<any>({ data: [], loading: true, full: false, page: 0, amount_trainers: 0 });\n\n  // function call API get all trainers\n  const getAllTrainers = (page: number) => {\n    // call API get all trainers\n    callApi(\n      {\n        method: 'get',\n        // isMine(param router of my trainer), check router if router has param then call API with method is get my trainer else call API get all trainers\n        api: (!isMine ? config.rest.getAllTrainers : config.rest.getMyTrainers)(page, getPageSize(page)),\n        loading: page === 1,\n      },\n      (response) => {\n        const { data, status } = response;\n        // call API SUCCESS\n        if (status === SUCCESS) {\n          const full = data.trainers.length < DEFAULT_PAGE_SIZE;\n          // Fill data to object trainer\n          setTrainers((trainers: any) => {\n            return {\n              data: concatData(page, trainers.data, data.trainers),\n              full,\n              loading: false,\n              page: page,\n              amount_trainers: data.amount_trainers,\n            };\n          });\n        }\n      },\n    );\n  };\n\n  // function follow or unfollow trainer\n  const followAction = (trainerId: number, follow: any) => {\n    setTrainers((trainers: any) => {\n      let newTrainers = [...trainers.data];\n      const index = newTrainers.findIndex((item: any) => item.id === trainerId);\n      newTrainers[index].followed = !newTrainers[index].followed;\n      return {\n        ...trainers,\n        data: newTrainers,\n        amount_trainers: trainers.amount_trainers + (newTrainers[index].followed ? 1 : -1),\n      };\n    });\n    callApi(\n      {\n        method: !follow ? 'post' : 'delete',\n        api: !follow ? config.rest.followTrainer(trainerId) : config.rest.unFollowTrainer(trainerId),\n      },\n      (response: any) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n        }\n      },\n    );\n  };\n\n  useEffect(() => {\n    getAllTrainers(1);\n    // eslint-disable-next-line\n  }, []);\n\n  const loadMoreTrainers = () => {\n    if (trainers.loading || trainers.full) return;\n    setTrainers({ ...trainers, loading: true });\n    getAllTrainers(getNextPage(trainers.page));\n  };\n\n  return (\n    <>\n      <div className=\"hb-mx-20\">\n        <div className=\"d-flex justify-content-between hb-my-28\">\n          <HBButtonSmall onClick={() => history.goBack()}>\n            <i className=\"hb-icon-arrow-left hb-icon-md\" /> Zurück\n          </HBButtonSmall>\n          {!trainers.loading && <div className={styles.trainerAmount}>{trainers?.amount_trainers} Trainer</div>}\n        </div>\n        <div className={styles.title}>{!isMine ? 'Alle Trainer' : 'Gespeicherte Trainer'}</div>\n      </div>\n      {trainers.data.length > 0 && (\n        <div className=\"hb-card\">\n          <CRow\n            className={styles.trainerWrapper}\n            style={{ justifyContent: trainers.data.length >= 4 ? 'left' : 'center' }}\n          >\n            {trainers.data.map((trainer: any) => (\n              <Trainer\n                {...trainer}\n                key={trainer.id}\n                fullWidth\n                followOrUnFollow={() => followAction(trainer.id, trainer.followed)}\n                isMine={isMine}\n              />\n            ))}\n          </CRow>\n        </div>\n      )}\n      {trainers.page !== 0 && trainers.loading && <Frame size=\"large\" render={loadingSmall} />}\n      <Waypoint onEnter={loadMoreTrainers} />\n    </>\n  );\n};\n\nexport default AllTrainers;\n"],"sourceRoot":""}