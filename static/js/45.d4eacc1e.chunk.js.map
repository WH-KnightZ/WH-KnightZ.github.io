{"version":3,"sources":["assets/images/Saly-8.png","views/user/activities/ActivityItemWrapper.tsx","views/user/activities/ActivityItemGeneral.tsx","views/user/activities/ActivityLinkItem.tsx","views/user/activities/ActivityItemArticleOfWeek.tsx","views/user/activities/ActivityItemNewVideo.tsx","views/user/activities/ActivityItemUpcomingAppointment.tsx","views/user/activities/ActivityItemTrainer.tsx","views/user/activities/ActivityItemNewReport.tsx","views/user/activities/Activities.tsx"],"names":["ActivityItemWrapper","props","id","dark","header","children","dispatch","useDispatch","className","onClick","removeNotification","title","content","ActivityItemGeneral","ActivityLinkItem","itemId","mobility","thumbnail","source","status","categoryName","is_saved","callApi","useApi","handleClickSave","useCallback","e","preventDefault","updateNotification","input","method","api","config","rest","unsaveVideo","saveVideo","newsfeedFavoriteSetting","response","SUCCESS","to","pathname","target","backgroundImage","ActivityItemArticleOfWeek","body_json","image","categories","body","name","ActivityItemNewVideo","category_name","ActivityItemUpcomingAppointment","appointment_time_confirms_to_start","icon","handleClick","moment","format","ActivityItemTrainer","trainer_avatar","trainer_name","trainer_description","src","defaultAvatar","ActivityItemNewReport","GENERAL","ACTIVITY_TYPES","ARTICLE_OF_WEEK","NEW_VIDEO","UPCOMING_APPOINTMENT","TRAINER","NEW_REPORT","mappingType","Activities","renderItems","notifications","useSelector","state","useState","show","all","modalDelete","setModalDelete","handleCloseModalDelete","data","length","loading","style","height","padding","size","Saly8","alt","map","item","Render","type","up","upCallback","clearNotifications","down","downCallback","handleClose","visibility","color","justifyContent","alignItems","new","onEnter","full","fetchNotifications","page"],"mappings":"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","file":"static/js/45.d4eacc1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Saly-8.b04ee604.png\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeNotification } from '../../../store/notifications/actions';\n\ninterface ActivityItemWrapperProps {\n  dark?: boolean;\n  id: string;\n  header?: {\n    title: string;\n    content?: string;\n  };\n}\n\nconst ActivityItemWrapper: React.FC<ActivityItemWrapperProps> = (props) => {\n  const { id, dark, header, children } = props;\n  const dispatch = useDispatch();\n\n  return (\n    <div className={`wrapper${dark ? ' dark' : ''}`}>\n      <div className=\"activity-remove\" onClick={() => removeNotification(dispatch, id)}>\n        <i className=\"remove\" />\n      </div>\n      {!!header && (\n        <div className=\"header\">\n          <div className=\"header-title\">{header.title}</div>\n          {!!header.content && <div className=\"header-content\">{header.content}</div>}\n        </div>\n      )}\n      <div className=\"body\">{children}</div>\n    </div>\n  );\n};\n\nexport default ActivityItemWrapper;\n","import { ItemActivityType } from 'config';\nimport { HBButtonSmall } from 'hbBaseClass';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\n\nconst ActivityItemGeneral: React.FC<ItemActivityType> = (props) => {\n  return (\n    <ActivityItemWrapper dark id={props.id} header={{ title: props.title }}>\n      <div className=\"ml-4\">\n        <HBButtonSmall>Mehr erfahren</HBButtonSmall>\n      </div>\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemGeneral;\n","import { KMSDiv } from 'components';\nimport config from 'config';\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { SUCCESS, useApi } from 'store/callApi';\nimport { updateNotification } from 'store/notifications/actions';\n\ninterface LinkItemProps {\n  id: string;\n  itemId: string;\n  mobility?: boolean;\n  thumbnail: string;\n  title: string;\n  source: string;\n  status?: boolean;\n  categoryName: string;\n  is_saved?: boolean;\n}\n\nconst ActivityLinkItem: React.FC<LinkItemProps> = (props) => {\n  const { id, itemId, mobility, thumbnail, title, source, status, categoryName, is_saved } = props;\n\n  const dispatch = useDispatch();\n  const { callApi } = useApi();\n\n  /**\n   * Action when click on heart icon, save video or article to favorite, revert status of article or video body_json in reducer\n   */\n  const handleClickSave = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      updateNotification(dispatch, id, mobility ? { is_saved: !is_saved } : { status: !status });\n\n      const input = mobility\n        ? {\n            method: !is_saved ? 'post' : 'put',\n            api: !is_saved ? config.rest.saveVideo(itemId) : config.rest.unsaveVideo(itemId),\n          }\n        : {\n            method: status ? 'delete' : 'post',\n            api: config.rest.newsfeedFavoriteSetting(itemId),\n          };\n\n      callApi(input, (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n        }\n      });\n    },\n    [is_saved, status],\n  );\n\n  return (\n    <div className={`link-item ${mobility ? 'violet' : 'petrol'}`}>\n      <Link className=\"hb-link-item\" to={mobility ? source : { pathname: source }} target={mobility ? '' : '_blank'}>\n        <div>\n          <KMSDiv backgroundImage={thumbnail} className=\"cover-image\" />\n        </div>\n        <div className=\"content-wrapper\">\n          <div className=\"item-title hb-link\">{title}</div>\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <div className={mobility ? 'hb-card-hashtag' : 'hb-card-keyword not-hover'}>{categoryName}</div>\n            </div>\n            <div className=\"hb-save\" onClick={handleClickSave}>\n              <i className={`${status || is_saved ? 'hb-icon-heart-s' : 'hb-icon-heart-r'}`} />\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default ActivityLinkItem;\n","import { ItemActivityType } from 'config';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\nimport ActivityLinkItem from './ActivityLinkItem';\n\nconst ActivityItemArticleOfWeek: React.FC<ItemActivityType> = (props) => {\n  const { id, source, image, title, status, categories } = props.body_json;\n\n  return (\n    <ActivityItemWrapper id={props.id} header={{ title: 'Artikel der Woche', content: props.body }}>\n      <ActivityLinkItem\n        id={props.id}\n        itemId={id}\n        title={title}\n        thumbnail={image}\n        status={status}\n        categoryName={categories?.[0].name}\n        source={source}\n      />\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemArticleOfWeek;\n","import { ItemActivityType } from 'config';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\nimport ActivityLinkItem from './ActivityLinkItem';\n\nconst ActivityItemNewVideo: React.FC<ItemActivityType> = (props) => {\n  const { id, thumbnail, title, is_saved, category_name } = props.body_json;\n\n  return (\n    <ActivityItemWrapper id={props.id} header={{ title: 'Neues Video', content: props.body }}>\n      <ActivityLinkItem\n        id={props.id}\n        itemId={id}\n        mobility\n        title={title}\n        thumbnail={thumbnail}\n        is_saved={is_saved}\n        categoryName={category_name}\n        source={`/mobility/watch?video=${id}`}\n      />\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemNewVideo;\n","import { ItemActivityType } from 'config';\nimport { HBButtonActivity } from 'hbBaseClass';\nimport moment from 'moment';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\n\nconst ActivityItemUpcomingAppointment: React.FC<ItemActivityType> = (props) => {\n  const { appointment_time_confirms_to_start } = props.body_json;\n\n  return (\n    <ActivityItemWrapper id={props.id} dark header={{ title: 'Neuer Termin', content: props.body }}>\n      <HBButtonActivity dark icon=\"calendar\" handleClick={() => {}}>\n        {moment(appointment_time_confirms_to_start * 1000).format('DD.MM.YY hh:mm')} Uhr\n      </HBButtonActivity>\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemUpcomingAppointment;\n","import { KMSImg } from 'components';\nimport { ItemActivityType } from 'config';\nimport { defaultAvatar } from 'extensions';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\n\nconst ActivityItemTrainer: React.FC<ItemActivityType> = (props) => {\n  const { trainer_avatar, trainer_name, trainer_description } = props.body_json;\n\n  return (\n    <ActivityItemWrapper id={props.id}>\n      <div className=\"activity-trainer d-flex\">\n        <div>\n          <KMSImg className=\"avatar\" src={trainer_avatar || defaultAvatar} />\n        </div>\n        <div className=\"trainer-body\">\n          <div className=\"title\">{trainer_name}</div>\n          <div className=\"content\">{trainer_description}</div>\n        </div>\n      </div>\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemTrainer;\n","import { ItemActivityType } from 'config';\nimport { HBButtonActivity } from 'hbBaseClass';\nimport React from 'react';\nimport ActivityItemWrapper from './ActivityItemWrapper';\n\nconst ActivityItemNewReport: React.FC<ItemActivityType> = (props) => {\n  return (\n    <ActivityItemWrapper id={props.id} header={{ title: 'Neues Protokoll', content: props.body }}>\n      <HBButtonActivity icon=\"book\" handleClick={() => {}}>\n        Protokoll\n      </HBButtonActivity>\n    </ActivityItemWrapper>\n  );\n};\n\nexport default ActivityItemNewReport;\n","import React, { useState } from 'react';\nimport './Activities.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HBButtonSmall, HBModalConfirm } from '../../../hbBaseClass';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ItemActivityType } from '../../../config';\nimport { FrameLoading } from '../../../components';\nimport { clearNotifications, fetchNotifications } from '../../../store/notifications/actions';\nimport Saly8 from '../../../assets/images/Saly-8.png';\n\nimport ActivityItemGeneral from './ActivityItemGeneral';\nimport ActivityItemArticleOfWeek from './ActivityItemArticleOfWeek';\nimport ActivityItemNewVideo from './ActivityItemNewVideo';\nimport ActivityItemUpcomingAppointment from './ActivityItemUpcomingAppointment';\nimport ActivityItemTrainer from './ActivityItemTrainer';\nimport ActivityItemNewReport from './ActivityItemNewReport';\nimport { ACTIVITY_TYPES } from 'configs/constants';\nimport { Waypoint } from 'react-waypoint';\n\nconst { GENERAL, ARTICLE_OF_WEEK, NEW_VIDEO, UPCOMING_APPOINTMENT, TRAINER, NEW_REPORT } = ACTIVITY_TYPES;\n\n/**\n * Get Render Component from activity type\n */\nconst mappingType: any = {\n  [GENERAL]: ActivityItemGeneral,\n  [ARTICLE_OF_WEEK]: ActivityItemArticleOfWeek,\n  [NEW_VIDEO]: ActivityItemNewVideo,\n  [UPCOMING_APPOINTMENT]: ActivityItemUpcomingAppointment,\n  [TRAINER]: ActivityItemTrainer,\n  [NEW_REPORT]: ActivityItemNewReport,\n};\n\nconst Activities: React.FC<RouteComponentProps> = () => {\n  const notifications = useSelector((state: any) => state.notifications);\n  const dispatch = useDispatch();\n\n  const [modalDelete, setModalDelete] = useState({ show: false, all: false, id: '' });\n\n  /**\n   * Close the confirm popup\n   */\n  const handleCloseModalDelete = () => setModalDelete({ ...modalDelete, show: false });\n\n  /**\n   * Clear all notifications from redux when user confirmed and then close the popup\n   */\n  const clearActivities = () => {\n    clearNotifications(dispatch);\n    handleCloseModalDelete();\n  };\n\n  const handleLoadmore = () => {\n    if (notifications.loading || notifications.full) return;\n\n    fetchNotifications(dispatch, notifications.page + (notifications.page === 1 ? 2 : 1));\n  };\n\n  let renderItems;\n  if (notifications.data.length === 0) {\n    if (notifications.loading)\n      renderItems = (\n        <div className=\"hb-card d-flex align-items-center\" style={{ height: '80%', padding: '30px 0' }}>\n          <FrameLoading size=\"lg\" />\n        </div>\n      );\n    else\n      renderItems = (\n        <div className=\"activities-no-items\">\n          <div>Keine neuen</div>\n          <div>Benachrichtigungen</div>\n          <img src={Saly8} alt=\"saly-8\" />\n        </div>\n      );\n  } else\n    renderItems = (\n      <div className=\"hb-card\">\n        {notifications.data.map((item: ItemActivityType) => {\n          // Render is one of ACTIVITY_TYPES component, decide by item type\n          const Render = mappingType[item.type];\n          if (!Render) return <div />;\n\n          return <Render key={item.id} {...item} />;\n        })}\n      </div>\n    );\n\n  return (\n    <div className=\"Activities\">\n      <HBModalConfirm\n        show={modalDelete.show}\n        title=\"Alle löschen?\"\n        content=\"Sind sie sicher, dass sie alle Benachrichtigungen löschen wollen?\"\n        up=\"Ja, alle löschen\"\n        upCallback={clearActivities}\n        down=\"Nein, behalten\"\n        downCallback={handleCloseModalDelete}\n        handleClose={handleCloseModalDelete}\n      />\n      <div className=\"hb-mx-20\" style={{ visibility: notifications.data.length > 0 ? 'visible' : 'hidden' }}>\n        <div className=\"d-flex justify-content-between hb-my-28\">\n          <div />\n          <HBButtonSmall onClick={() => setModalDelete({ ...modalDelete, show: true })}>Alle löschen</HBButtonSmall>\n        </div>\n      </div>\n      <h1 className=\"d-flex\" style={{ color: 'white', justifyContent: 'center', alignItems: 'center' }}>\n        Aktivitäten {notifications.new > 0 && <div className=\"hb-activities-circle\">{notifications.new}</div>}\n      </h1>\n      {renderItems}\n      <Waypoint onEnter={handleLoadmore} />\n      {notifications.loading && notifications.page !== 0 && <FrameLoading size=\"lg\" />}\n    </div>\n  );\n};\n\nexport default Activities;\n"],"sourceRoot":""}