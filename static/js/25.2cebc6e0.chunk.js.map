{"version":3,"sources":["views/user/authContainers/Header.tsx","views/user/authContainers/Header.module.scss","views/user/authContainers/Container.tsx","views/user/authContainers/Container.module.scss","views/pages/recoveryPassword/RecoveryPassword.module.scss","views/pages/recoveryPassword/RecoveryPassword.tsx"],"names":["Header","className","styles","header","logoMain","module","exports","Container","props","children","wrapper","container","cardWrapper","cardBody","initialValues","password","passwordConfirmation","validationSchema","values","Yup","shape","min","matches","config","validate","validatePassword","oneOf","RecoveryPassword","dispatch","useDispatch","useState","show","setShow","query","URLSearchParams","location","search","email","get","code","type","timeExp","Number","history","useHistory","Date","getTime","to","pathname","state","forgotPasswordEmail","title","content","up","upCallback","push","onSubmit","payload","callback","body","activate_code","new_password","method","api","rest","confirmForgotPassword","JSON","stringify","loading","msg","messages","recoveryPasswordFailure","response","status","SUCCESS","callApiAction","errors","dirty","touched","handleChange","handleBlur","handleSubmit","isValid","color","onClick","btnSignUp","hbIcon","cardTitle","placeholder","invalid","maxLength","value","onBlur","onChange","e","target","includes","name","error","xs","disabled","btnClassName","btnSubmit"],"mappings":"uKASeA,IAJU,WACvB,OAAO,cAAC,IAAD,CAASC,UAAWC,IAAOC,OAA3B,SAAoCC,Q,oBCL7CC,EAAOC,QAAU,CAAC,OAAS,yB,sFCwBZC,IAfoB,SAACC,GAAW,IAAD,EACPA,EAA7BP,iBADoC,MACxB,GADwB,EACpBQ,EAAaD,EAAbC,SAExB,OACE,sBAAKR,UAAS,qEAAgEC,IAAOQ,QAAvE,YAAkFT,GAAhG,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAYA,UAAWC,IAAOS,UAA9B,SACE,qBAAKV,UAAWC,IAAOU,YAAvB,SACE,qBAAKX,UAAWC,IAAOW,SAAvB,SAAkCJ,a,oBCjB5CJ,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,6BAA6B,YAAc,+BAA+B,SAAW,8B,oBCAxJD,EAAOC,QAAU,CAAC,UAAY,oCAAoC,UAAY,oCAAoC,cAAgB,wCAAwC,kBAAoB,4CAA4C,aAAe,uCAAuC,MAAQ,gCAAgC,eAAiB,yCAAyC,UAAY,oCAAoC,cAAgB,wCAAwC,cAAgB,wCAAwC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,UAAY,oCAAoC,OAAS,iCAAiC,iBAAmB,2CAA2C,iBAAmB,6C,wKCYj0BQ,EAAgB,CACpBC,SAAU,GACVC,qBAAsB,IAGlBC,EAAmB,SAAUC,GACjC,OAAOC,MAAaC,MAAM,CACxBL,SAAUI,MACPE,IAAI,EAAG,yFACPC,QACCC,IAAOC,SAASC,mBAChB,yFAEJT,qBAAsBG,MACnBO,MAAM,CAACP,IAAQ,YAAa,MAAO,sEACnCG,QACCC,IAAOC,SAASC,mBAChB,4FAiIOE,UA5HyC,SAACnB,GAAW,IAAD,EAC3DoB,EAAWC,cADgD,EAGzCC,oBAAS,GAHgC,mBAG1DC,EAH0D,KAGpDC,EAHoD,KAK3DC,EAAQ,IAAIC,gBAAJ,UAAoB1B,EAAM2B,gBAA1B,aAAoB,EAAgBC,QAC5CC,EAAQJ,EAAMK,IAAI,SAClBC,EAAON,EAAMK,IAAI,QACjBE,EAAOP,EAAMK,IAAI,QACjBG,EAAUC,OAAOT,EAAMK,IAAI,aAAe,GAE1CK,EAAUC,cAgChB,OAAKP,GAAUE,GAASC,EAGpBC,GAAWA,GAAU,IAAII,MAAOC,UAAY,IAAO,EAC9C,cAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,WAAYC,MAAO,CAAEC,oBAAqBb,MAG3E,sBAAKpC,UAAU,SAAf,UACE,cAAC,IAAD,CACE8B,KAAMA,EACNoB,MAAM,mCACNC,QAAQ,sGACRC,GAAG,YACHC,WA3Cc,WAClBtB,GAASD,GACTY,EAAQY,KAAK,eA4CX,cAAC,IAAD,CAAetD,UAAU,0BAAzB,SACE,cAAC,IAAD,CAAQa,cAAeA,EAAeU,SAAUA,YAASP,GAAmBuC,SA1CjE,SAACtC,GAChB,IAjBeuC,EAAcC,EAiBvBC,EAAO,CACXtB,MAAOA,EACPuB,cAAerB,EACfsB,aAAc3C,EAAOF,sBApBRyC,EAuBb,CACEK,OAAQ,OACRC,IAAKxC,IAAOyC,KAAKC,wBACjBN,KAAMO,KAAKC,UAAUR,GACrBS,SAAS,EACTC,IAAK9C,IAAO+C,SAASC,yBA5BIb,EA8B3B,SAACc,GACoBA,EAAXC,SACOC,IACb1C,GAAQ,GAERW,EAAQY,KAAK,CAAEP,SAAU,WAAYC,MAAO,CAAEC,oBAAqBb,MAnCPT,EAAS+C,YAAclB,EAASC,KA0D9F,SACG,gBAAGxC,EAAH,EAAGA,OAAQ0D,EAAX,EAAWA,OAAiBC,GAA5B,EAAmBC,QAAnB,EAA4BD,OAAOE,EAAnC,EAAmCA,aAAcC,EAAjD,EAAiDA,WAAYC,EAA7D,EAA6DA,aAAcC,EAA3E,EAA2EA,QAA3E,OACC,eAAC,IAAD,CAAO1B,SAAUyB,EAAjB,UACE,eAAC,IAAD,CACEE,MAAM,SACNC,QAAS,WACPzC,EAAQY,KAAK,aAEftD,UAAWC,IAAOmF,UALpB,UAOE,mBAAGpF,UAAS,6BAAwBC,IAAOoF,UAP7C,gBASA,qBAAIrF,UAAWC,IAAOqF,UAAtB,qBAEE,uBAFF,qBAKA,cAAC,IAAD,CACE/C,KAAK,WACLgD,YAAY,iBACZC,QAA6B,KAApBvE,EAAOH,YAAqB6D,EAAO7D,SAC5C2E,UAAW,GACXC,MAAOzE,EAAOH,SACd6E,OAAQZ,EACRa,SAAU,SAACC,GACJA,EAAEC,OAAOJ,MAAMK,SAAS,MAAMjB,EAAae,IAElDG,KAAK,WACLC,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAQ7D,WAEjB,cAAC,IAAD,CACEyB,KAAK,WACLvC,UAAU,OACVuF,YAAY,yBACZC,QAAyC,KAAhCvE,EAAOF,wBAAiC4D,EAAO5D,qBACxD0E,UAAW,GACXC,MAAOzE,EAAOF,qBACd4E,OAAQZ,EACRa,SAAU,SAACC,GACJA,EAAEC,OAAOJ,MAAMK,SAAS,MAAMjB,EAAae,IAElDG,KAAK,uBACLC,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAQ5D,uBAEjB,cAAC,IAAD,CAAYf,UAAU,MAAtB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMkG,GAAG,KAAT,SACE,cAAC,IAAD,CACEhB,MAAM,SACN1E,SAAS,yBACT2F,WAAYlB,GAAWL,GACvBwB,aAAcnG,IAAOoG,6BApEJ,cAAC,IAAD,CAAUvD,GAAG","file":"static/js/25.2cebc6e0.chunk.js","sourcesContent":["import { CHeader } from '@coreui/react';\nimport React from 'react';\nimport { logoMain } from '../../../extensions';\nimport styles from './Header.module.scss';\n\nconst Header: React.FC = () => {\n  return <CHeader className={styles.header}>{logoMain}</CHeader>;\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Keph\"};","import React from 'react';\nimport { CContainer } from '@coreui/react';\nimport styles from './Container.module.scss';\nimport Header from './Header';\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n};\n\nconst Container: React.FC<Props> = (props) => {\n  const { className = '', children } = props;\n\n  return (\n    <div className={`hb-user c-app c-default-layout flex-row align-items-center ${styles.wrapper} ${className}`}>\n      <Header />\n      <CContainer className={styles.container}>\n        <div className={styles.cardWrapper}>\n          <div className={styles.cardBody}>{children}</div>\n        </div>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__z5goK\",\"container\":\"Container_container__3GmCQ\",\"cardWrapper\":\"Container_cardWrapper__17yG1\",\"cardBody\":\"Container_cardBody__1YCba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"RecoveryPassword_inputText__IQ0HW\",\"cardTitle\":\"RecoveryPassword_cardTitle__2wFt_\",\"inputPassword\":\"RecoveryPassword_inputPassword__R_774\",\"inputTextPassword\":\"RecoveryPassword_inputTextPassword__2xJwW\",\"iconPassword\":\"RecoveryPassword_iconPassword__GtpFv\",\"email\":\"RecoveryPassword_email__3-mkd\",\"forgotPassword\":\"RecoveryPassword_forgotPassword__3X128\",\"btnSubmit\":\"RecoveryPassword_btnSubmit__27Wye\",\"createAccount\":\"RecoveryPassword_createAccount__23mFE\",\"register_link\":\"RecoveryPassword_register_link__271-h\",\"header\":\"RecoveryPassword_header__DoI1C\",\"accept\":\"RecoveryPassword_accept__zFbdY\",\"link\":\"RecoveryPassword_link__1c03K\",\"btnSignUp\":\"RecoveryPassword_btnSignUp__na_j0\",\"hbIcon\":\"RecoveryPassword_hbIcon__13Jqe\",\"lbTermsOfService\":\"RecoveryPassword_lbTermsOfService__30ApV\",\"formGroupActions\":\"RecoveryPassword_formGroupActions__WgiS6\"};","import React, { useState } from 'react';\nimport { CCol, CForm, CRow, CFormGroup } from '@coreui/react';\nimport * as Yup from 'yup';\nimport { Redirect, RouteComponentProps, useHistory } from 'react-router-dom';\nimport config from '../../../config';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useDispatch } from 'react-redux';\nimport { validate } from '../../../utils';\nimport ContainerAuth from '../../user/authContainers/Container';\nimport { HBButton, HBButtonSmall, HBModalConfirm, HBFocusInput } from 'hbBaseClass';\nimport styles from './RecoveryPassword.module.scss';\nimport { Formik } from 'formik';\n\nconst initialValues = {\n  password: '',\n  passwordConfirmation: '',\n};\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    password: Yup.string()\n      .min(8, 'Ihr neues Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.')\n      .matches(\n        config.validate.validatePassword(),\n        'Ihr neues Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.',\n      ),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwort bestätigen stimmt nicht mit neuem Passwort überein.')\n      .matches(\n        config.validate.validatePassword(),\n        'Ihr neues Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.',\n      ),\n  });\n};\n\nconst RecoveryPassword: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n  const [show, setShow] = useState(false);\n\n  const query = new URLSearchParams(props.location?.search);\n  const email = query.get('email');\n  const code = query.get('code');\n  const type = query.get('type');\n  const timeExp = Number(query.get('time_exp') || 0);\n\n  const history = useHistory();\n\n  const handleClose = () => {\n    setShow(!show);\n    history.push('/sign-in');\n  };\n\n  const onSubmit = (values: { password: string; passwordConfirmation: string }) => {\n    const body = {\n      email: email,\n      activate_code: code,\n      new_password: values.passwordConfirmation,\n    };\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.confirmForgotPassword(),\n        body: JSON.stringify(body),\n        loading: true,\n        msg: config.messages.recoveryPasswordFailure,\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          setShow(true);\n        } else {\n          history.push({ pathname: '/sign-in', state: { forgotPasswordEmail: email } });\n        }\n      },\n    );\n  };\n\n  if (!email || !code || !type) return <Redirect to=\"/sign-in\" />;\n\n  // If the link is expired, redirect to sign in and open the popup\n  if (timeExp && timeExp - new Date().getTime() / 1000 < 0)\n    return <Redirect to={{ pathname: '/sign-in', state: { forgotPasswordEmail: email } }} />;\n\n  return (\n    <div className=\"petrol\">\n      <HBModalConfirm\n        show={show}\n        title=\"Passwort erfolgreich geändert\"\n        content=\"Ihr Passwort wurde erfolgreich geändert, Sie können sich nun mit dem neuen Passwort anmelden.\"\n        up=\"Zum Login\"\n        upCallback={handleClose}\n      />\n\n      <ContainerAuth className=\"FormAuth-container back\">\n        <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({ values, errors, touched, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n            <CForm onSubmit={handleSubmit}>\n              <HBButtonSmall\n                color=\"petrol\"\n                onClick={() => {\n                  history.push('/sign-in');\n                }}\n                className={styles.btnSignUp}\n              >\n                <i className={`hb-icon-arrow-left ${styles.hbIcon}`} /> Zurück\n              </HBButtonSmall>\n              <h1 className={styles.cardTitle}>\n                Passwort\n                <br />\n                zurücksetzen\n              </h1>\n              <HBFocusInput\n                type=\"password\"\n                placeholder=\"Neues Passwort\"\n                invalid={values.password !== '' && !!errors.password}\n                maxLength={16}\n                value={values.password}\n                onBlur={handleBlur}\n                onChange={(e: any) => {\n                  if (!e.target.value.includes(' ')) handleChange(e);\n                }}\n                name=\"password\"\n                error={errors?.password}\n              />\n              <HBFocusInput\n                type=\"password\"\n                className=\"mb-0\"\n                placeholder=\"Passwort bestätigen\"\n                invalid={values.passwordConfirmation !== '' && !!errors.passwordConfirmation}\n                maxLength={16}\n                value={values.passwordConfirmation}\n                onBlur={handleBlur}\n                onChange={(e: any) => {\n                  if (!e.target.value.includes(' ')) handleChange(e);\n                }}\n                name=\"passwordConfirmation\"\n                error={errors?.passwordConfirmation}\n              />\n              <CFormGroup className=\"m-0\">\n                <CRow>\n                  <CCol xs=\"12\">\n                    <HBButton\n                      color=\"violet\"\n                      children=\"Passwort aktualisieren\"\n                      disabled={!(isValid && dirty)}\n                      btnClassName={styles.btnSubmit}\n                    />\n                  </CCol>\n                </CRow>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </ContainerAuth>\n    </div>\n  );\n};\n\nexport default RecoveryPassword;\n"],"sourceRoot":""}