{"version":3,"sources":["views/admin/newsfeed/ModalCategory.tsx","views/admin/newsfeed/Newsfeed.tsx","views/admin/containers/FieldName.tsx"],"names":["validationSchema","values","Yup","shape","name","trim","required","ModalCategory","props","searchCategories","show","initialValues","callApi","formRef","useRef","useState","attention","setAttention","handleClose","current","resetForm","centered","onClose","closeOnBackdrop","onClick","dirty","className","size","style","textAlign","padding","display","justifyContent","width","color","md","innerRef","enableReinitialize","validate","onSubmit","body","type_key","method","api","config","rest","adminNewsfeedCategory","id","loading","status","SUCCESS","errors","touched","handleChange","handleBlur","handleSubmit","isValid","FieldName","label","type","placeholder","invalid","maxLength","value","onBlur","onChange","xs","disabled","Newsfeed","useApi","history","useHistory","topCategory","setTopCategory","fromDate","setFromDate","toDate","setToDate","searchName","setSearchName","data","total","page","totalPages","categories","setCategories","popupDeleteCategory","setPopupDeleteCategory","popupDeleteCategory2","setPopupDeleteCategory2","modalCategory","setModalCategory","fields","key","_style","paddingLeft","isDate","renderContent","item","height","checked","handleChangeCheckbox","total_article","push","variant","marginRight","getCategories","newPage","adminGetNewsfeedCategories","getTime","response","map","index","no","Math","ceil","useEffect","noItems","marginTop","isVisible","title","adminDeleteContent","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","callback","password","confirmPassword","handleDeleteCategory","Search","searchEmpty","callbackSearch","marginLeft","maxDate","Date","date","setDate","minDate","items","noItemsViewSlot","hover","striped","scopedSlots","renderFields","pagination","children","minWidth"],"mappings":"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","file":"static/js/62.076f6b69.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  CCol,\n  CRow,\n  CModalBody,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CForm,\n  CInput,\n  CInvalidFeedback,\n  CFormGroup,\n  CModalFooter,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { validate } from '../../../utils';\nimport config from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { CButtonClose, CModal, CModalHeader } from '../../../components';\nimport FieldName from '../containers/FieldName';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    name: Yup.string().trim().required('Category name is required'),\n  });\n};\n\ninterface Props {\n  searchCategories: () => void;\n  handleClose: () => void;\n  show: boolean;\n  initialValues: any;\n  callApi: any;\n}\n\nconst ModalCategory: React.FC<Props> = (props) => {\n  const { searchCategories, show, initialValues, callApi } = props;\n  const formRef = useRef<any>(null);\n\n  const onSubmit = (values: { name: string; description: string }) => {\n    const body = {\n      name: values.name.trim(),\n      type_key: initialValues.type_key,\n    };\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.adminNewsfeedCategory(initialValues.id),\n        body,\n        loading: true,\n      },\n      ({ status }: any) => {\n        if (status === SUCCESS) {\n          handleClose();\n          searchCategories();\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState(false);\n\n  const handleClose = () => {\n    formRef.current.resetForm();\n    props.handleClose();\n    setAttention(false);\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty) {\n      handleClose();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <CModal centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader>\n        Edit Category\n        <CButtonClose onClick={showAttention} />\n      </CModalHeader>\n      <CModalBody className=\"popup--update-user\">\n        <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n          <CModalBody style={{ textAlign: 'center', padding: 20 }}>\n            Are you sure you want to discard your changes?\n          </CModalBody>\n          <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n            <button className=\"btn btn-danger\" style={{ width: 120 }} color=\"danger\" onClick={handleClose}>\n              Discard\n            </button>\n            <button style={{ width: 120 }} className=\"btn btn-primary\" onClick={() => setAttention(false)}>\n              Keep Editing\n            </button>\n          </CModalFooter>\n        </CModal>\n\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"12\">\n            <CCardGroup>\n              <CCard className=\"popup--update-user__card--wrapper\">\n                <CCardBody>\n                  <Formik\n                    innerRef={formRef}\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    validate={validate(validationSchema)}\n                    onSubmit={onSubmit}\n                  >\n                    {({ values, errors, touched, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n                      <CForm onSubmit={handleSubmit}>\n                        <FieldName label=\"Category Name (*)\" width={140}>\n                          <CFormGroup className=\"m-0\">\n                            <CInput\n                              type=\"text\"\n                              placeholder=\"Category Name (*)\"\n                              invalid={values.name.trim() !== '' && touched.name && !!errors.name}\n                              maxLength={50}\n                              value={values.name}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              name=\"name\"\n                            />\n                            <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                          </CFormGroup>\n                        </FieldName>\n                        <CFormGroup className=\"mb-0\">\n                          <CRow>\n                            <CCol xs=\"12\" style={{ textAlign: 'right' }}>\n                              <CButton color=\"secondary\" className=\"px-4 mr-4\" onClick={handleClose}>\n                                Cancel\n                              </CButton>\n                              <CButton color=\"primary\" className=\"px-4\" type=\"submit\" disabled={!(isValid && dirty)}>\n                                Save\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        </CFormGroup>\n                      </CForm>\n                    )}\n                  </Formik>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default ModalCategory;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { CDataTable, CButton } from '@coreui/react';\nimport { ConfirmPopup, ConfirmPopupPassword, DatePicker } from '../../../components';\nimport Search from '../../../components/search/Search';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { adminDeleteContent, pagination, renderFields } from '../../../extensions';\nimport ModalCategory from './ModalCategory';\nimport { useApi } from 'store/callApi';\n\ntype CategoryDataType = {\n  no: number;\n  id: string;\n  name: string;\n  created_date: number;\n  type_key: 'top_topic' | null;\n  total_article: number;\n};\n\ntype CategoriesDataType = {\n  data: CategoryDataType[];\n  total: number;\n  page: number;\n  totalPages: number;\n  loading: boolean;\n};\n\nconst pageSize = 10;\n\nconst Newsfeed: React.FC<RouteComponentProps> = (props) => {\n  const { callApi } = useApi();\n  const history = useHistory();\n  const [topCategory, setTopCategory] = useState(false);\n  const [fromDate, setFromDate] = useState<any>(null);\n  const [toDate, setToDate] = useState<any>(null);\n  const [searchName, setSearchName] = useState('');\n\n  const [categories, setCategories] = useState<CategoriesDataType>({\n    data: [],\n    total: 0,\n    page: 1,\n    totalPages: 0,\n    loading: true,\n  });\n  const [popupDeleteCategory, setPopupDeleteCategory] = useState({ show: false, id: '', name: '' });\n  const [popupDeleteCategory2, setPopupDeleteCategory2] = useState({ show: false, id: '', name: '' });\n  const [modalCategory, setModalCategory] = useState<any>({\n    show: false,\n    initialValues: { name: '' },\n  });\n\n  const fields: any = [\n    { key: 'no', _style: { width: '15%', paddingLeft: 20 } },\n    { key: 'name', label: 'Category name', _style: { width: '30%' } },\n    { key: 'created_date', _style: { width: '15%' }, isDate: true },\n    {\n      key: 'top_category',\n      _style: { width: '15%', textAlign: 'center' },\n      renderContent: (item: any) => (\n        <input\n          style={{ width: 20, height: 20 }}\n          checked={item.type_key === 'top_topic'}\n          type=\"checkbox\"\n          onChange={() => handleChangeCheckbox(item)}\n        />\n      ),\n    },\n    {\n      key: 'total_article',\n      label: 'Number Of Articles',\n      _style: { width: '15%', textAlign: 'center' },\n      renderContent: (item: any) => {\n        const { total_article } = item;\n        const element =\n          total_article > 0 ? (\n            <div className=\"link\" onClick={() => history.push(`/admin/newsfeed/${item.id}`)}>\n              {total_article}\n            </div>\n          ) : (\n            <div>{total_article}</div>\n          );\n        return element;\n      },\n    },\n    {\n      key: 'action',\n      _style: { width: '15%', textAlign: 'center' },\n      renderContent: (item: any) => (\n        <>\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            shape=\"square\"\n            size=\"sm\"\n            style={{\n              marginRight: 10,\n            }}\n            onClick={() => setModalCategory({ show: true, initialValues: item })}\n          >\n            <i className=\"fas fa-pencil-alt\"> </i>\n          </CButton>\n          {/* <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            shape=\"square\"\n            size=\"sm\"\n            style={{\n              marginRight: 10,\n            }}\n            onClick={() => history.push(`/admin/newsfeed/${item.id}`)}\n          >\n            <i className=\"fas fa-eye\"> </i>\n          </CButton> */}\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            shape=\"square\"\n            size=\"sm\"\n            onClick={() => setPopupDeleteCategory({ show: true, id: item.id, name: item.name })}\n          >\n            <i className=\"fas fa-trash-alt\"> </i>\n          </CButton>\n        </>\n      ),\n    },\n  ];\n\n  const getCategories = (newPage: number, searchName: string) => {\n    setCategories({ ...categories, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.adminGetNewsfeedCategories(\n          newPage,\n          searchName,\n          topCategory,\n          fromDate ? fromDate.getTime() / 1000 : null,\n          toDate ? toDate.getTime() / 1000 + 86399 : null,\n        ),\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          setCategories({\n            data: data.categories.map((item: any, index: number) => {\n              return { ...item, no: index + 1 + pageSize * (newPage - 1) };\n            }),\n            total: data.total,\n            page: newPage,\n            totalPages: Math.ceil(data.total / pageSize),\n            loading: false,\n          });\n        } else {\n          setCategories((categories: any) => {\n            return { ...categories, loading: false };\n          });\n        }\n      },\n    );\n  };\n\n  const pageChange = (newPage: number) => {\n    if (categories.page !== newPage) {\n      getCategories(newPage, searchName);\n    }\n  };\n\n  useEffect(() => {\n    getCategories(1, searchName);\n  }, [fromDate, toDate, topCategory]);\n\n  const handleChangeCheckbox = (item: CategoryDataType) => {\n    setCategories({ ...categories, loading: true });\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.adminNewsfeedCategory(item.id),\n        body: {\n          name: item.name,\n          type_key: !item.type_key ? 'top_topic' : null,\n        },\n      },\n      (response: any) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          getCategories(categories.page, searchName);\n        } else {\n          setCategories({ ...categories, loading: false });\n        }\n      },\n    );\n  };\n\n  let noItems = <div />;\n\n  if (!categories.loading) {\n    if (!categories.total) noItems = <div>No items found</div>;\n  }\n\n  const handleDeleteCategory = (id: string, password: string) => {\n    setPopupDeleteCategory({ show: false, id: '', name: '' });\n    setCategories({ ...categories, loading: true });\n    callApi({ method: 'post', api: config.rest.confirmPassword(), body: { password } }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        callApi({ method: 'delete', api: config.rest.adminNewsfeedCategory(id) }, (response: any) => {\n          const { status } = response;\n          if (status === SUCCESS) {\n            getCategories(categories.page, searchName);\n          } else\n            setCategories((categories: any) => {\n              return { ...categories, loading: false };\n            });\n        });\n      } else\n        setCategories((categories: any) => {\n          return { ...categories, loading: false };\n        });\n    });\n  };\n\n  /**\n   * Close popup delete and show popup confirm password\n   */\n  const handleShowPopupConfirm = () => {\n    setPopupDeleteCategory({ ...popupDeleteCategory, show: false });\n    setPopupDeleteCategory2({ show: true, id: popupDeleteCategory.id, name: popupDeleteCategory.name });\n  };\n\n  return (\n    <div className=\"px-5 mx-3\" style={{ marginTop: 10 }}>\n      <ModalCategory\n        callApi={callApi}\n        {...modalCategory}\n        handleClose={() => setModalCategory({ ...modalCategory, show: false })}\n        searchCategories={() => getCategories(categories.page, searchName)}\n      />\n      <ConfirmPopup\n        isVisible={popupDeleteCategory.show}\n        title=\"Delete Category\"\n        renderContent={adminDeleteContent(\n          'Are you sure to delete the category',\n          popupDeleteCategory.name,\n          'If Yes, all articles in this category are also deleted immediately.',\n        )}\n        leftButtonText=\"No\"\n        rightButtonText=\"Yes\"\n        leftButtonOnPress={() => setPopupDeleteCategory({ ...popupDeleteCategory, show: false })}\n        rightButtonOnPress={handleShowPopupConfirm}\n      />\n      <ConfirmPopupPassword\n        isVisible={popupDeleteCategory2.show}\n        title=\"Delete Category\"\n        leftButtonText=\"Cancel\"\n        rightButtonText=\"Delete\"\n        type=\"category\"\n        name={popupDeleteCategory2.name}\n        callback={(password: string) => handleDeleteCategory(popupDeleteCategory2.id, password)}\n        handleClose={() => setPopupDeleteCategory2({ ...popupDeleteCategory2, show: false })}\n      />\n      <div>\n        <h2>All Categories</h2>\n        <div className=\"d-flex align-items-center mt-4 mb-5\">\n          <Search\n            className=\"mr-5\"\n            searchName={searchName}\n            setSearchName={setSearchName}\n            searchEmpty={true}\n            callbackSearch={(searchName: string) => getCategories(1, searchName)}\n          />\n          Filter by top category\n          <input\n            style={{ width: 20, height: 20, marginLeft: 20, marginRight: 50 }}\n            type=\"checkbox\"\n            checked={topCategory}\n            onChange={() => setTopCategory(!topCategory)}\n          />\n          <div>From date:</div>\n          <div>\n            <DatePicker maxDate={toDate || new Date()} date={fromDate} setDate={setFromDate} />\n          </div>\n          <div>To date:</div>\n          <div>\n            <DatePicker minDate={fromDate} date={toDate} setDate={setToDate} />\n          </div>\n        </div>\n      </div>\n      <div className=\"hb-table\">\n        <CDataTable\n          items={categories.data}\n          fields={fields}\n          loading={categories.loading}\n          noItemsViewSlot={noItems}\n          hover\n          striped\n          scopedSlots={renderFields(fields)}\n        />\n      </div>\n      {pagination(categories.totalPages, categories.page, pageChange, categories.total)}\n    </div>\n  );\n};\n\nexport default Newsfeed;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  centered?: boolean;\n  label: string;\n  width?: number;\n  style?: any;\n}\n\nconst FieldName: React.FC<Props> = (props) => {\n  let { className, label, children, width, centered, style } = props;\n  width = width || 110;\n\n  return (\n    <div className={`d-flex mb-3 ${centered ? 'align-items-center' : ''} ${className || ''}`} style={style}>\n      <div style={{ minWidth: width, marginTop: 6 }}>{label}</div>\n      <div style={{ width: `calc(100% - ${width}px)` }}>{children}</div>\n    </div>\n  );\n};\n\nexport default FieldName;\n"],"sourceRoot":""}