{"version":3,"sources":["views/user/authContainers/Header.tsx","views/user/authContainers/Header.module.scss","views/user/authContainers/Container.tsx","views/user/authContainers/Container.module.scss","views/user/signIn/SignInUser.module.scss","views/user/signIn/SignIn.tsx"],"names":["Header","className","styles","header","logoMain","module","exports","Container","props","children","wrapper","container","cardWrapper","cardBody","validationSchema","values","Yup","shape","email","trim","min","matches","config","validate","validateEmail","password","required","validatePassword","initialValues","SignIn","history","useHistory","callApi","useApi","dispatch","useDispatch","useState","show","title","content","upText","onClickUp","downText","onClickDown","popup","setPopup","location","state","forgotPasswordEmail","handleClose","useEffect","method","api","rest","forgotPasswordUser","loading","msg","messages","forgotPasswordFailure","hideCloseBtn","up","upCallback","down","downCallback","onSubmit","signInUser","body","signInFailure","response","id","status","data","SUCCESS","resendVerifyEmail","resendVerifyEmailFailure","text_de","group_name","dataExtra","setUserLS","signIn","push","errors","dirty","handleChange","handleBlur","handleSubmit","isValid","name","cardTitle","type","placeholder","autoComplete","invalid","maxLength","value","onBlur","onChange","e","target","includes","error","lastFormGroup","xs","label","lbForgotPwd","to","pathname","color","disabled","btnClassName","btnSubmit","lbCreateAccount","register_link"],"mappings":"uKASeA,IAJU,WACvB,OAAO,cAAC,IAAD,CAASC,UAAWC,IAAOC,OAA3B,SAAoCC,Q,oBCL7CC,EAAOC,QAAU,CAAC,OAAS,yB,sFCwBZC,IAfoB,SAACC,GAAW,IAAD,EACPA,EAA7BP,iBADoC,MACxB,GADwB,EACpBQ,EAAaD,EAAbC,SAExB,OACE,sBAAKR,UAAS,qEAAgEC,IAAOQ,QAAvE,YAAkFT,GAAhG,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAYA,UAAWC,IAAOS,UAA9B,SACE,qBAAKV,UAAWC,IAAOU,YAAvB,SACE,qBAAKX,UAAWC,IAAOW,SAAvB,SAAkCJ,a,oBCjB5CJ,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,6BAA6B,YAAc,+BAA+B,SAAW,8B,oBCAxJD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,cAAgB,kCAAkC,kBAAoB,sCAAsC,aAAe,iCAAiC,MAAQ,0BAA0B,gBAAkB,oCAAoC,YAAc,gCAAgC,UAAY,8BAA8B,cAAgB,kCAAkC,OAAS,2BAA2B,UAAY,8BAA8B,cAAgB,oC,wMCcpjBQ,EAAmB,SAAUC,GACjC,OAAOC,MAAaC,MAAM,CACxBC,MAAOF,MACJG,OACAC,IAAI,EAAG,wCACPC,QAAQC,IAAOC,SAASC,gBAAiB,wCAC5CC,SAAUT,MACPU,SAAS,mFACTN,IAAI,EAAG,mFACPC,QACCC,IAAOC,SAASI,mBAChB,sFAKFC,EAAgB,CACpBV,MAAO,GACPO,SAAU,IAkPGI,UA/O+B,SAACrB,GAC7C,IAAMsB,EAAUC,cACRC,EAAYC,cAAZD,QACFE,EAAWC,cAHsC,EAK7BC,mBAUvB,CACDC,MAAM,EACNC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,UAAW,aACXC,SAAU,GACVC,YAAa,aACbzB,MAAO,KAvB8C,mBAKhD0B,EALgD,KAKzCC,EALyC,OA0BlCrC,EAAbsC,SACAC,MACAC,QA5B+C,MA2BvC,CAAEA,oBAAqB,IA3BgB,GA4B/CA,oBAEFC,EAAc,WAClBJ,EAAS,2BAAKD,GAAN,IAAaP,MAAM,MAO7Ba,qBAAU,WAyBJF,GACFH,EAAS,CACPR,MAAM,EACNC,MAAO,iCACPC,QACE,iKACFrB,MAAO8B,EACPR,OAAQ,2BACRC,UA7ByB,WAC3BQ,IACAjB,EACE,CACEmB,OAAQ,MACRC,IAAK9B,IAAO+B,KAAKC,mBAAmBN,GACpCO,SAAS,EACTC,IAAKlC,IAAOmC,SAASC,wBAEvB,kBACEb,EAAS,CACPR,MAAM,EACNC,MAAO,cACPC,QACE,yHACFC,OAAQ,aACRC,UAAWQ,QAcfU,cAAc,MAGjB,IA+EH,OACE,qCACE,qBAAK1D,UAAU,SAAf,SACE,cAAC,IAAD,CACEoC,KAAMO,EAAMP,KACZY,YAAaA,EACbX,MAAOM,EAAMN,MACbC,QAASK,EAAML,QACfqB,GAAIhB,EAAMJ,OACVqB,WAAYjB,EAAMH,UAClBqB,KAAMlB,EAAMF,SACZqB,aAAcnB,EAAMD,YACpBgB,aAAcf,EAAMe,iBAIxB,cAAC,IAAD,CAAe1D,UAAU,qBAAzB,SACE,cAAC,IAAD,CAAQ2B,cAAeA,EAAeL,SAAUA,YAAST,GAAmBkD,SA1EjE,SAACjD,GAChBiB,EACE,CACEmB,OAAQ,OACRC,IAAK9B,IAAO+B,KAAKY,aACjBC,KAAMnD,EACNwC,SAAS,EACTC,IAAKlC,IAAOmC,SAASU,gBAEvB,SAACC,GAAc,IACLC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACpB,GAAID,IAAWE,IAEF,OAAPH,GACFxB,EAAS,CACPR,MAAM,EACNC,MAAO,uBACPC,QACE,uIACFrB,MAAOH,EAAOG,MACdsB,OAAQ,0BACRC,UAAWQ,EACXP,SAAU,mCACVC,YAAa,kBA3CTzB,EA2CsBH,EAAOG,OAAS,QA1CpDc,EACE,CACEmB,OAAQ,MACRC,IAAK9B,IAAO+B,KAAKoB,kBAAkBvD,GACnCsC,IAAKlC,IAAOmC,SAASiB,yBACrBnB,SAAS,IAEX,YAAkB,IAAfoB,EAAc,EAAdA,QACD9B,EAAS,CACPR,MAAM,EACNC,MAAO,cACPC,QAASoC,EACTnC,OAAQ,aACRC,UAAWQ,OAdJ,IAAC/B,KA6CG,OAAPmD,GAAsB,OAAPA,GACjBxB,EAAS,CACPR,MAAM,EACNC,MAAO,uBACPC,QAAS,yEACTC,OAAQ,0BACRC,UAAWQ,IAEJ,OAAPoB,GACFxB,EAAS,CACPR,MAAM,EACNC,MAAO,uBACPC,QACE,0GACFC,OAAQ,0BACRC,UAAWQ,QAEV,CACL,IAAIH,EAAW,YACJ,OAAPuB,EAAavB,EAAW,gBACC,UAApByB,EAAKK,YAA8C,cAApBL,EAAKK,aAC3C9B,EAAW,eAEb,IAAM+B,EAAS,2BAAQN,GAAR,IAAcrD,MAAOH,EAAOG,QAC3C4D,YAAUD,GACV3C,EAAS6C,YAAOF,IAChB/C,EAAQkD,KAAKlC,QAuBf,SACG,gBAAG/B,EAAH,EAAGA,OAAQkE,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,WAAYC,EAApD,EAAoDA,aAAcC,EAAlE,EAAkEA,QAAlE,OACC,eAAC,IAAD,CAAOC,KAAK,SAASvB,SAAUqB,EAA/B,UACE,oBAAIpF,UAAWC,IAAOsF,UAAtB,6DACA,cAAC,IAAD,CACEC,KAAK,QACLC,YAAY,SACZC,aAAa,QACbC,QAA0B,KAAjB7E,EAAOG,SAAkB+D,EAAO/D,MACzCqE,KAAK,QACLM,UAAW,GACXC,MAAO/E,EAAOG,MACd6E,OAAQX,EACRY,SAAU,SAACC,GACJA,EAAEC,OAAOJ,MAAMK,SAAS,MAAMhB,EAAac,IAElDG,MAAK,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAQ/D,QAEjB,cAAC,IAAD,CACEjB,UAAU,OACVwF,KAAK,WACLC,YAAY,WACZE,QAA6B,KAApB7E,EAAOU,YAAqBwD,EAAOxD,SAC5CkE,aAAa,mBACbE,UAAW,GACXC,MAAO/E,EAAOU,SACdsE,OAAQX,EACRY,SAAU,SAACC,GACJA,EAAEC,OAAOJ,MAAMK,SAAS,MAAMhB,EAAac,IAElDV,KAAK,WACLa,MAAK,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAQxD,WAEjB,eAAC,IAAD,CAAYxB,UAAWC,IAAOmG,cAA9B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKrG,UAAS,UAAKC,IAAOqG,MAAZ,YAAqBrG,IAAOsG,aAAnD,SACE,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,mBAAoB3D,OAAO,GAAjD,qCAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAMuD,GAAG,KAAT,SACE,cAAC,IAAD,CACEK,MAAM,SACNlG,SAAS,QACTmG,WAAYtB,GAAWJ,GACvB2B,aAAc3G,IAAO4G,gBAI3B,cAAC,IAAD,UACE,cAAC,IAAD,CAAMR,GAAG,KAAT,SACE,sBAAKrG,UAAS,UAAKC,IAAOqG,MAAZ,YAAqBrG,IAAO6G,iBAA1C,UACE,wDACA,cAAC,IAAD,CAAMN,GAAI,CAAEC,SAAU,WAAY3D,OAAO,GAAQ9C,UAAWC,IAAO8G,cAAnE","file":"static/js/27.28646340.chunk.js","sourcesContent":["import { CHeader } from '@coreui/react';\nimport React from 'react';\nimport { logoMain } from '../../../extensions';\nimport styles from './Header.module.scss';\n\nconst Header: React.FC = () => {\n  return <CHeader className={styles.header}>{logoMain}</CHeader>;\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Keph\"};","import React from 'react';\nimport { CContainer } from '@coreui/react';\nimport styles from './Container.module.scss';\nimport Header from './Header';\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n};\n\nconst Container: React.FC<Props> = (props) => {\n  const { className = '', children } = props;\n\n  return (\n    <div className={`hb-user c-app c-default-layout flex-row align-items-center ${styles.wrapper} ${className}`}>\n      <Header />\n      <CContainer className={styles.container}>\n        <div className={styles.cardWrapper}>\n          <div className={styles.cardBody}>{children}</div>\n        </div>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__z5goK\",\"container\":\"Container_container__3GmCQ\",\"cardWrapper\":\"Container_cardWrapper__17yG1\",\"cardBody\":\"Container_cardBody__1YCba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"SignInUser_inputText__C1ONK\",\"email\":\"SignInUser_email__1aAO4\",\"inputPassword\":\"SignInUser_inputPassword__2mdRO\",\"inputTextPassword\":\"SignInUser_inputTextPassword__33kNS\",\"iconPassword\":\"SignInUser_iconPassword__15b61\",\"label\":\"SignInUser_label__2av2Z\",\"lbCreateAccount\":\"SignInUser_lbCreateAccount__17aKA\",\"lbForgotPwd\":\"SignInUser_lbForgotPwd__3Wl1o\",\"btnSubmit\":\"SignInUser_btnSubmit__2jYaW\",\"register_link\":\"SignInUser_register_link__3ujmB\",\"header\":\"SignInUser_header__1wp3R\",\"cardTitle\":\"SignInUser_cardTitle__25-RI\",\"lastFormGroup\":\"SignInUser_lastFormGroup__1sScs\"};","import React, { useEffect, useState } from 'react';\nimport { Link, RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { CCol, CForm, CRow, CFormGroup } from '@coreui/react';\nimport * as Yup from 'yup';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { signIn } from '../../../store/auth/actions';\nimport config from '../../../config';\nimport { setUserLS, validate } from '../../../utils';\nimport styles from './SignInUser.module.scss';\nimport { HBButton, HBModalConfirm, HBFocusInput } from 'hbBaseClass';\nimport ContainerAuth from '../authContainers/Container';\nimport { useApi } from 'store/callApi';\nimport { Formik } from 'formik';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .min(3, 'Das E-Mail Format ist nicht korrekt.')\n      .matches(config.validate.validateEmail(), 'Das E-Mail Format ist nicht korrekt.'),\n    password: Yup.string()\n      .required('Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.')\n      .min(8, 'Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.')\n      .matches(\n        config.validate.validatePassword(),\n        'Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.',\n      ),\n  });\n};\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst SignIn: React.FC<RouteComponentProps> = (props) => {\n  const history = useHistory();\n  const { callApi } = useApi();\n  const dispatch = useDispatch();\n\n  const [popup, setPopup] = useState<{\n    show: boolean;\n    title: string;\n    content: string;\n    upText: string;\n    onClickUp: () => void;\n    downText?: string;\n    onClickDown?: () => void;\n    email?: string;\n    hideCloseBtn?: boolean;\n  }>({\n    show: false,\n    title: '',\n    content: '',\n    upText: '',\n    onClickUp: () => {},\n    downText: '',\n    onClickDown: () => {},\n    email: '',\n  });\n\n  const { location } = props;\n  const { state = { forgotPasswordEmail: '' } }: any = location;\n  const { forgotPasswordEmail } = state;\n\n  const handleClose = () => {\n    setPopup({ ...popup, show: false });\n  };\n\n  /**\n   * Check whether sign-in is redirected from recovery-password\n   * If yes, show resend email popup\n   */\n  useEffect(() => {\n    /**\n     * Close resend popup and call api forgot password\n     */\n    const resendForgotPassword = () => {\n      handleClose();\n      callApi(\n        {\n          method: 'get',\n          api: config.rest.forgotPasswordUser(forgotPasswordEmail),\n          loading: true,\n          msg: config.messages.forgotPasswordFailure,\n        },\n        () =>\n          setPopup({\n            show: true,\n            title: 'Information',\n            content:\n              'Wir haben Ihnen gerade eine E-Mail gesendet. Bitte folgen Sie den Anweisungen dort, um Ihr Passwort zurückzusetzen.',\n            upText: 'Verstanden',\n            onClickUp: handleClose,\n          }),\n      );\n    };\n\n    if (forgotPasswordEmail)\n      setPopup({\n        show: true,\n        title: 'Zurücksetzen fehlgeschlagen',\n        content:\n          'Dieser Link ist abgelaufen. Bitte klicken Sie auf die Schaltfläche unten und wir senden Ihnen einen Link, damit Sie Ihr Passwort zurücksetzen können.',\n        email: forgotPasswordEmail,\n        upText: 'Passwort zurücksetzen',\n        onClickUp: resendForgotPassword,\n        hideCloseBtn: true,\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const resend = (email: string) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.resendVerifyEmail(email),\n        msg: config.messages.resendVerifyEmailFailure,\n        loading: true,\n      },\n      ({ text_de }) => {\n        setPopup({\n          show: true,\n          title: 'Information',\n          content: text_de,\n          upText: 'Verstanden',\n          onClickUp: handleClose,\n        });\n      },\n    );\n  };\n\n  const onSubmit = (values: { email: string; password: string }) => {\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.signInUser(),\n        body: values,\n        loading: true,\n        msg: config.messages.signInFailure,\n      },\n      (response) => {\n        const { id, status, data } = response;\n        if (status !== SUCCESS) {\n          // id 22 => email has not been verified\n          if (id === '22')\n            setPopup({\n              show: true,\n              title: 'Login fehlgeschlagen',\n              content:\n                'Ihre Mailadresse wurde noch nicht bestätigt. Bitte bestätigen Sie Ihre Mailadresse indem Sie auf den Aktivierungslink klicken.',\n              email: values.email,\n              upText: 'Zurück zur Anmeldung',\n              onClickUp: handleClose,\n              downText: 'Aktivierungslink erneut zusenden',\n              onClickDown: () => resend(values.email || ''),\n            });\n          if (id === '28' || id === '23')\n            setPopup({\n              show: true,\n              title: 'Login fehlgeschlagen',\n              content: 'Ungültige Mailadresse oder Passwort. Bitte versuchen Sie es erneut.',\n              upText: 'Zurück zur Anmeldung',\n              onClickUp: handleClose,\n            });\n          if (id === '26')\n            setPopup({\n              show: true,\n              title: 'Login fehlgeschlagen',\n              content:\n                'Ihr Account wurde gesperrt. Bitte kontaktieren Sie unseren Kundenservice um den Account freizuschalten.',\n              upText: 'Zurück zur Anmeldung',\n              onClickUp: handleClose,\n            });\n        } else {\n          let location = '/newsfeed';\n          if (id === '21') location = '/init-profile';\n          else if (data.group_name === 'nurse' || data.group_name === 'assistant') {\n            location = '/consulting';\n          }\n          const dataExtra = { ...data, email: values.email };\n          setUserLS(dataExtra);\n          dispatch(signIn(dataExtra));\n          history.push(location);\n        }\n      },\n    );\n  };\n\n  return (\n    <>\n      <div className=\"petrol\">\n        <HBModalConfirm\n          show={popup.show}\n          handleClose={handleClose}\n          title={popup.title}\n          content={popup.content}\n          up={popup.upText}\n          upCallback={popup.onClickUp}\n          down={popup.downText}\n          downCallback={popup.onClickDown}\n          hideCloseBtn={popup.hideCloseBtn}\n        />\n      </div>\n\n      <ContainerAuth className=\"FormAuth-container\">\n        <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({ values, errors, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n            <CForm name=\"signIn\" onSubmit={handleSubmit}>\n              <h1 className={styles.cardTitle}>Herzlich willkommen, schön dass Sie da sind!</h1>\n              <HBFocusInput\n                type=\"email\"\n                placeholder=\"E-Mail\"\n                autoComplete=\"email\"\n                invalid={values.email !== '' && !!errors.email}\n                name=\"email\"\n                maxLength={50}\n                value={values.email}\n                onBlur={handleBlur}\n                onChange={(e: any) => {\n                  if (!e.target.value.includes(' ')) handleChange(e);\n                }}\n                error={errors?.email}\n              />\n              <HBFocusInput\n                className=\"mb-0\"\n                type=\"password\"\n                placeholder=\"Passwort\"\n                invalid={values.password !== '' && !!errors.password}\n                autoComplete=\"current-password\"\n                maxLength={16}\n                value={values.password}\n                onBlur={handleBlur}\n                onChange={(e: any) => {\n                  if (!e.target.value.includes(' ')) handleChange(e);\n                }}\n                name=\"password\"\n                error={errors?.password}\n              />\n              <CFormGroup className={styles.lastFormGroup}>\n                <CRow>\n                  <CCol xs=\"12\" className={`${styles.label} ${styles.lbForgotPwd}`}>\n                    <Link to={{ pathname: '/forgot-password', state: true }}>Passwort vergessen?</Link>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <HBButton\n                      color=\"violet\"\n                      children=\"Login\"\n                      disabled={!(isValid && dirty)}\n                      btnClassName={styles.btnSubmit}\n                    />\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <div className={`${styles.label} ${styles.lbCreateAccount}`}>\n                      <span>Noch keinen Account?</span>\n                      <Link to={{ pathname: '/sign-up', state: true }} className={styles.register_link}>\n                        Hier Registrieren\n                      </Link>\n                    </div>\n                  </CCol>\n                </CRow>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </ContainerAuth>\n    </>\n  );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}