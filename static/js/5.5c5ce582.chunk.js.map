{"version":3,"sources":["views/admin/users/Users.tsx"],"names":["LoginSchema","Yup","shape","email","required","password","Users","t","useTranslation","useModalConfirm","showModalConfirm","hideModalConfirm","callApi","useApi","updateProfile","useAuth","useState","status","setStatus","appointmentType","setAppointmentType","amount","setAmount","time","setTime","amountOK","setAmountOK","loading","setLoading","interval","useRef","formik","useFormik","initialValues","validationSchema","onSubmit","method","api","body","data","axios","defaults","headers","common","id_token","full_name","first_name","last_name","avatar_url","avatar","errors","values","handleSubmit","getFieldProps","isValid","stop","a","clearInterval","current","amountOK1","i","title","content","confirm","text","action","className","direction","alignItems","justifyContent","mb","variant","gutterBottom","style","maxWidth","margin","value","autoComplete","noValidate","spacing","my","type","label","invalid","error","toString","disabled","fullWidth","size","display","flexDirection","minWidth","mr","width","onChange","e","target","name","marginRight","onClick","newAmount","Number","newTime","newAppointmentType","setInterval","begin","Math","ceil","Date","getTime","end","appointment_type","result_survey","undefined","relatives","appointment_time_begin","appointment_time_end","cost","selected_treatments_id","customer_gender","phone_number","street","postcode","no","place","x","newX","color"],"mappings":"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","file":"static/js/5.5c5ce582.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Stack, Button, Container, Typography, Select, MenuItem, FormLabel, Box, FilledInput } from '@material-ui/core';\r\nimport { FocusInput, LoadingButton, MaterialIcon, Page, Table } from 'components';\r\nimport { RowType, TableFieldsType } from 'components/table/row/Row';\r\nimport { useApi, useAuth, useModalConfirm } from 'extensions/hooks';\r\nimport { adminAPIs } from 'extensions/configs';\r\nimport { DEFAULT_PAGE_SIZE } from 'extensions/constants';\r\nimport { addNo } from 'extensions/utilities';\r\nimport ModalUser from './ModalUser';\r\nimport { useTranslation } from 'react-i18next';\r\nimport * as Yup from 'yup';\r\nimport './Users.scss';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport axios from 'axios';\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email('email_not_valid').required(),\r\n  password: Yup.string().required(),\r\n});\r\n\r\nconst Users: React.FC<RouteComponentProps> = () => {\r\n  const { t } = useTranslation();\r\n  const { showModalConfirm, hideModalConfirm } = useModalConfirm();\r\n  const { callApi } = useApi();\r\n  const { updateProfile } = useAuth();\r\n  const email = 'lehuong.hp9794@gmail.com';\r\n  const password = 'Admin@1234';\r\n  const [status, setStatus] = useState(0);\r\n  const [appointmentType, setAppointmentType] = useState(1);\r\n  const [amount, setAmount] = useState(15);\r\n  const [time, setTime] = useState(15);\r\n  const [amountOK, setAmountOK] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const interval = useRef<any>();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email,\r\n      password,\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: ({ email, password }) => {\r\n      setLoading(true);\r\n      callApi({ method: 'post', api: 'user/auth/signin', body: { email, password } }, ({ status, data }) => {\r\n        setLoading(false);\r\n        if (status) {\r\n          axios.defaults.headers.common['Authorization'] = data.id_token;\r\n          updateProfile({\r\n            ...data,\r\n            email,\r\n            full_name: data.first_name + ' ' + data.last_name,\r\n            avatar_url: data.avatar,\r\n          });\r\n          setStatus(1);\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  const { errors, values, handleSubmit, getFieldProps, isValid } = formik;\r\n\r\n  const stop = async () => {\r\n    setLoading(false);\r\n    clearInterval(interval.current);\r\n    let amountOK1 = 0;\r\n    await setAmountOK((i) => {\r\n      amountOK1 = i;\r\n      return i;\r\n    });\r\n    showModalConfirm({\r\n      title: 'Thông Báo',\r\n      content: `Đã book thành công ${amountOK1} trong tổng số ${amount} appointments!`,\r\n      confirm: {\r\n        text: 'OK',\r\n        action: () => hideModalConfirm(),\r\n      },\r\n    });\r\n  };\r\n\r\n  const book = () => {\r\n    setAmountOK(0);\r\n    const newAmount = Number(amount);\r\n    const newTime = Number(time) * 60;\r\n    const newAppointmentType = Number(appointmentType);\r\n    setLoading(true);\r\n    let i = 0;\r\n    interval.current = setInterval(() => {\r\n      let begin = Math.ceil(new Date().getTime() / 1000 / newTime + i) * newTime;\r\n      let end = begin + newTime;\r\n      const a = {\r\n        appointment_type: Number(appointmentType),\r\n        result_survey: newAppointmentType === 1 ? {} : undefined,\r\n        relatives:\r\n          newAppointmentType === 1\r\n            ? [\r\n                {\r\n                  email: 'nguyenkhanhsl1997@gmail.com',\r\n                  first_name: 'Khanh',\r\n                  last_name: 'Nguyen',\r\n                },\r\n              ]\r\n            : undefined,\r\n        appointment_time_begin: begin,\r\n        appointment_time_end: end,\r\n        cost: 54.0,\r\n        selected_treatments_id: newAppointmentType === 1 ? 2 : undefined,\r\n        customer_gender: 0,\r\n        phone_number: '+843456789',\r\n        street: 'Ha Noi',\r\n        postcode: '0809',\r\n        no: '0809',\r\n        place: '0809',\r\n      };\r\n      callApi({ method: 'post', api: 'consulting/appointments', body: a }, () => {\r\n        setAmountOK((x) => {\r\n          const newX = x + 1;\r\n          if (newX >= newAmount) stop();\r\n          return newX;\r\n        });\r\n      });\r\n      i += 1;\r\n      if (i >= newAmount) clearInterval(interval.current);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"User Management\" className=\"Users-page\">\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Tự động book lịch by khanh.nguyen@boot.ai\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <div style={{ maxWidth: 500, margin: '0 auto' }}>\r\n          {status === 0 ? (\r\n            <FormikProvider value={formik}>\r\n              <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <Stack spacing={3} my={3}>\r\n                  <FocusInput\r\n                    autoComplete=\"email\"\r\n                    type=\"email\"\r\n                    label={t('email')}\r\n                    {...getFieldProps('email')}\r\n                    invalid={!!values.email && !!errors.email}\r\n                    error={t(errors.email?.toString() || '')}\r\n                    disabled={loading}\r\n                  />\r\n\r\n                  <FocusInput\r\n                    autoComplete=\"new-password\"\r\n                    label={t('password')}\r\n                    {...getFieldProps('password')}\r\n                    invalid={!!values.password && !!errors.password}\r\n                    error={t(errors.password?.toString() || '')}\r\n                    disabled={loading}\r\n                  />\r\n                </Stack>\r\n\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  disabled={!isValid}\r\n                >\r\n                  {t('login')}\r\n                </LoadingButton>\r\n              </Form>\r\n            </FormikProvider>\r\n          ) : (\r\n            <div>\r\n              <Stack my={3} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box style={{ minWidth: 100 }} mr={3}>\r\n                  <FormLabel>Book cho:</FormLabel>\r\n                </Box>\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  value={appointmentType}\r\n                  onChange={(e: any) => setAppointmentType(e.target.value)}\r\n                >\r\n                  <MenuItem value={1}>Nurse</MenuItem>\r\n                  <MenuItem value={2}>Assistant</MenuItem>\r\n                </Select>\r\n              </Stack>\r\n              <Stack my={3} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box style={{ minWidth: 100 }} mr={3}>\r\n                  <FormLabel>Thời gian:</FormLabel>\r\n                </Box>\r\n                <Select style={{ width: '100%' }} value={time} onChange={(e: any) => setTime(e.target.value)}>\r\n                  <MenuItem value={15}>15 phút</MenuItem>\r\n                  <MenuItem value={30}>30 phút</MenuItem>\r\n                  <MenuItem value={45}>45 phút</MenuItem>\r\n                  <MenuItem value={60}>1 tiếng</MenuItem>\r\n                </Select>\r\n              </Stack>\r\n              <Stack my={3} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box style={{ minWidth: 100 }} mr={3}>\r\n                  <FormLabel style={{ width: 100 }}>Số lượng:</FormLabel>\r\n                </Box>\r\n                <FocusInput\r\n                  type=\"number\"\r\n                  label=\"Số lượng\"\r\n                  value={amount.toString()}\r\n                  onChange={(e: any) => setAmount(e.target.value)}\r\n                  name=\"amount\"\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n              <Stack display=\"flex\" flexDirection=\"row\" my={3}>\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  style={{ marginRight: 20 }}\r\n                  onClick={book}\r\n                >\r\n                  Book\r\n                </LoadingButton>\r\n                <LoadingButton\r\n                  loading={false}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  disabled={!loading}\r\n                  onClick={stop}\r\n                >\r\n                  Dừng\r\n                </LoadingButton>\r\n              </Stack>\r\n              {loading && (\r\n                <Stack display=\"flex\" flexDirection=\"row\">\r\n                  <Box style={{ minWidth: 100 }} mr={3}>\r\n                    <FormLabel style={{ width: 100 }}>\r\n                      Đã book được {amountOK}/{amount} appointments\r\n                    </FormLabel>\r\n                  </Box>\r\n                </Stack>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}