{"version":3,"sources":["views/user/authContainers/Header.tsx","views/user/authContainers/Header.module.scss","views/user/authContainers/Container.tsx","views/user/authContainers/Container.module.scss","views/user/signUp/SignUpUser.module.scss","views/user/signUp/SignUp.tsx"],"names":["Header","className","styles","header","logoMain","module","exports","Container","props","children","wrapper","container","cardWrapper","cardBody","validationSchema","values","Yup","shape","first_name","trim","min","required","last_name","email","matches","config","validate","validateEmail","password","validatePassword","accept","test","value","initialValues","SignUp","callApi","useApi","history","useHistory","handleClose","setPopup","popup","show","useState","title","content","upText","onClickUp","downText","onClickDown","type","isChoosing","user","setUser","createTitle","createForm","handleBlur","handleChange","touched","errors","isValid","dirty","groupSignIn","color","btnClassName","btnSubmit","onClick","placeholder","name","capitalizeWords","onBlur","onChange","e","valueTypingExpressionsName","maxLength","invalid","error","autoComplete","target","includes","formGroupActions","env","ENVS","PRD","label","lbSignIn","register_link","disabled","variant","custom","id","htmlFor","style","textAlign","to","link","up","upCallback","down","downCallback","onSubmit","body","method","api","rest","signUpUser","loading","msg","messages","signUpFailure","response","status","SUCCESS","push","handleSubmit","btnSignUp","hbIcon","cardTitle"],"mappings":"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","file":"static/js/28.070cb591.chunk.js","sourcesContent":["import { CHeader } from '@coreui/react';\nimport React from 'react';\nimport { logoMain } from '../../../extensions';\nimport styles from './Header.module.scss';\n\nconst Header: React.FC = () => {\n  return <CHeader className={styles.header}>{logoMain}</CHeader>;\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Keph\"};","import React from 'react';\nimport { CContainer } from '@coreui/react';\nimport styles from './Container.module.scss';\nimport Header from './Header';\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n};\n\nconst Container: React.FC<Props> = (props) => {\n  const { className = '', children } = props;\n\n  return (\n    <div className={`hb-user c-app c-default-layout flex-row align-items-center ${styles.wrapper} ${className}`}>\n      <Header />\n      <CContainer className={styles.container}>\n        <div className={styles.cardWrapper}>\n          <div className={styles.cardBody}>{children}</div>\n        </div>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__z5goK\",\"container\":\"Container_container__3GmCQ\",\"cardWrapper\":\"Container_cardWrapper__17yG1\",\"cardBody\":\"Container_cardBody__1YCba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"SignUpUser_inputText__1_ibK\",\"cardTitle\":\"SignUpUser_cardTitle__3KxiO\",\"inputPassword\":\"SignUpUser_inputPassword__2wzGu\",\"inputTextPassword\":\"SignUpUser_inputTextPassword__2wQu_\",\"iconPassword\":\"SignUpUser_iconPassword__2uJJJ\",\"email\":\"SignUpUser_email__3QMor\",\"label\":\"SignUpUser_label__14OlA\",\"lbSignIn\":\"SignUpUser_lbSignIn__3jWpe\",\"forgotPassword\":\"SignUpUser_forgotPassword__WCh_8\",\"btnSubmit\":\"SignUpUser_btnSubmit___tE0Q\",\"register_link\":\"SignUpUser_register_link__2eacL\",\"header\":\"SignUpUser_header__10W6t\",\"accept\":\"SignUpUser_accept__3DmGX\",\"link\":\"SignUpUser_link__30v3P\",\"btnSignUp\":\"SignUpUser_btnSignUp__3dnva\",\"hbIcon\":\"SignUpUser_hbIcon__1KLdE\",\"formGroupActions\":\"SignUpUser_formGroupActions__31zMk\",\"groupSignIn\":\"SignUpUser_groupSignIn__xHJSC\"};","import React, { useState } from 'react';\nimport { CForm, CFormGroup, CLabel, CInputCheckbox } from '@coreui/react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport config, { env, ENVS } from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { capitalizeWords, validate } from '../../../utils';\nimport styles from './SignUpUser.module.scss';\nimport { HBButton, HBButtonSmall, HBFocusInput, HBModalConfirm } from 'hbBaseClass';\nimport ContainerAuth from '../authContainers/Container';\nimport { useApi } from 'store/callApi';\nimport { Formik } from 'formik';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    first_name: Yup.string()\n      .trim()\n      .min(1, 'Der Vorname muss mindestens 1 Zeichen und weniger als 50 Zeichen lang sein.')\n      .required('Der Vorname muss mindestens 1 Zeichen und weniger als 50 Zeichen lang sein.'),\n    //.matches(/[A-Za-z_äöüÄÖÜùûüÿàâæéèêëïîôœÙÛÜŸÀÂÆÉÈÊËÏÎÔŒ' ]{\\(1),\\(50)}/,'Invalid First Name'),\n    last_name: Yup.string()\n      .trim()\n      .min(1, 'Der Nachname muss mindestens 1 Zeichen und weniger als 50 Zeichen lang sein.')\n      .required('Der Nachname muss mindestens 1 Zeichen und weniger als 50 Zeichen lang sein.'),\n    email: Yup.string()\n      .min(3, 'Das E-Mail Format ist nicht korrekt.')\n      // .matches(/[\\S]+@([\\w-]+\\.)+[\\w-]{2,}/, 'email-format-is-incorrect')\n      .matches(config.validate.validateEmail(), 'Das E-Mail Format ist nicht korrekt.')\n      .required('E-Mail ist erforderlich'),\n    password: Yup.string()\n      .required('Ihr Passwort muss mindestens 8 Zeichen lang sein und einen Buchstaben und eine Zahl enthalten.')\n      .min(8, 'Ihr Passwort muss mindestens 8 Zeichen lang sein und einen Buchstaben und eine Zahl enthalten.')\n      .matches(\n        config.validate.validatePassword(),\n        'Ihr Passwort muss mindestens 8 Zeichen lang sein und einen Buchstaben und eine Zahl enthalten.',\n      ),\n    accept: Yup.bool()\n      .required('* required')\n      .test('accept', 'Sie müssen unsere Allgemeinen Geschäftsbedingungen akzeptieren', (value) => value === true),\n  });\n};\n\nconst initialValues = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n  accept: false,\n};\n\nconst USER = 0;\nconst NURSE = 1;\nconst ASSISTANT = 2;\n\nconst SignUp: React.FC<RouteComponentProps> = (props) => {\n  const { callApi } = useApi();\n  const history = useHistory();\n\n  const handleClose = () => setPopup({ ...popup, show: false });\n\n  const [popup, setPopup] = useState<{\n    show: boolean;\n    title: string;\n    content: string;\n    upText: string;\n    onClickUp: () => void;\n    downText?: string;\n    onClickDown?: () => void;\n  }>({\n    show: false,\n    title: '',\n    content: '',\n    upText: '',\n    onClickUp: () => {},\n    downText: '',\n    onClickDown: () => {},\n  });\n\n  const [user, setUser] = useState({ type: USER, isChoosing: false });\n\n  const onSubmit = (values: { first_name: string; last_name: string; email: string; password: string }) => {\n    const body = {\n      first_name: values.first_name.trim(),\n      last_name: values.last_name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n      type: user.type === USER ? 'user' : user.type === NURSE ? 'nurse' : 'assistant',\n      // customer_id: 'asdasd'\n    };\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.signUpUser(),\n        body: body,\n        loading: true,\n        msg: config.messages.signUpFailure,\n      },\n      (response) => {\n        const { id, status } = response;\n        if (status === SUCCESS) history.push('/zur-app');\n        else {\n          if (id === '2') {\n            setPopup({\n              show: true,\n              title: 'Registrierung fehlgeschlagen',\n              content: 'Diese E-Mail existiert bereits. Bitte wählen Sie eine andere E-Mail.',\n              upText: 'Zurück zur Registrierung',\n              onClickUp: handleClose,\n            });\n          }\n        }\n      },\n    );\n  };\n\n  /**\n   * create title funtion to check role user,nurse,assistant\n   * render title by role\n   * @param user\n   * @returns\n   */\n  const createTitle = (user: any) => {\n    let title;\n    if (user.isChoosing) {\n      title = 'Wollen sie sich als Pflegeberater/in oder als Assistent/in registrieren?';\n    } else if (user.type === USER) {\n      title = 'Registrierung\\nNutzer';\n    } else if (user.type === NURSE) {\n      title = 'Registrierung Pflegeberater/in';\n    } else title = 'Registrierung Assitent/in';\n    return title;\n  };\n\n  /**\n   *\n   * Create form function to check role user, nurse, assistant\n   * Render form by role\n   * @param user\n   * @param values\n   * @param handleBlur\n   * @param handleChange\n   * @param touched\n   * @param errors\n   * @param isValid\n   * @param dirty\n   * @returns\n   */\n  const createForm = (\n    user: any,\n    values: any,\n    handleBlur: any,\n    handleChange: any,\n    touched: any,\n    errors: any,\n    isValid: any,\n    dirty: any,\n  ) => {\n    let form;\n    if (user.isChoosing) {\n      form = (\n        <>\n          <div className={styles.groupSignIn}>\n            <HBButton\n              type=\"button\"\n              color=\"violet\"\n              children=\"Pflegeberater/in\"\n              btnClassName={styles.btnSubmit}\n              onClick={() => setUser({ type: NURSE, isChoosing: false })}\n            />\n            <HBButton\n              type=\"button\"\n              color=\"violet\"\n              children=\"Assitent/in\"\n              btnClassName={styles.btnSubmit}\n              onClick={() => setUser({ type: ASSISTANT, isChoosing: false })}\n            />\n          </div>\n        </>\n      );\n    } else {\n      form = (\n        <>\n          <HBFocusInput\n            placeholder=\"Vorname\"\n            name=\"first_name\"\n            value={capitalizeWords(values.first_name)}\n            onBlur={handleBlur}\n            onChange={(e) => {\n              if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n            }}\n            maxLength={50}\n            invalid={values.first_name.trim() !== '' && !!errors.first_name}\n            required\n            error={errors?.first_name}\n          />\n          <HBFocusInput\n            placeholder=\"Nachname\"\n            name=\"last_name\"\n            value={capitalizeWords(values.last_name)}\n            onBlur={handleBlur}\n            onChange={(e) => {\n              if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n            }}\n            maxLength={50}\n            invalid={values.last_name.trim() !== '' && !!errors.last_name}\n            required\n            error={errors?.last_name}\n          />\n          <HBFocusInput\n            type=\"email\"\n            placeholder=\"E-Mail\"\n            name=\"email\"\n            autoComplete=\"off\"\n            maxLength={50}\n            value={values.email}\n            onBlur={handleBlur}\n            onChange={(e: any) => {\n              if (!e.target.value.includes(' ')) handleChange(e);\n            }}\n            invalid={values.email !== '' && !!errors.email}\n            required\n            error={errors?.email}\n          />\n          <HBFocusInput\n            type=\"password\"\n            className=\"mb-0\"\n            autoComplete=\"new-password\"\n            placeholder=\"Passwort\"\n            name=\"password\"\n            maxLength={16}\n            value={values.password}\n            onBlur={handleBlur}\n            onChange={(e: any) => {\n              if (!e.target.value.includes(' ')) handleChange(e);\n            }}\n            invalid={values.password !== '' && !!errors.password}\n            required\n            error={errors?.password}\n          />\n          <CFormGroup className={`noMarginBottom ${styles.formGroupActions}`}>\n            {env !== ENVS.PRD && (\n              <div className={`${styles.label} ${styles.lbSignIn}`}>\n                <span>\n                  {user.type !== USER ? 'Sie sind Nutzer/in?' : 'Sie sind Pflegeberater/in oder Assistent/in?'}\n                </span>\n                <span\n                  onClick={() =>\n                    user.type !== USER\n                      ? setUser({ type: USER, isChoosing: false })\n                      : setUser({ ...user, isChoosing: true })\n                  }\n                  className={styles.register_link}\n                >\n                  Hier anmelden\n                </span>\n              </div>\n            )}\n            <div>\n              <HBButton\n                color=\"violet\"\n                children=\"Registrieren\"\n                disabled={!(isValid && dirty)}\n                btnClassName={styles.btnSubmit}\n              />\n            </div>\n          </CFormGroup>\n          <CFormGroup variant=\"custom-checkbox\" className={`${styles.label} ${styles.accept}`}>\n            <CInputCheckbox\n              custom\n              id=\"accept\"\n              required\n              // valid={!errors.accept}\n              invalid={touched.accept && !!errors.accept}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <CLabel variant=\"custom-checkbox\" htmlFor=\"accept\" style={{ textAlign: 'left' }}>\n              Mit Ihrer Registrierung akzeptieren Sie unsere{' '}\n              <Link to=\"#\" className={styles.link}>\n                Nutzungsbedinungen\n              </Link>{' '}\n              und{' '}\n              <Link to=\"#\" className={styles.link}>\n                AGBs\n              </Link>\n              .\n            </CLabel>\n          </CFormGroup>\n        </>\n      );\n    }\n    return form;\n  };\n\n  return (\n    <ContainerAuth className=\"FormAuth-container signUp back\">\n      <div className=\"petrol\">\n        <HBModalConfirm\n          show={popup.show}\n          handleClose={handleClose}\n          title={popup.title}\n          content={popup.content}\n          up={popup.upText}\n          upCallback={popup.onClickUp}\n          down={popup.downText}\n          downCallback={popup.onClickDown}\n        />\n      </div>\n\n      <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n        {({ values, errors, touched, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n          <CForm onSubmit={handleSubmit} name=\"signUp\" autoComplete=\"off\">\n            <HBButtonSmall\n              type=\"button\"\n              color=\"petrol\"\n              onClick={() => {\n                user.isChoosing ? setUser({ type: USER, isChoosing: false }) : history.push('/sign-in');\n              }}\n              className={styles.btnSignUp}\n            >\n              <i className={`hb-icon-arrow-left ${styles.hbIcon}`} /> Zurück\n            </HBButtonSmall>\n\n            <h1 className={styles.cardTitle}>{createTitle(user)}</h1>\n            {createForm(user, values, handleBlur, handleChange, touched, errors, isValid, dirty)}\n          </CForm>\n        )}\n      </Formik>\n    </ContainerAuth>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}