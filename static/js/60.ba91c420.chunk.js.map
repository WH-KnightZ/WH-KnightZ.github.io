{"version":3,"sources":["views/admin/consulting/ModalCategory.tsx","views/admin/consulting/Categories.tsx","views/admin/containers/FieldName.tsx"],"names":["validationSchema","values","Yup","shape","title_treatments","trim","required","ModalCategory","props","searchCategories","show","initialValues","callApi","type","formRef","useRef","useState","attention","setAttention","handleClose","current","resetForm","centered","onClose","closeOnBackdrop","onClick","dirty","className","size","style","textAlign","padding","display","justifyContent","width","color","md","innerRef","enableReinitialize","validate","onSubmit","body","description","method","api","config","rest","adminConsultingCategory","id","loading","status","SUCCESS","errors","touched","handleChange","handleBlur","handleSubmit","isValid","FieldName","label","placeholder","invalid","maxLength","value","onBlur","onChange","name","rows","xs","disabled","Categories","useApi","data","total","page","totalPages","categories","setCategories","modalCategory","setModalCategory","popupDeleteCategory","setPopupDeleteCategory","popupDeleteCategory2","setPopupDeleteCategory2","searchName","setSearchName","fields","key","_style","isDate","renderContent","item","variant","marginRight","useEffect","getCategories","noItems","newPage","adminGetConsultingCategories","response","map","index","no","Math","ceil","marginTop","isVisible","title","adminDeleteContent","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","callback","password","confirmPassword","handleDeleteCategory","marginBottom","Search","searchEmpty","callbackSearch","items","noItemsViewSlot","hover","striped","scopedSlots","renderFields","pagination","children","minWidth"],"mappings":"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","file":"static/js/60.ba91c420.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  CCol,\n  CRow,\n  CModalBody,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CForm,\n  CInput,\n  CInvalidFeedback,\n  CFormGroup,\n  CTextarea,\n  CModalFooter,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { validate } from '../../../utils';\nimport config from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { CButtonClose, CModal, CModalHeader } from '../../../components';\nimport FieldName from '../containers/FieldName';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    title_treatments: Yup.string().trim().required('Category name is required'),\n  });\n};\n\ninterface Props {\n  type: 'create' | 'update';\n  searchCategories: () => void;\n  handleClose: () => void;\n  show: boolean;\n  initialValues: any;\n  callApi: any;\n}\n\nconst ModalCategory: React.FC<Props> = (props) => {\n  const { searchCategories, show, initialValues, callApi, type } = props;\n  const formRef = useRef<any>(null);\n\n  const onSubmit = (values: { title_treatments: string; description: string }) => {\n    const body = {\n      title_treatments: values.title_treatments.trim(),\n      description: values.description.trim(),\n    };\n    callApi(\n      {\n        method: type === 'create' ? 'post' : 'put',\n        api: config.rest.adminConsultingCategory(initialValues.id),\n        body,\n        loading: true,\n      },\n      ({ status }: any) => {\n        if (status === SUCCESS) {\n          handleClose();\n          searchCategories();\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState(false);\n\n  const handleClose = () => {\n    formRef.current.resetForm();\n    props.handleClose();\n    setAttention(false);\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty) {\n      handleClose();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <CModal centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader>\n        {type === 'create' ? 'Create New' : 'Edit'} Category\n        <CButtonClose onClick={showAttention} />\n      </CModalHeader>\n      <CModalBody className=\"popup--update-user\">\n        <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n          <CModalBody style={{ textAlign: 'center', padding: 20 }}>Are you sure you want to discard your changes?</CModalBody>\n          <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n            <button className=\"btn btn-danger\" style={{ width: 120 }} color=\"danger\" onClick={handleClose}>\n              Discard\n            </button>\n            <button style={{ width: 120 }} className=\"btn btn-primary\" onClick={() => setAttention(false)}>\n              Keep Editing\n            </button>\n          </CModalFooter>\n        </CModal>\n\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"12\">\n            <CCardGroup>\n              <CCard className=\"popup--update-user__card--wrapper\">\n                <CCardBody>\n                  <Formik\n                    innerRef={formRef}\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    validate={validate(validationSchema)}\n                    onSubmit={onSubmit}\n                  >\n                    {({ values, errors, touched, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n                      <CForm onSubmit={handleSubmit}>\n                        <FieldName label=\"Category Name (*)\" width={140}>\n                          <CFormGroup className=\"m-0\">\n                            <CInput\n                              type=\"text\"\n                              placeholder=\"Category Name (*)\"\n                              invalid={\n                                values.title_treatments.trim() !== '' &&\n                                touched.title_treatments &&\n                                !!errors.title_treatments\n                              }\n                              maxLength={100}\n                              value={values.title_treatments}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              name=\"title_treatments\"\n                            />\n                            <CInvalidFeedback>{errors.title_treatments}</CInvalidFeedback>\n                          </CFormGroup>\n                        </FieldName>\n                        <FieldName label=\"Description\" width={140}>\n                          <CTextarea\n                            type=\"text\"\n                            placeholder=\"Description\"\n                            maxLength={1000}\n                            value={values.description}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            name=\"description\"\n                            rows={5}\n                          />\n                        </FieldName>\n                        <CFormGroup className=\"mb-0\">\n                          <CRow>\n                            <CCol xs=\"12\" style={{ textAlign: 'right' }}>\n                              <CButton color=\"secondary\" className=\"px-4 mr-4\" onClick={handleClose}>\n                                Cancel\n                              </CButton>\n                              <CButton color=\"primary\" className=\"px-4\" type=\"submit\" disabled={!(isValid && dirty)}>\n                                {type === 'create' ? 'Create' : 'Save'}\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        </CFormGroup>\n                      </CForm>\n                    )}\n                  </Formik>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default ModalCategory;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CDataTable, CButton } from '@coreui/react';\nimport ModalCategory from './ModalCategory';\nimport { ConfirmPopup, ConfirmPopupPassword } from '../../../components';\nimport Search from '../../../components/search/Search';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { adminDeleteContent, pagination, renderFields } from '../../../extensions';\nimport { useApi } from 'store/callApi';\n\nconst initialValues = {\n  title_treatments: '',\n  description: '',\n};\n\ntype CategoryDataType = {\n  id: string;\n  no: number;\n  title_treatments: string;\n  description: string;\n  created_date: number;\n  diseases_number: number;\n};\n\ntype CategoriesDataType = {\n  data: CategoryDataType[];\n  total: number;\n  page: number;\n  totalPages: number;\n  loading: boolean;\n};\n\nconst pageSize = 10;\n\nconst Categories: React.FC<RouteComponentProps> = (props) => {\n  const { callApi } = useApi();\n\n  const [categories, setCategories] = useState<CategoriesDataType>({\n    data: [],\n    total: 0,\n    page: 1,\n    totalPages: 0,\n    loading: true,\n  });\n  const [modalCategory, setModalCategory] = useState<any>({\n    show: false,\n    initialValues: initialValues,\n    type: 'create',\n  });\n  const [popupDeleteCategory, setPopupDeleteCategory] = useState({ show: false, id: '', name: '' });\n  const [popupDeleteCategory2, setPopupDeleteCategory2] = useState({ show: false, id: '', name: '' });\n  const [searchName, setSearchName] = useState('');\n\n  const fields = [\n    { key: 'no', _style: { width: '4%' } },\n    { key: 'title_treatments', label: 'Category Name', _style: { width: '24%' } },\n    { key: 'description', _style: { width: '24%' } },\n    { key: 'created_date', _style: { width: '12%' }, isDate: true },\n    { key: 'diseases_number', label: 'Number Of Consultation Topics', _style: { width: '18%' } },\n    {\n      key: 'action',\n      _style: { width: '10%' },\n      renderContent: (item: any) => (\n        <>\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            shape=\"square\"\n            size=\"sm\"\n            style={{\n              marginRight: 10,\n            }}\n            onClick={() => setPopupDeleteCategory({ show: true, id: item.id, name: item.title_treatments })}\n          >\n            <i className=\"fas fa-trash-alt\"> </i>\n          </CButton>\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            shape=\"square\"\n            size=\"sm\"\n            onClick={() => setModalCategory({ show: true, type: 'update', initialValues: item })}\n          >\n            <i className=\"fas fa-pencil-alt\"> </i>\n          </CButton>\n        </>\n      ),\n    },\n  ];\n\n  const pageChange = (newPage: number) => {\n    if (categories.page !== newPage) {\n      getCategories(newPage, searchName);\n    }\n  };\n\n  useEffect(() => {\n    getCategories(1, searchName);\n  }, []);\n\n  let noItems = <div />;\n\n  if (!categories.loading) {\n    if (!categories.total) noItems = <div>No results</div>;\n  }\n\n  const getCategories = (newPage: number, searchName: string) => {\n    setCategories({ ...categories, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.adminGetConsultingCategories(newPage, searchName),\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          setCategories({\n            data: data.categories.map((item: any, index: number) => {\n              return { ...item, no: index + 1 + pageSize * (newPage - 1) };\n            }),\n            page: newPage,\n            total: data.total,\n            totalPages: Math.ceil(data.total / pageSize),\n            loading: false,\n          });\n        } else {\n          setCategories((categories: any) => {\n            return { ...categories, loading: false };\n          });\n        }\n      },\n    );\n  };\n\n  const handleDeleteCategory = (id: string, password: string) => {\n    setPopupDeleteCategory({ ...popupDeleteCategory, show: false });\n    setCategories({ ...categories, loading: true });\n    callApi({ method: 'post', api: config.rest.confirmPassword(), body: { password } }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        callApi({ method: 'delete', api: config.rest.adminConsultingCategory(id) }, (response: any) => {\n          const { status } = response;\n          if (status === SUCCESS) {\n            getCategories(categories.page, searchName);\n          } else\n            setCategories((categories: any) => {\n              return { ...categories, loading: false };\n            });\n        });\n      } else\n        setCategories((categories: any) => {\n          return { ...categories, loading: false };\n        });\n    });\n  };\n\n  return (\n    <div className=\"px-5 mx-3\" style={{ marginTop: 10 }}>\n      <ModalCategory\n        callApi={callApi}\n        {...modalCategory}\n        handleClose={() => setModalCategory({ ...modalCategory, show: false })}\n        searchCategories={() => getCategories(categories.page, searchName)}\n      />\n      <ConfirmPopup\n        isVisible={popupDeleteCategory.show}\n        title=\"Delete Category\"\n        renderContent={adminDeleteContent(\n          'Are you sure to delete the category',\n          popupDeleteCategory.name,\n          'If yes, all the diseases in this category are also deleted immediately!',\n        )}\n        leftButtonText=\"No\"\n        rightButtonText=\"Yes\"\n        leftButtonOnPress={() => setPopupDeleteCategory({ ...popupDeleteCategory, show: false })}\n        rightButtonOnPress={() => {\n          setPopupDeleteCategory2({ show: true, id: popupDeleteCategory.id, name: popupDeleteCategory.name });\n          setPopupDeleteCategory({ ...popupDeleteCategory, show: false });\n        }}\n      />\n      <ConfirmPopupPassword\n        isVisible={popupDeleteCategory2.show}\n        title=\"Delete Category\"\n        leftButtonText=\"Cancel\"\n        rightButtonText=\"Delete\"\n        type=\"category\"\n        name={popupDeleteCategory2.name}\n        callback={(password: string) => handleDeleteCategory(popupDeleteCategory2.id, password)}\n        handleClose={() => setPopupDeleteCategory2({ ...popupDeleteCategory2, show: false })}\n      />\n      <div>\n        <h2>Category Management</h2>\n        <div className=\"d-flex align-items-center justify-content-between mt-4\" style={{ marginBottom: '2.4rem' }}>\n          <Search\n            className=\"mr-5\"\n            searchName={searchName}\n            setSearchName={setSearchName}\n            searchEmpty={true}\n            callbackSearch={(searchName: string) => getCategories(1, searchName)}\n          />\n          <CButton color=\"primary\" onClick={() => setModalCategory({ type: 'create', show: true, initialValues })}>\n            Add new category\n          </CButton>\n        </div>\n      </div>\n      <div className=\"hb-table\">\n        <CDataTable\n          items={categories.data}\n          fields={fields}\n          loading={categories.loading}\n          noItemsViewSlot={noItems}\n          hover\n          striped\n          scopedSlots={renderFields(fields)}\n        />\n      </div>\n      {pagination(categories.totalPages, categories.page, pageChange, categories.total)}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  centered?: boolean;\n  label: string;\n  width?: number;\n  style?: any;\n}\n\nconst FieldName: React.FC<Props> = (props) => {\n  let { className, label, children, width, centered, style } = props;\n  width = width || 110;\n\n  return (\n    <div className={`d-flex mb-3 ${centered ? 'align-items-center' : ''} ${className || ''}`} style={style}>\n      <div style={{ minWidth: width, marginTop: 6 }}>{label}</div>\n      <div style={{ width: `calc(100% - ${width}px)` }}>{children}</div>\n    </div>\n  );\n};\n\nexport default FieldName;\n"],"sourceRoot":""}